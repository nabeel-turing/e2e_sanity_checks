[
  {
    "name": "dispatch_media_attachment",
    "description": "Send a file such as a picture, raw audio, video or document via WhatsApp to the specified recipient.\n\nThis function sends various types of media files (images, videos, documents, audio) to a WhatsApp contact or group.\nThe file type is automatically detected based on the file extension and MIME type.",
    "parameters": {
      "type": "object",
      "properties": {
        "media_recipient_id": {
          "type": "string",
          "description": "The recipient - either a phone number with country code but no + or other symbols, or a JID (e.g., \"123456789@s.whatsapp.net\" or a group JID like \"123456789@g.us\")."
        },
        "local_file_path": {
          "type": "string",
          "description": "The absolute path to the media file to send."
        },
        "media_caption_text": {
          "type": "string",
          "description": "Optional caption text to accompany the media file."
        }
      },
      "required": [
        "local_file_path",
        "media_recipient_id"
      ]
    }
  },
  {
    "name": "fetch_direct_message_thread",
    "description": "Get WhatsApp chat metadata by sender phone number.\n\nThis function retrieves metadata for a direct WhatsApp chat associated with a\nspecific sender's phone number.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_phone_number": {
          "type": "string",
          "description": "The phone number to search for."
        }
      },
      "required": [
        "user_phone_number"
      ]
    }
  },
  {
    "name": "find_conversations",
    "description": "Get WhatsApp chats matching specified criteria.\n\nThis function retrieves WhatsApp chats based on specified criteria.\nThese criteria include an optional search term to filter chats by name or\nJID, a limit on the maximum number of chats to return, a page number\nfor pagination, an option to include the last message in each chat,\nand a field to sort results by (either \"last_active\" or \"name\").",
    "parameters": {
      "type": "object",
      "properties": {
        "search_filter": {
          "type": "string",
          "description": "Optional search term to filter chats by name or JID.\nDefaults to None."
        },
        "max_chats_to_return": {
          "type": "integer",
          "description": "Maximum number of chats to return. Defaults to 20."
        },
        "current_page_number": {
          "type": "integer",
          "description": "Page number for pagination. Defaults to 0."
        },
        "with_last_message_preview": {
          "type": "boolean",
          "description": "Whether to include the last message in each chat.\nDefaults to True."
        },
        "sort_order_key": {
          "type": "string",
          "description": "Field to sort results by, either \"last_active\" or \"name\".\nDefaults to \"last_active\"."
        }
      }
    }
  },
  {
    "name": "get_conversation_around_message",
    "description": "Get context around a specific WhatsApp message.\n\nThis function retrieves context around a specific WhatsApp message. It allows specifying the number of messages to fetch before and after the identified target message, aiding in understanding the conversation flow around that particular message.",
    "parameters": {
      "type": "object",
      "properties": {
        "central_message_id": {
          "type": "string",
          "description": "The ID of the message to get context for."
        },
        "number_of_previous_messages": {
          "type": "integer",
          "description": "Number of messages to include before the target message. Defaults to 5."
        },
        "number_of_subsequent_messages": {
          "type": "integer",
          "description": "Number of messages to include after the target message. Defaults to 5."
        }
      },
      "required": [
        "central_message_id"
      ]
    }
  },
  {
    "name": "get_conversation_details",
    "description": "Get WhatsApp chat metadata by JID.\n\nThis function retrieves metadata for a WhatsApp chat identified by its\nJabber Identifier (JID). It can also include the last message of the\nchat if specified.",
    "parameters": {
      "type": "object",
      "properties": {
        "conversation_identifier": {
          "type": "string",
          "description": "The JID of the chat to retrieve."
        },
        "retrieve_last_message_data": {
          "type": "boolean",
          "description": "Whether to include the last message (default True)."
        }
      },
      "required": [
        "conversation_identifier"
      ]
    }
  },
  {
    "name": "get_latest_message_with_contact",
    "description": "Gets the most recent WhatsApp message involving the contact.\n\nThis function gets the most recent WhatsApp message that was either sent to\nor received from the contact specified by the JID.",
    "parameters": {
      "type": "object",
      "properties": {
        "contact_jabber_identifier": {
          "type": "string",
          "description": "The JID of the contact to search for."
        }
      },
      "required": [
        "contact_jabber_identifier"
      ]
    }
  },
  {
    "name": "list_conversations_with_contact",
    "description": "Get all WhatsApp chats involving the contact.\n\nThis function retrieves all WhatsApp chats that involve the contact specified by their JID.\nThe number of chats returned can be controlled using `limit`, and `page` allows for\nfetching subsequent sets of chats.",
    "parameters": {
      "type": "object",
      "properties": {
        "target_contact_jid": {
          "type": "string",
          "description": "The contact's JID to search for."
        },
        "results_per_page": {
          "type": "integer",
          "description": "Maximum number of chats to return. Defaults to 20."
        },
        "page_index": {
          "type": "integer",
          "description": "Page number for pagination. Defaults to 0."
        }
      },
      "required": [
        "target_contact_jid"
      ]
    }
  },
  {
    "name": "locate_contacts",
    "description": "Search WhatsApp contacts by name or phone number.\n\nThis function searches WhatsApp contacts by name or phone number.\nIt uses the provided query term to match against contact names or phone numbers.",
    "parameters": {
      "type": "object",
      "properties": {
        "search_term": {
          "type": "string",
          "description": "Search term to match against contact names or phone numbers."
        }
      },
      "required": [
        "search_term"
      ]
    }
  },
  {
    "name": "post_text_message",
    "description": "Send a WhatsApp message to a person or group.\n\nThis function sends a WhatsApp message to a specified person or group.\nFor group chats, the JID (Jabber ID) must be used as the recipient identifier.\nYou can optionally reply to a specific message by providing its message ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "receiver_identifier": {
          "type": "string",
          "description": "The recipient - either a phone number with country code\nbut no + or other symbols, or a JID (e.g.,\n'123456789@s.whatsapp.net' or a group JID like\n'123456789@g.us')."
        },
        "message_body_text": {
          "type": "string",
          "description": "The message text to send."
        },
        "reply_target_message_id": {
          "type": "string",
          "description": "The ID of the message to reply to. If provided,\nthe new message will be sent as a reply to the specified message."
        }
      },
      "required": [
        "message_body_text",
        "receiver_identifier"
      ]
    }
  },
  {
    "name": "query_message_history",
    "description": "Get WhatsApp messages matching specified criteria with optional context.",
    "parameters": {
      "type": "object",
      "properties": {
        "from_datetime": {
          "type": "string",
          "description": "ISO 8601 datetime string. Only return messages after this time."
        },
        "to_datetime": {
          "type": "string",
          "description": "ISO 8601 datetime string. Only return messages before this time."
        },
        "message_sender_phone": {
          "type": "string",
          "description": "Filter messages by sender's phone number."
        },
        "filter_by_chat_jid": {
          "type": "string",
          "description": "Filter messages by chat JID (must contain '@')."
        },
        "message_text_query": {
          "type": "string",
          "description": "Search for messages containing this text (case-insensitive)."
        },
        "result_set_size": {
          "type": "integer",
          "description": "Maximum number of messages to return. Defaults to 20."
        },
        "pagination_page_number": {
          "type": "integer",
          "description": "Page number for pagination (0-based). Defaults to 0."
        },
        "add_message_context": {
          "type": "boolean",
          "description": "Whether to include surrounding messages. Defaults to True."
        },
        "leading_context_size": {
          "type": "integer",
          "description": "Number of messages to include before each match. Defaults to 1."
        },
        "trailing_context_size": {
          "type": "integer",
          "description": "Number of messages to include after each match. Defaults to 1."
        }
      }
    }
  },
  {
    "name": "save_media_from_message",
    "description": "Download media from a WhatsApp message and get the local file path.\n\nThis function downloads media content from a specific WhatsApp message. It uses the provided message ID and chat JID to locate the message, attempts to retrieve its media, and if successful, saves the media to a local file. The function then returns a dictionary detailing the outcome of this operation, including the success status, a message, and the path to the downloaded file.",
    "parameters": {
      "type": "object",
      "properties": {
        "message_with_media_id": {
          "type": "string",
          "description": "The ID of the message containing the media."
        },
        "origin_chat_jid": {
          "type": "string",
          "description": "The JID of the chat containing the message."
        }
      },
      "required": [
        "message_with_media_id",
        "origin_chat_jid"
      ]
    }
  },
  {
    "name": "send_voice_recording",
    "description": "Send any audio file as a WhatsApp audio message to the specified recipient.\n\nFor group messages, the JID is used for the recipient. If an error occurs due to ffmpeg not being installed or conversion failing, an attempt is made to send the original file as a generic audio message. The function sends the audio file specified by `media_path`; this file is converted to Opus .ogg if it is not already a .ogg file.",
    "parameters": {
      "type": "object",
      "properties": {
        "audio_message_destination": {
          "type": "string",
          "description": "The recipient - either a phone number with country code but no + or other symbols, or a JID (e.g., \"123456789@s.whatsapp.net\" or a group JID like \"123456789@g.us\")."
        },
        "path_to_audio_file": {
          "type": "string",
          "description": "The absolute path to the audio file to send (will be converted to Opus .ogg if it's not a .ogg file)."
        }
      },
      "required": [
        "audio_message_destination",
        "path_to_audio_file"
      ]
    }
  }
]