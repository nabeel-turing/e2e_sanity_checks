[
  {
    "name": "abort_workflow_execution",
    "description": "Cancel a workflow run.\n\nhis function cancels a workflow run. It uses the `owner` of the repository,\nthe `repo` name, and the `run_id` to identify the specific workflow run\nto be cancelled.",
    "parameters": {
      "type": "object",
      "properties": {
        "repo_owner_account_name": {
          "type": "string",
          "description": "The account owner of the repository. This is typically the username or organization name. The name is not case sensitive."
        },
        "repo_name_for_cancellation": {
          "type": "string",
          "description": "The name of the repository. The name is not case sensitive."
        },
        "run_identifier_to_cancel": {
          "type": "integer",
          "description": "The unique identifier of the workflow run to be cancelled."
        }
      },
      "required": [
        "repo_name_for_cancellation",
        "repo_owner_account_name",
        "run_identifier_to_cancel"
      ]
    }
  },
  {
    "name": "fetch_repository_workflows",
    "description": "List workflows in a GitHub repository.\n\nThis function lists workflows in a GitHub repository. It allows for pagination\nto retrieve workflows in chunks.",
    "parameters": {
      "type": "object",
      "properties": {
        "repository_owner_login": {
          "type": "string",
          "description": "The account owner of the repository. The name is not case sensitive."
        },
        "repository_name": {
          "type": "string",
          "description": "The name of the repository without the .git extension. The name is not case sensitive."
        },
        "pagination_page_number": {
          "type": "integer",
          "description": "Page number of the results to fetch. Defaults to 1."
        },
        "results_per_page_count": {
          "type": "integer",
          "description": "The number of results per page (max 100). Defaults to 30."
        }
      },
      "required": [
        "repository_name",
        "repository_owner_login"
      ]
    }
  },
  {
    "name": "fetch_workflow_billing_stats",
    "description": "Get usage statistics of a workflow.\n\nThis function retrieves the billable usage statistics for a specific workflow,\nbroken down by operating system.",
    "parameters": {
      "type": "object",
      "properties": {
        "github_organization_or_user": {
          "type": "string",
          "description": "The account owner of the repository. The name is not case sensitive."
        },
        "source_repository_slug": {
          "type": "string",
          "description": "The name of the repository without the .git extension. The name is not case sensitive."
        },
        "target_workflow_id_or_filename": {
          "type": "integer",
          "description": "The ID of the workflow (as an positive integer) or the workflow's filename\n(as a string, e.g., 'ci.yml')."
        }
      },
      "required": [
        "github_organization_or_user",
        "source_repository_slug",
        "target_workflow_id_or_filename"
      ]
    }
  },
  {
    "name": "initiate_workflow_dispatch",
    "description": "Triggers a workflow dispatch event for a given workflow.\n\nThis function simulates the triggering of a workflow, corresponding\nto a 'workflow_dispatch' event. It creates a new workflow run record\nin the database and returns an acknowledgement.\n\nThe actor initiating this workflow is hardcoded because, in this context,\nauthentication details (and thus the specific user) are not available.",
    "parameters": {
      "type": "object",
      "properties": {
        "target_repository_owner": {
          "type": "string",
          "description": "The account owner of the repository."
        },
        "target_repository_slug": {
          "type": "string",
          "description": "The name of the repository without the .git extension."
        },
        "workflow_to_trigger_id": {
          "type": "string",
          "description": "The ID of the workflow or the workflow file name\n(e.g., 'main.yaml', 'ci.yml')."
        },
        "git_reference_branch_or_tag": {
          "type": "string",
          "description": "The Git reference for the workflow. This can be a branch name\n(e.g., 'main'), a tag name (e.g., 'v1.0.0'), or a commit SHA."
        },
        "workflow_input_parameters": {
          "type": "object",
          "properties": {},
          "description": "Input parameters to pass to the workflow. These correspond\nto the 'inputs' defined in the workflow's 'on.workflow_dispatch'\ntrigger. If the workflow does not expect inputs, this can be\nomitted or an empty dictionary."
        }
      },
      "required": [
        "git_reference_branch_or_tag",
        "target_repository_owner",
        "target_repository_slug",
        "workflow_to_trigger_id"
      ]
    }
  },
  {
    "name": "list_jobs_for_workflow_execution",
    "description": "Get jobs for a specific workflow run.\n\nGets jobs for a specific workflow run, identified by owner, repository, and run ID.\nThe function allows filtering jobs by their status and paginating through the results.",
    "parameters": {
      "type": "object",
      "properties": {
        "repository_holding_account": {
          "type": "string",
          "description": "The account owner of the repository. The name is not case sensitive."
        },
        "repository_context_name": {
          "type": "string",
          "description": "The name of the repository without the .git extension. The name is not case sensitive."
        },
        "target_run_identifier": {
          "type": "integer",
          "description": "The unique identifier of the workflow run."
        },
        "job_filter_option": {
          "type": "string",
          "description": "Filters jobs by their status. Valid values: 'latest' (default)\nreturns the latest job for each job name, 'all' returns all jobs for the run.\nDefaults to 'latest'."
        },
        "jobs_page_number": {
          "type": "integer",
          "description": "Page number of the results to fetch. Starts at 1. Defaults to 1."
        },
        "jobs_per_page_count": {
          "type": "integer",
          "description": "The number of results per page (maximum 100). Defaults to 30."
        }
      },
      "required": [
        "repository_context_name",
        "repository_holding_account",
        "target_run_identifier"
      ]
    }
  },
  {
    "name": "re_execute_workflow_run",
    "description": "Re-run a workflow run.\n\nThis API endpoint allows re-running a previously executed workflow run.\nIt creates a new workflow run attempt based on the original run's configuration.\nThe new run will start in a 'queued' state.",
    "parameters": {
      "type": "object",
      "properties": {
        "github_account_holder": {
          "type": "string",
          "description": "The account owner of the repository. The name is not case sensitive."
        },
        "repository_for_rerun": {
          "type": "string",
          "description": "The name of the repository without the .git extension. The name is not case sensitive."
        },
        "original_run_id_for_rerun": {
          "type": "integer",
          "description": "The unique identifier of the workflow run to re-run."
        }
      },
      "required": [
        "github_account_holder",
        "original_run_id_for_rerun",
        "repository_for_rerun"
      ]
    }
  },
  {
    "name": "retrieve_workflow_details",
    "description": "Get details of a specific workflow.\n\nGets details of a specific workflow.",
    "parameters": {
      "type": "object",
      "properties": {
        "repo_account_holder": {
          "type": "string",
          "description": "The owner of the repository."
        },
        "target_repository_name": {
          "type": "string",
          "description": "The name of the repository."
        },
        "workflow_identifier": {
          "type": "string",
          "description": "The identifier of the workflow.\nThis can be the workflow's integer ID (as a string)\nor its filename (e.g., \"main.yml\" or \".github/workflows/main.yml\")."
        }
      },
      "required": [
        "repo_account_holder",
        "target_repository_name",
        "workflow_identifier"
      ]
    }
  },
  {
    "name": "retrieve_workflow_execution_details",
    "description": "Get details of a specific workflow run.\n\nThis function retrieves detailed information for a specific workflow run.\nIt takes the repository owner's name, the repository name, and the unique\nidentifier of the workflow run as input. The function returns a dictionary\ncontaining comprehensive details about the workflow run, including its\nstatus, timing, associated commit, involved actors, and the repository\nit belongs to. Datetime fields within the response are ISO 8601 formatted strings\nwith a 'Z' suffix indicating UTC.",
    "parameters": {
      "type": "object",
      "properties": {
        "account_owner_login": {
          "type": "string",
          "description": "The account owner of the repository. The name is not case sensitive."
        },
        "repo_identifier": {
          "type": "string",
          "description": "The name of the repository without the .git extension. The name is not case sensitive."
        },
        "workflow_run_unique_id": {
          "type": "integer",
          "description": "The unique identifier of the workflow run."
        }
      },
      "required": [
        "account_owner_login",
        "repo_identifier",
        "workflow_run_unique_id"
      ]
    }
  },
  {
    "name": "search_workflow_run_history",
    "description": "List all workflow runs for a repository or a specific workflow.\n\nThis function lists workflow runs for a given repository. It supports\nfiltering by various attributes of the workflow run such as the triggering actor,\nbranch, event, status, creation date, and associated workflow ID.\nIt also allows for excluding runs triggered by pull requests and filtering by\na specific check suite ID. Pagination is supported via page and per_page\nparameters. Datetime fields in the response are ISO 8601 formatted strings\nwith a 'Z' suffix indicating UTC.",
    "parameters": {
      "type": "object",
      "properties": {
        "repository_owner_name": {
          "type": "string",
          "description": "The account owner of the repository. The name is not case sensitive."
        },
        "repository_slug": {
          "type": "string",
          "description": "The name of the repository without the .git extension. The name is not case sensitive."
        },
        "filter_by_workflow_id": {
          "type": "integer",
          "description": "Filters runs by a specific workflow ID or workflow file name."
        },
        "filter_by_initiating_actor": {
          "type": "string",
          "description": "Filters runs by the login of the actor who initiated them."
        },
        "filter_by_git_branch": {
          "type": "string",
          "description": "Filters runs by the branch they ran on."
        },
        "filter_by_trigger_event": {
          "type": "string",
          "description": "Filters runs by the event that triggered them."
        },
        "filter_by_run_status": {
          "type": "string",
          "description": "Filters runs by their current status. Valid values include:\n'queued', 'in_progress', 'completed', 'action_required',\n'cancelled', 'failure', 'neutral', 'skipped', 'stale',\n'success', 'timed_out', 'waiting', 'requested', 'pending'."
        },
        "filter_by_creation_date_range": {
          "type": "string",
          "description": "Filters runs by their creation date or date range.\nSupported formats:\n- 'YYYY-MM-DD': For runs created on this specific day.\n- '>=YYYY-MM-DD': For runs created on or after this date.\n- '<=YYYY-MM-DD': For runs created on or before this date.\n- 'YYYY-MM-DD..YYYY-MM-DD': For runs created within this inclusive range."
        },
        "omit_pull_request_runs": {
          "type": "boolean",
          "description": "If true, runs triggered by 'pull_request' events are excluded. Defaults to false."
        },
        "filter_by_check_suite_identifier": {
          "type": "integer",
          "description": "Filters runs by the ID of an associated check suite."
        },
        "current_page_index": {
          "type": "integer",
          "description": "Page number for pagination, starting at 1. Defaults to 1."
        },
        "page_size_limit": {
          "type": "integer",
          "description": "Number of results per page for pagination. Defaults to 30, maximum is 100."
        }
      },
      "required": [
        "repository_owner_name",
        "repository_slug"
      ]
    }
  }
]