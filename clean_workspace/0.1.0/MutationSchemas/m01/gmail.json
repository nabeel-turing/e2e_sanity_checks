[
  {
    "name": "add_new_label",
    "description": "Creates a new label.\n\nGenerates a unique ID for the new label and adds it to the user's list\nof labels in the database. The label properties are taken from the `label`\nargument. If no properties are provided, default values are used.",
    "parameters": {
      "type": "object",
      "properties": {
        "account_owner_id": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "label_definition_data": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The display name of the label in uppercase."
            },
            "messageListVisibility": {
              "type": "string",
              "description": "The visibility of messages with this label in the message list.\n    Must be one of: 'show', 'hide'. Defaults to 'show'."
            },
            "labelListVisibility": {
              "type": "string",
              "description": "The visibility of the label in the label list.\n    Must be one of: 'labelShow', 'labelShowIfUnread', 'labelHide'. Defaults to 'labelShow'."
            },
            "type": {
              "type": "string",
              "description": "The owner type for the label. Must be 'user' for custom labels.\n    Defaults to 'user'. (Note: 'system' is also a valid type internally)."
            },
            "color": {
              "type": "object",
              "properties": {
                "textColor": {
                  "type": "string",
                  "description": "The text color of the label, represented as hex string."
                },
                "backgroundColor": {
                  "type": "string",
                  "description": "The background color represented as hex string #RRGGBB."
                }
              },
              "description": "The color to assign to the label with keys:",
              "required": [
                "backgroundColor",
                "textColor"
              ]
            }
          },
          "description": "An optional dictionary containing the properties for the new label with keys:",
          "required": [
            "color",
            "labelListVisibility",
            "messageListVisibility",
            "name",
            "type"
          ]
        }
      }
    }
  },
  {
    "name": "add_new_smime_cert_to_alias",
    "description": "Inserts a new S/MIME info configuration for the specified 'Send as' alias.\n\nCreates and stores a new S/MIME certificate configuration. Generates a\nunique ID for the new S/MIME info.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id_for_new_smime": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "send_as_email_for_insert": {
          "type": "string",
          "description": "The email address of the 'Send as' alias to associate\nthe S/MIME info with. Defaults to ''."
        },
        "new_smime_info_payload": {
          "type": "object",
          "properties": {
            "encryptedKey": {
              "type": "string",
              "description": "The encrypted key for the S/MIME certificate."
            }
          },
          "description": "An optional dictionary containing the S/MIME properties with keys:",
          "required": [
            "encryptedKey"
          ]
        }
      }
    }
  },
  {
    "name": "bulk_erase_emails",
    "description": "Deletes many messages simultaneously.\n\nPermanently deletes all messages identified by the IDs in the provided list.\nAlso cleans up any attachments that are no longer referenced after the\nmessage deletions.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_account_for_batch_delete": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "message_id_list": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of message IDs to delete. Defaults to None."
        }
      }
    }
  },
  {
    "name": "bulk_update_email_tags",
    "description": "Modifies the labels on multiple messages simultaneously.\n\nApplies the specified label modifications (add/remove) to all messages\nidentified by the IDs in the provided list.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_for_batch_labeling": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "list_of_message_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of message IDs to modify. Defaults to None or an empty list."
        },
        "tags_to_add_in_batch": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of label IDs to add. Label IDs are handled\ncase-insensitively and stored in their uppercase form. Defaults to None."
        },
        "tags_to_remove_in_batch": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of label IDs to remove. Label IDs are handled\ncase-insensitively and stored in their uppercase form. Defaults to None."
        }
      }
    }
  },
  {
    "name": "cancel_mailbox_subscription",
    "description": "Stop receiving push notifications for the user's mailbox.\n\nClears the stored watch configuration for the specified user.",
    "parameters": {
      "type": "object",
      "properties": {
        "target_user_id": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        }
      }
    }
  },
  {
    "name": "configure_vacation_responder",
    "description": "Updates the vacation responder settings for the specified user.\n\nModifies the vacation auto-reply configuration for the user's account based\non the provided `vacation_settings`. Only the fields present in the input\ndictionary are updated.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_account_to_configure": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "vacation_settings_data": {
          "type": "object",
          "properties": {
            "enableAutoReply": {
              "type": "boolean",
              "description": "Whether to enable vacation auto-reply."
            },
            "responseSubject": {
              "type": "string",
              "description": "Subject line of the auto-reply message."
            },
            "responseBodyHtml": {
              "type": "string",
              "description": "HTML body of the auto-reply message."
            }
          },
          "description": "An optional dictionary containing the vacation settings\nto update with keys:",
          "required": [
            "enableAutoReply",
            "responseBodyHtml",
            "responseSubject"
          ]
        }
      }
    }
  },
  {
    "name": "confirm_sender_identity_ownership",
    "description": "Verifies the specified 'Send as' alias.\n\nInitiates the verification process for a custom 'from' address. If the alias\nexists and requires verification (e.g., status is 'pending'), its status\nmay be updated to 'accepted' upon successful verification.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_to_verify_for": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "email_alias_to_confirm": {
          "type": "string",
          "description": "The email address of the 'Send as' alias to verify.\nDefaults to ''."
        }
      }
    }
  },
  {
    "name": "discard_draft_message",
    "description": "Immediately and permanently deletes the specified draft.\n\nRemoves the draft message identified by the given ID from the user's\nmailbox. Also cleans up any attachments that are no longer referenced\nafter the draft deletion.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_account_for_delete": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "draft_identifier_to_remove": {
          "type": "string",
          "description": "The ID of the draft to delete. Defaults to ''."
        }
      }
    }
  },
  {
    "name": "dispatch_draft_message",
    "description": "Sends the specified draft.\n\nSends the message associated with a draft. If the `draft` argument contains\nan `id` corresponding to an existing draft, that draft is sent and then\ndeleted. If no `id` is provided, or the `id` doesn't match an existing\ndraft, the message content within the `draft` argument (specifically\n`draft['message']['raw']`) is sent directly using `Messages.send`.\n\nAttachment size limits are enforced: individual attachments cannot exceed 25MB,\nand the total message size (including all attachments) cannot exceed 100MB.",
    "parameters": {
      "type": "object",
      "properties": {
        "sending_user_id": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "draft_and_message_data": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The ID of an existing draft to send."
            },
            "message": {
              "type": "object",
              "properties": {
                "threadId": {
                  "type": "string",
                  "description": "The ID of the thread this message belongs to."
                },
                "raw": {
                  "type": "string",
                  "description": "The entire message represented as a base64url-encoded string\n              (RFC 4648 Section 5). The raw string must be RFC 2822 compliant and may include attachments\n              (e.g., as multipart MIME). Individual attachments are limited to 25MB each, with\n              a total message size limit of 100MB. Optional; if not provided, the message will be \n              constructed from 'sender', 'recipient', 'subject', 'body', etc."
                },
                "internalDate": {
                  "type": "string",
                  "description": "The internal message creation timestamp (epoch ms)."
                },
                "labelIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of label IDs applied to this message."
                },
                "snippet": {
                  "type": "string",
                  "description": "A short part of the message text."
                },
                "historyId": {
                  "type": "string",
                  "description": "The ID of the last history record that modified this message."
                },
                "sizeEstimate": {
                  "type": "integer",
                  "description": "Estimated size in bytes of the message."
                },
                "sender": {
                  "type": "string",
                  "description": "The email address of the sender."
                },
                "recipient": {
                  "type": "string",
                  "description": "The email address of the recipient."
                },
                "subject": {
                  "type": "string",
                  "description": "The message subject."
                },
                "body": {
                  "type": "string",
                  "description": "The message body text."
                },
                "isRead": {
                  "type": "boolean",
                  "description": "Whether the message has been read."
                },
                "date": {
                  "type": "string",
                  "description": "The message date."
                },
                "payload": {
                  "type": "object",
                  "properties": {
                    "mimeType": {
                      "type": "string",
                      "description": "The MIME type of the message."
                    },
                    "parts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "mimeType": {
                            "type": "string",
                            "description": "The MIME type of the part."
                          },
                          "filename": {
                            "type": "string",
                            "description": "The filename for attachment parts."
                          },
                          "body": {
                            "type": "object",
                            "properties": {
                              "attachmentId": {
                                "type": "string",
                                "description": "The attachment ID reference."
                              },
                              "size": {
                                "type": "integer",
                                "description": "The size of the attachment in bytes (max 25MB per attachment)."
                              }
                            },
                            "description": "The body content with keys:",
                            "required": [
                              "attachmentId",
                              "size"
                            ]
                          }
                        },
                        "required": [
                          "body",
                          "mimeType"
                        ]
                      },
                      "description": "List of message parts for attachments:"
                    }
                  },
                  "description": "The parsed email structure with keys:",
                  "required": [
                    "mimeType",
                    "parts"
                  ]
                }
              },
              "description": "The message content to send directly with keys:"
            }
          },
          "description": "An optional dictionary containing the draft to send with keys:"
        }
      }
    }
  },
  {
    "name": "dispatch_email",
    "description": "Sends the specified message to the specified recipient.\n\nProcesses RFC 2822 MIME messages by parsing the base64url-encoded raw message\nto extract headers and payload structure. Automatically extracts and stores\nany attachments, creating the proper Gmail API payload structure with parts references.\n\nAttachment size limits are enforced: individual attachments cannot exceed 25MB,\nand the total message size (including all attachments) cannot exceed 100MB.",
    "parameters": {
      "type": "object",
      "properties": {
        "sending_user_id": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "message_to_send": {
          "type": "object",
          "properties": {
            "raw": {
              "type": "string",
              "description": "The entire message represented as a base64url-encoded string\n              (RFC 4648 Section 5). The raw string must be RFC 2822 compliant and may include attachments\n              (e.g., as multipart MIME). Individual attachments are limited to 25MB each, with\n              a total message size limit of 100MB. Optional; if not provided, the message will be \n              constructed from 'sender', 'recipient', 'subject', 'body', etc."
            },
            "threadId": {
              "type": "string",
              "description": "Thread ID to assign to the message. If not specified,\n                   a new thread will be created. Defaults to auto-generated."
            },
            "labelIds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of label IDs to apply to the message.\n                         The 'SENT' label is automatically applied."
            },
            "sender": {
              "type": "string",
              "description": "Sender email address."
            },
            "recipient": {
              "type": "string",
              "description": "Recipient email address."
            },
            "subject": {
              "type": "string",
              "description": "Message subject line."
            },
            "body": {
              "type": "string",
              "description": "Plain text message body."
            },
            "date": {
              "type": "string",
              "description": "Message date in RFC 2822 format."
            },
            "internalDate": {
              "type": "string",
              "description": "Internal timestamp as milliseconds since epoch."
            },
            "isRead": {
              "type": "boolean",
              "description": "Whether the message has been read."
            }
          },
          "description": "An optional dictionary containing the message data with keys:",
          "required": [
            "body",
            "date",
            "internalDate",
            "isRead",
            "labelIds",
            "recipient",
            "sender",
            "subject",
            "threadId"
          ]
        }
      }
    }
  },
  {
    "name": "enumerate_alias_smime_certs",
    "description": "Lists the S/MIME info for a specific 'Send as' alias.\n\nRetrieves all S/MIME certificate configurations associated with the given\nuser ID and 'Send as' email address from the database.",
    "parameters": {
      "type": "object",
      "properties": {
        "account_owner_email": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "send_as_alias_email": {
          "type": "string",
          "description": "The email address of the 'Send as' alias.\nDefaults to ''."
        }
      }
    }
  },
  {
    "name": "enumerate_draft_messages",
    "description": "Lists the drafts in the user's mailbox.\n\nRetrieves a list of draft messages for the specified user, optionally\nfiltered by a query string. Supports basic filtering based on `from:`, `to:`,\n`subject:`, `body:`, `label:`, and general keywords in the query `q`.",
    "parameters": {
      "type": "object",
      "properties": {
        "drafts_user_id": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "draft_list_limit": {
          "type": "integer",
          "description": "Maximum number of drafts to return. Must be positive.\nDefaults to 100."
        },
        "draft_filter_query": {
          "type": "string",
          "description": "Query string to filter drafts. Supports terms like `from:`, `to:`,\n`subject:`, `body:`, `label:`, and keywords. Defaults to ''.\n\nExamples:\n    - \"from:john@example.com\" - Find drafts from john@example.com\n    - \"to:team@company.com\" - Find drafts to team@company.com\n    - \"subject:meeting\" - Find drafts with \"meeting\" in the subject\n    - \"body:project\" - Find drafts containing \"project\" in the body\n    - \"label:important\" - Find drafts with the \"important\" label\n    - \"from:john@example.com subject:meeting\" - Combine multiple filters"
        }
      }
    }
  },
  {
    "name": "enumerate_user_threads",
    "description": "Lists the threads in the user's mailbox.\n\nRetrieves a list of threads matching the specified query criteria.\nNote: Query parameters (`q`, `labelIds`, `include_spam_trash`, `page_token`)\nare included for API compatibility but are not fully implemented.\nThe filtering based on these parameters is not performed.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id_for_listing": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "max_threads_to_return": {
          "type": "integer",
          "description": "Maximum number of threads to return. Defaults to 100.\nActual results might be fewer if less threads exist. The maximum allowed value is 500."
        },
        "thread_list_page_token": {
          "type": "string",
          "description": "Page token to retrieve a specific page of results.\nDefaults to ''. (Currently ignored)."
        },
        "search_filter": {
          "type": "string",
          "description": "Only return threads matching the specified query. Supports the same\nquery format as the Gmail search box. Defaults to ''. (Currently ignored)."
        },
        "label_id_filters": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Only return threads with labels that match all of the specified\nlabel IDs in uppercase. Defaults to None. (Currently ignored)."
        },
        "include_spam_trash_threads": {
          "type": "boolean",
          "description": "Include threads from SPAM and TRASH in the results.\nDefaults to False. (Currently ignored)."
        }
      }
    }
  },
  {
    "name": "fetch_account_summary",
    "description": "Gets the user's Gmail profile information.\n\nRetrieves the profile data associated with the specified user ID from the database.",
    "parameters": {
      "type": "object",
      "properties": {
        "account_identifier": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        }
      }
    }
  },
  {
    "name": "fetch_display_language",
    "description": "Gets the language settings for the specified user.\n\nRetrieves the current language configuration (e.g., display language)\nassociated with the user's account from the database.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_profile_for_language": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        }
      }
    }
  },
  {
    "name": "fetch_email_by_id",
    "description": "Gets the specified message.\n\nRetrieves the message resource identified by the given ID. The response format\ncan be customized using the format parameter.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id_for_fetch": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "target_message_id": {
          "type": "string",
          "description": "The ID of the message to retrieve. Defaults to ''."
        },
        "retrieval_format_option": {
          "type": "string",
          "description": "The format to return the message in. Must be one of:\n- 'minimal': Returns only email message ID and labels\n- 'full': Returns the full email message data with body content\n- 'raw': Returns the full email message data with raw field (RFC 2822 compliant and may include attachments (e.g., as multipart MIME))\n- 'metadata': Returns only email message ID, labels, and email headers\nDefaults to 'full'."
        },
        "specific_headers_to_include": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of headers to include when format='metadata'.\nAll elements in the list must be strings. Defaults to None."
        }
      }
    }
  },
  {
    "name": "fetch_forwarding_config",
    "description": "Gets the auto-forwarding setting for the specified user.\n\nRetrieves the current auto-forwarding configuration associated with the\nuser's account from the database.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_account_to_query": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        }
      }
    }
  },
  {
    "name": "fetch_imap_configuration",
    "description": "Gets the IMAP settings for the specified user.\n\nRetrieves the current IMAP configuration associated with the user's account\nfrom the database.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id_for_imap_settings": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        }
      }
    }
  },
  {
    "name": "fetch_pop_configuration",
    "description": "Gets the POP settings for the specified user.\n\nRetrieves the current POP (Post Office Protocol) configuration associated\nwith the user's account from the database.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id_for_pop_settings": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        }
      }
    }
  },
  {
    "name": "get_all_sender_identities",
    "description": "Lists the 'Send as' aliases for the specified user.\n\nRetrieves all custom 'from' addresses (aliases) associated with the user's\naccount from the database.",
    "parameters": {
      "type": "object",
      "properties": {
        "account_owner_id": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        }
      }
    }
  },
  {
    "name": "get_all_user_labels",
    "description": "Lists all labels in the user's mailbox.\n\nRetrieves a list of all label resources associated with the specified user.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id_to_list_labels_for": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        }
      }
    }
  },
  {
    "name": "get_mailbox_change_history",
    "description": "Lists the history of all changes to the given mailbox.\n\nRetrieves a list of mailbox history records for the specified user.\nNote: Filtering parameters (`start_history_id`, `label_id`,\n`history_types`) and pagination (`page_token`) are included\nfor API compatibility but are not fully implemented. The function currently returns\nstored history records up to `max_results`.",
    "parameters": {
      "type": "object",
      "properties": {
        "account_id_for_history": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "max_history_entries": {
          "type": "integer",
          "description": "The maximum number of history records to return.\nDefaults to 100."
        },
        "history_pagination_token": {
          "type": "string",
          "description": "Page token to retrieve a specific page of results.\nDefaults to ''. (Currently ignored)."
        },
        "initial_history_id": {
          "type": "string",
          "description": "Returns history records after the specified\n`start_history_id`. Defaults to ''. (Currently ignored)."
        },
        "target_label_id_for_history": {
          "type": "string",
          "description": "History records specific to the specified label in uppercase.\nDefaults to ''. (Currently ignored)."
        },
        "event_types_to_include": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "History types to retrieve. Defaults to None.\n(Currently ignored)."
        }
      }
    }
  },
  {
    "name": "ingest_raw_email",
    "description": "Imports a message into the mailbox, applying specified labels.\n\nCreates a new message entry in the database with a generated ID.\nPrimarily uses the `raw` content if provided in `msg`. Adds the 'DELETED'\nlabel if the `deleted` flag is True.\nNote: `internal_date_source`, `never_mark_spam`, and `process_for_calendar`\nare included for API compatibility but are ignored in this implementation.",
    "parameters": {
      "type": "object",
      "properties": {
        "destination_user_id": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "email_data_payload": {
          "type": "object",
          "properties": {
            "raw": {
              "type": "string",
              "description": "Raw message content."
            }
          },
          "description": "An optional dictionary containing the message data with keys:",
          "required": [
            "raw"
          ]
        },
        "timestamp_origin": {
          "type": "string",
          "description": "Specifies how to determine the internal date.\nDefaults to 'dateHeader'. (Currently ignored)."
        },
        "bypass_spam_filter": {
          "type": "boolean",
          "description": "Whether to prevent the message from being marked as spam.\nDefaults to False. (Currently ignored)."
        },
        "scan_for_calendar_events": {
          "type": "boolean",
          "description": "Whether to process calendar invitations.\nDefaults to False. (Currently ignored)."
        },
        "mark_as_trashed_on_import": {
          "type": "boolean",
          "description": "Mark the imported message as deleted. Defaults to False."
        }
      }
    }
  },
  {
    "name": "inject_composed_email",
    "description": "Directly inserts a message into the mailbox.\n\nSimilar to `import_`, but typically used for messages composed by the user\n(e.g., drafts). Creates a new message with generated ID and thread ID.\nPopulates fields based on the `msg` dictionary. Adds 'INBOX' and 'UNREAD'\nlabels by default, and 'DELETED' if the flag is set.\n\nAttachment size limits are enforced: individual attachments cannot exceed 25MB,\nand the total message size (including all attachments) cannot exceed 100MB.",
    "parameters": {
      "type": "object",
      "properties": {
        "target_mailbox_id": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "message_content_dict": {
          "type": "object",
          "properties": {
            "threadId": {
              "type": "string",
              "description": "Thread ID for the message."
            },
            "raw": {
              "type": "string",
              "description": "Raw message content."
            },
            "sender": {
              "type": "string",
              "description": "Sender email address."
            },
            "recipient": {
              "type": "string",
              "description": "Recipient email address."
            },
            "subject": {
              "type": "string",
              "description": "Message subject."
            },
            "body": {
              "type": "string",
              "description": "Message body."
            },
            "date": {
              "type": "string",
              "description": "Message date."
            },
            "internalDate": {
              "type": "string",
              "description": "Internal date of the message."
            },
            "isRead": {
              "type": "boolean",
              "description": "Whether the message has been read."
            },
            "labelIds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of labels to apply to the message in uppercase."
            }
          },
          "description": "An optional dictionary containing the message data with keys:",
          "required": [
            "body",
            "date",
            "internalDate",
            "isRead",
            "labelIds",
            "raw",
            "recipient",
            "sender",
            "subject",
            "threadId"
          ]
        },
        "date_creation_method": {
          "type": "string",
          "description": "Determines how the message's `internalDate` is set if `internalDate` is not provided or is None in the `msg` payload.\nIf `msg` contains a non-None `internalDate` field, that value is used directly (expected as a string Unix timestamp). Otherwise, this parameter applies:\n- 'receivedTime' (default): `internalDate` is set to the Unix timestamp of when the message is processed.\n- 'dateHeader': `internalDate` is derived from the `msg['date']` field. If `msg['date']` is missing or invalid, it defaults to the processing time.\nDefaults to 'receivedTime'."
        },
        "is_pre_trashed": {
          "type": "boolean",
          "description": "Mark the inserted message as deleted. Defaults to False."
        }
      }
    }
  },
  {
    "name": "make_smime_cert_default_for_alias",
    "description": "Sets the specified S/MIME certificate as the default for the alias.\n\nMarks the S/MIME info identified by `id` as the default configuration\nfor the given 'Send as' alias, removing the default status from any other\nS/MIME configurations for that alias.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id_for_default_smime": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "target_alias_for_default": {
          "type": "string",
          "description": "The email address of the 'Send as' alias. Defaults to ''."
        },
        "default_smime_info_id": {
          "type": "string",
          "description": "The ID of the S/MIME info to set as default. Defaults to ''."
        }
      }
    }
  },
  {
    "name": "modify_existing_draft",
    "description": "Replaces a draft's content.\n\nUpdates an existing draft message identified by its ID with the content\nprovided in the `draft` argument. If the draft with the specified ID\ndoes not exist, it returns None.\nEnsures the 'DRAFT' label is present on the updated message.",
    "parameters": {
      "type": "object",
      "properties": {
        "draft_user_account_id": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "target_draft_id": {
          "type": "string",
          "description": "The ID of the draft to update."
        },
        "draft_update_payload": {
          "type": "object",
          "properties": {
            "message": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The immutable ID of the message."
                },
                "threadId": {
                  "type": "string",
                  "description": "The ID of the thread this message belongs to."
                },
                "raw": {
                  "type": "string",
                  "description": "The entire message represented as a base64url-encoded string\n              (RFC 4648 Section 5). The raw string must be RFC 2822 compliant and may include attachments\n              (e.g., as multipart MIME). Optional; if not provided, the message will be constructed from 'sender', 'recipient', 'subject', 'body', etc."
                },
                "labelIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of label IDs applied to this message. If provided,\n      replaces all existing labels except 'DRAFT' (which is always preserved). The 'INBOX' label\n      is explicitly removed if present in the input list."
                },
                "snippet": {
                  "type": "string",
                  "description": "A short part of the message text."
                },
                "historyId": {
                  "type": "string",
                  "description": "The ID of the last history record that modified this message."
                },
                "internalDate": {
                  "type": "string",
                  "description": "The internal message creation timestamp (epoch ms)."
                },
                "sizeEstimate": {
                  "type": "integer",
                  "description": "Estimated size in bytes of the message."
                },
                "sender": {
                  "type": "string",
                  "description": "The email address of the sender."
                },
                "recipient": {
                  "type": "string",
                  "description": "The email address of the recipient."
                },
                "subject": {
                  "type": "string",
                  "description": "The message subject."
                },
                "body": {
                  "type": "string",
                  "description": "The message body text."
                },
                "isRead": {
                  "type": "boolean",
                  "description": "Whether the message has been read."
                },
                "date": {
                  "type": "string",
                  "description": "The date this message was created."
                },
                "payload": {
                  "type": "object",
                  "properties": {
                    "mimeType": {
                      "type": "string",
                      "description": "The MIME type of the message."
                    },
                    "parts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "mimeType": {
                            "type": "string",
                            "description": "The MIME type of the part."
                          },
                          "filename": {
                            "type": "string",
                            "description": "The filename for attachment parts."
                          },
                          "body": {
                            "type": "object",
                            "properties": {
                              "attachmentId": {
                                "type": "string",
                                "description": "The attachment ID reference."
                              },
                              "size": {
                                "type": "integer",
                                "description": "The size of the attachment in bytes."
                              }
                            },
                            "description": "The body content with keys:",
                            "required": [
                              "attachmentId",
                              "size"
                            ]
                          }
                        },
                        "required": [
                          "body",
                          "mimeType"
                        ]
                      },
                      "description": "List of message parts for attachments:"
                    }
                  },
                  "description": "The parsed email structure with keys:",
                  "required": [
                    "mimeType",
                    "parts"
                  ]
                }
              },
              "description": "The message updates with keys:"
            }
          },
          "description": "An optional dictionary containing the updated draft message content with keys:",
          "required": [
            "message"
          ]
        }
      },
      "required": [
        "target_draft_id"
      ]
    }
  },
  {
    "name": "modify_existing_label",
    "description": "Updates the specified label.\n\nModifies an existing label identified by its ID using the properties\nprovided in the label argument. This performs a full update, replacing\nthe existing label properties with the new ones.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_email_for_update": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "target_label_id": {
          "type": "string",
          "description": "The ID of the label to update. Defaults to ''."
        },
        "label_update_payload": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The display name of the label. For system labels, will be automatically converted to uppercase."
            },
            "labelListVisibility": {
              "type": "string",
              "description": "The visibility of the label in the label list.\n    Must be one of: 'labelShow', 'labelShowIfUnread', 'labelHide'."
            },
            "messageListVisibility": {
              "type": "string",
              "description": "The visibility of the label in the message list.\n    Must be one of: 'show', 'hide'."
            },
            "type": {
              "type": "string",
              "description": "The owner type for the label. Must be 'user' for custom labels.\n    System labels cannot have their type changed."
            },
            "color": {
              "type": "object",
              "properties": {
                "textColor": {
                  "type": "string",
                  "description": "The text color of the label, represented as hex string."
                },
                "backgroundColor": {
                  "type": "string",
                  "description": "The background color represented as hex string #RRGGBB."
                }
              },
              "description": "The color to assign to the label with keys:",
              "required": [
                "backgroundColor",
                "textColor"
              ]
            }
          },
          "description": "An optional dictionary containing the updated properties for the\nlabel with keys:",
          "required": [
            "labelListVisibility",
            "messageListVisibility",
            "name",
            "type"
          ]
        }
      }
    }
  },
  {
    "name": "modify_existing_sender_identity",
    "description": "Updates the specified 'Send as' alias configuration.\n\nModifies an existing custom 'from' address (alias) identified by its email\naddress, using the properties provided in the `send_as` argument.\nThis performs a full update.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id_for_alias_update": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "email_of_alias_to_change": {
          "type": "string",
          "description": "The email address of the 'Send as' alias to update.\nDefaults to ''."
        },
        "updated_alias_properties": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string",
              "description": "The display name for the alias."
            },
            "replyToAddress": {
              "type": "string",
              "description": "The reply-to address."
            },
            "signature": {
              "type": "string",
              "description": "The email signature for the alias."
            }
          },
          "description": "An optional dictionary containing the updated properties with keys:",
          "required": [
            "displayName",
            "replyToAddress",
            "signature"
          ]
        }
      }
    }
  },
  {
    "name": "modify_forwarding_config",
    "description": "Updates the auto-forwarding setting for the specified user.\n\nModifies the auto-forwarding configuration for the user's account based\non the provided `auto_forwarding_settings`. Only the fields present in the\ninput dictionary are updated.",
    "parameters": {
      "type": "object",
      "properties": {
        "target_user_for_forwarding_update": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "forwarding_settings_payload": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Whether to enable auto-forwarding."
            },
            "emailAddress": {
              "type": "string",
              "description": "Valid email address to forward messages to."
            },
            "disposition": {
              "type": "string",
              "description": "How to handle forwarded messages.\n  Valid values: 'dispositionUnspecified', 'leaveInInbox', 'archive', 'trash', 'markRead'."
            }
          },
          "description": "An optional dictionary containing \nthe settings to update with keys:",
          "required": [
            "disposition",
            "emailAddress",
            "enabled"
          ]
        }
      }
    }
  },
  {
    "name": "modify_imap_configuration",
    "description": "Updates the IMAP settings for the specified user.\n\nModifies the IMAP configuration for the user's account based on the provided\n`imap_settings`. Only the fields present in the input dictionary are updated.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_account_for_imap_update": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "imap_settings_payload": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Whether to enable IMAP access."
            },
            "autoExpunge": {
              "type": "boolean",
              "description": "Whether to automatically expunge messages."
            },
            "expungeBehavior": {
              "type": "string",
              "description": "How to handle expunged messages."
            }
          },
          "description": "An optional dictionary containing the IMAP settings to update with keys:",
          "required": [
            "autoExpunge",
            "enabled",
            "expungeBehavior"
          ]
        }
      }
    }
  },
  {
    "name": "modify_pop_configuration",
    "description": "Updates the POP settings for the specified user.\n\nModifies the POP configuration for the user's account based on the provided\n`pop_settings`. Only the fields present in the input dictionary are updated.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_account_for_pop_update": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "pop_settings_payload": {
          "type": "object",
          "properties": {
            "accessWindow": {
              "type": "string",
              "description": "The range of messages accessible via POP.\n                      Valid values: 'accessWindowUnspecified', 'disabled', 'fromNowOn', 'allMail'"
            },
            "disposition": {
              "type": "string",
              "description": "How to handle messages after POP access.\n                     Valid values: 'dispositionUnspecified', 'leaveInInbox', 'archive', 'trash', 'markRead'"
            }
          },
          "description": "An optional dictionary containing the POP settings to update with keys:",
          "required": [
            "accessWindow",
            "disposition"
          ]
        }
      }
    }
  },
  {
    "name": "modify_smime_cert_for_alias",
    "description": "Updates the specified S/MIME info.\n\nModifies an existing S/MIME certificate configuration identified by its ID.\nThis performs a full update, replacing existing properties.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_account_id_for_smime": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "associated_send_as_email": {
          "type": "string",
          "description": "The email address of the 'Send as' alias associated\nwith the S/MIME info. Defaults to ''."
        },
        "target_smime_info_id": {
          "type": "string",
          "description": "The ID of the S/MIME info to update. Defaults to ''."
        },
        "smime_update_payload": {
          "type": "object",
          "properties": {
            "encryptedKey": {
              "type": "string",
              "description": "The encrypted key for the S/MIME certificate."
            }
          },
          "description": "An optional dictionary containing the updated S/MIME properties with keys:",
          "required": [
            "encryptedKey"
          ]
        }
      }
    }
  },
  {
    "name": "move_email_to_trash",
    "description": "Moves the specified message to the trash.\n\nAdds the 'TRASH' label to the message identified by the given ID.\nIf the message already has the 'TRASH' label, it remains unchanged.",
    "parameters": {
      "type": "object",
      "properties": {
        "mailbox_owner_id": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "message_identifier_to_trash": {
          "type": "string",
          "description": "The ID of the message to trash. Defaults to ''."
        }
      }
    }
  },
  {
    "name": "move_thread_to_trash",
    "description": "Moves the specified thread to the trash.\n\nThis operation marks the thread and all messages within it as trashed.\nIt utilizes the `Messages.trash` function for each message in the thread.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_account_id": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "thread_to_trash_id": {
          "type": "string",
          "description": "The ID of the thread to trash. Defaults to ''."
        }
      }
    }
  },
  {
    "name": "partially_update_label",
    "description": "Updates the specified label. Alias for update.\n\nThis function is an alias for the `update` function. It modifies an\nexisting label identified by its ID using the properties provided in the\n`label` argument. This performs a full update, replacing the existing\nlabel properties with the new ones.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_to_patch_label_for": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "label_id_to_patch": {
          "type": "string",
          "description": "The ID of the label to update/patch. Defaults to ''."
        },
        "label_patch_payload": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The display name of the label."
            },
            "messageListVisibility": {
              "type": "string",
              "description": "The visibility of messages with this label\n      in the message list. Must be one of: 'show', 'hide'."
            },
            "labelListVisibility": {
              "type": "string",
              "description": "The visibility of the label in the label list.\n      Must be one of: 'labelShow', 'labelShowIfUnread', 'labelHide'."
            },
            "type": {
              "type": "string",
              "description": "The owner type for the label. Must be one of: 'user', 'system'."
            },
            "messagesTotal": {
              "type": "integer",
              "description": "The total number of messages with the label."
            },
            "messagesUnread": {
              "type": "integer",
              "description": "The number of unread messages with the label."
            },
            "threadsTotal": {
              "type": "integer",
              "description": "The total number of threads with the label."
            },
            "threadsUnread": {
              "type": "integer",
              "description": "The number of unread threads with the label."
            },
            "color": {
              "type": "object",
              "properties": {
                "textColor": {
                  "type": "string",
                  "description": "The text color of the label, represented as hex string."
                },
                "backgroundColor": {
                  "type": "string",
                  "description": "The background color represented as hex string #RRGGBB."
                }
              },
              "description": "The color assigned to the label with keys:",
              "required": [
                "backgroundColor",
                "textColor"
              ]
            }
          },
          "description": "An optional dictionary containing the properties to update\nthe label. Defaults to None, which results in an empty dictionary.\nOptional fields:",
          "required": [
            "color",
            "labelListVisibility",
            "messageListVisibility",
            "messagesTotal",
            "messagesUnread",
            "name",
            "threadsTotal",
            "threadsUnread",
            "type"
          ]
        }
      }
    }
  },
  {
    "name": "partially_update_sender_identity",
    "description": "Updates the specified 'Send as' alias configuration. Alias for update.\n\nThis function is an alias for the `update` function. It modifies an\nexisting alias. Note: This implementation performs patch as a full update.",
    "parameters": {
      "type": "object",
      "properties": {
        "account_for_patching": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "alias_email_for_patch": {
          "type": "string",
          "description": "The email address of the alias to update/patch.\nDefaults to ''."
        },
        "patch_data": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string",
              "description": "The display name for the alias."
            },
            "replyToAddress": {
              "type": "string",
              "description": "The reply-to address."
            },
            "signature": {
              "type": "string",
              "description": "The email signature for the alias."
            }
          },
          "description": "An optional dictionary containing the properties to update with keys:",
          "required": [
            "displayName",
            "replyToAddress",
            "signature"
          ]
        }
      }
    }
  },
  {
    "name": "partially_update_smime_cert",
    "description": "Updates the specified S/MIME info. Alias for update.\n\nThis function is an alias for the `update` function. It modifies an\nexisting S/MIME certificate configuration. Note: Implemented as a full update.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_to_patch_smime_for": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "send_as_email_to_patch": {
          "type": "string",
          "description": "The email address of the 'Send as' alias. Defaults to ''."
        },
        "smime_identifier_to_patch": {
          "type": "string",
          "description": "The ID of the S/MIME info to update/patch. Defaults to ''."
        },
        "smime_patch_payload": {
          "type": "object",
          "properties": {
            "encryptedKey": {
              "type": "string",
              "description": "The encrypted key for the S/MIME certificate."
            }
          },
          "description": "An optional dictionary containing the properties to update with keys:",
          "required": [
            "encryptedKey"
          ]
        }
      }
    }
  },
  {
    "name": "permanently_erase_email",
    "description": "Immediately and permanently deletes the specified message.\n\nRemoves the message identified by the given ID from the user's mailbox.\nThis operation cannot be undone. Also cleans up any attachments that\nare no longer referenced after the message deletion.",
    "parameters": {
      "type": "object",
      "properties": {
        "account_id_for_deletion": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "email_id_to_erase": {
          "type": "string",
          "description": "The ID of the message to delete. Defaults to ''."
        }
      }
    }
  },
  {
    "name": "permanently_remove_thread",
    "description": "Immediately and permanently deletes the specified thread.\n\nThis operation cannot be undone. It removes the thread and all associated\nmessages from the user's mailbox permanently.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_email_address": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "thread_id_for_deletion": {
          "type": "string",
          "description": "The ID of the thread to delete. Defaults to ''."
        }
      }
    }
  },
  {
    "name": "provision_new_account",
    "description": "Creates a new user entry in the database.\n\nInitializes the data structure for a new user, including profile,\nempty containers for drafts, messages, threads, labels, settings, history,\nand watch configuration.",
    "parameters": {
      "type": "object",
      "properties": {
        "new_user_identifier": {
          "type": "string",
          "description": "The unique identifier for the new user."
        },
        "initial_profile_data": {
          "type": "object",
          "properties": {},
          "description": "A dictionary containing the initial profile information.\nIt must contain an 'emailAddress' (str) key. Other keys are permitted but ignored\nby this function's core logic beyond validation of 'emailAddress'.\nExample: {\"emailAddress\": \"user@example.com\", \"displayName\": \"John Doe\"}"
        }
      },
      "required": [
        "initial_profile_data",
        "new_user_identifier"
      ]
    }
  },
  {
    "name": "register_new_sender_identity",
    "description": "Creates a new 'Send as' alias configuration.\n\nAdds a custom 'from' address (alias) to the user's account. The alias\nemail address is used as the key. The verification status is\ntypically set based on domain policies or user actions, but may default\nto 'accepted' in some implementations.",
    "parameters": {
      "type": "object",
      "properties": {
        "target_account_id": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "new_alias_details": {
          "type": "object",
          "properties": {
            "sendAsEmail": {
              "type": "string",
              "description": "The email address for the alias."
            },
            "displayName": {
              "type": "string",
              "description": "The display name for the alias."
            },
            "replyToAddress": {
              "type": "string",
              "description": "The reply-to address."
            },
            "signature": {
              "type": "string",
              "description": "The email signature for the alias."
            }
          },
          "description": "An optional dictionary containing the properties for the new\nalias with keys:",
          "required": [
            "displayName",
            "replyToAddress",
            "sendAsEmail",
            "signature"
          ]
        }
      }
    }
  },
  {
    "name": "remove_sender_identity",
    "description": "Deletes the specified 'Send as' alias.\n\nRemoves a custom 'from' address (alias) identified by its email address\nfrom the user's account.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_for_alias_deletion": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "alias_email_to_delete": {
          "type": "string",
          "description": "The email address of the 'Send as' alias to delete.\nDefaults to ''."
        }
      }
    }
  },
  {
    "name": "remove_smime_cert_from_alias",
    "description": "Deletes the specified S/MIME certificate configuration.\n\nRemoves the S/MIME info identified by its ID from the specified\n'Send as' alias configuration.",
    "parameters": {
      "type": "object",
      "properties": {
        "smime_owning_user_id": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "alias_email_smime_owner": {
          "type": "string",
          "description": "The email address of the 'Send as' alias from which\nto delete the S/MIME info. Defaults to ''."
        },
        "smime_config_id_to_remove": {
          "type": "string",
          "description": "The ID of the S/MIME info to delete. Defaults to ''."
        }
      }
    }
  },
  {
    "name": "remove_user_label",
    "description": "Immediately and permanently deletes the specified label.\n\nRemoves the label identified by the given ID from the user's list of labels.\nThis operation cannot be undone.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_identifier_param": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "label_identifier_to_remove": {
          "type": "string",
          "description": "The ID of the label to delete. Defaults to ''."
        }
      }
    }
  },
  {
    "name": "restore_email_from_trash",
    "description": "Removes the specified message from the trash.\n\nRemoves the 'TRASH' label (uppercase) from the message.\nIf the message does not have 'TRASH', it remains unchanged.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id_for_restore": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "message_id_to_untrash": {
          "type": "string",
          "description": "The ID of the message to untrash. Defaults to ''."
        }
      }
    }
  },
  {
    "name": "restore_thread_from_trash",
    "description": "Removes the specified thread from the trash.\n\nThis operation restores the thread and all messages within it from the trash.\nIt utilizes the `Messages.untrash` function for each message in the thread.",
    "parameters": {
      "type": "object",
      "properties": {
        "authenticated_user_id": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "thread_to_untrash_id": {
          "type": "string",
          "description": "The ID of the thread to untrash. Defaults to ''."
        }
      }
    }
  },
  {
    "name": "retrieve_attachment_data",
    "description": "Gets the specified message attachment.\n\nRetrieves the content of a specific attachment identified by its ID from the\nglobal attachments collection. This implementation validates inputs comprehensively\nand optionally verifies that the attachment is referenced in the specified message.",
    "parameters": {
      "type": "object",
      "properties": {
        "attachment_owner_user_id": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "parent_message_id": {
          "type": "string",
          "description": "The ID of the message containing the attachment. Must be a non-empty string.\nDefaults to ''."
        },
        "attachment_id_to_get": {
          "type": "string",
          "description": "The ID of the attachment to retrieve. Must be a non-empty string.\nDefaults to ''."
        }
      }
    }
  },
  {
    "name": "retrieve_draft_message",
    "description": "Gets the specified draft.\n\nRetrieves the draft message identified by the given ID.\nThe format parameter determines what data is returned:\n- 'minimal': Returns only email message ID and labels\n- 'full': Returns the full email message data with parsed body content\n- 'raw': Returns the full email message data with body content in raw field\n- 'metadata': Returns only email message ID, labels, and email headers",
    "parameters": {
      "type": "object",
      "properties": {
        "draft_owner_user_id": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "draft_lookup_identifier": {
          "type": "string",
          "description": "The ID of the draft to retrieve. Defaults to ''."
        },
        "retrieval_format_specifier": {
          "type": "string",
          "description": "The format to return the message in. One of 'minimal',\n'full', 'raw', or 'metadata'. Defaults to 'full'."
        }
      }
    }
  },
  {
    "name": "retrieve_label_details",
    "description": "Gets the specified label.\n\nRetrieves the label resource identified by the given ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id_for_label_retrieval": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "label_identifier_to_fetch": {
          "type": "string",
          "description": "The ID of the label to retrieve. Defaults to ''."
        }
      }
    }
  },
  {
    "name": "retrieve_sender_identity",
    "description": "Gets the specified 'Send as' alias configuration.\n\nRetrieves the details of a specific custom 'from' address (alias)\nidentified by its email address.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_account_id": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "alias_email_to_find": {
          "type": "string",
          "description": "The email address of the 'Send as' alias to retrieve.\nDefaults to ''."
        }
      }
    }
  },
  {
    "name": "retrieve_smime_cert_by_id",
    "description": "Gets the specified S/MIME info for a specific 'Send as' alias.\n\nRetrieves a specific S/MIME certificate configuration identified by its ID,\nassociated with the given user ID and 'Send as' email address.",
    "parameters": {
      "type": "object",
      "properties": {
        "smime_user_id": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "alias_email_address_for_get": {
          "type": "string",
          "description": "The email address of the 'Send as' alias.\nDefaults to ''."
        },
        "smime_info_identifier": {
          "type": "string",
          "description": "The ID of the S/MIME info to retrieve. Defaults to ''."
        }
      }
    }
  },
  {
    "name": "retrieve_thread_details",
    "description": "Gets the specified thread.\n\nRetrieves the details of a specific thread identified by its ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "mailbox_owner_id": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "target_thread_id": {
          "type": "string",
          "description": "The ID of the thread to retrieve. Defaults to ''."
        },
        "data_retrieval_format": {
          "type": "string",
          "description": "The format to return the messages in. Accepted values are:\n- 'full': Returns the full message data including body and all fields\n- 'metadata': Returns message ID, labels, and headers (either specified or default)\n- 'minimal': Returns only message ID and labels\n- 'raw': Returns the full message data (same as 'full' in this implementation)\nDefaults to 'full'."
        },
        "headers_to_include": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of headers to include when format is set\nto 'metadata'. If None, includes default headers (Subject, From, To, Date).\nCase-insensitive matching is used for common headers. Defaults to None."
        }
      }
    }
  },
  {
    "name": "retrieve_vacation_responder_settings",
    "description": "Gets the vacation responder settings for the specified user.\n\nRetrieves the current vacation auto-reply configuration associated with the\nuser's account from the database.",
    "parameters": {
      "type": "object",
      "properties": {
        "account_id_for_vacation_settings": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        }
      }
    }
  },
  {
    "name": "save_new_draft_message",
    "description": "Creates a new draft message.\n\nCreates a new draft with the DRAFT label. The draft message content is taken from the `draft`\nargument. If no draft content is provided, an empty draft is created.\n\nAttachment size limits are enforced: individual attachments cannot exceed 25MB,\nand the total message size (including all attachments) cannot exceed 100MB.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_mailbox_id": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "draft_creation_details": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The draft ID. Auto-generated if not provided."
            },
            "message": {
              "type": "object",
              "properties": {
                "threadId": {
                  "type": "string",
                  "description": "The ID of the thread this message belongs to."
                },
                "raw": {
                  "type": "string",
                  "description": "The entire message represented as a base64url-encoded string\n              (RFC 4648 Section 5). The raw string must be RFC 2822 compliant and may include attachments\n              (e.g., as multipart MIME). Individual attachments are limited to 25MB each, with\n              a total message size limit of 100MB. Optional; if not provided, the message will be \n              constructed from 'sender', 'recipient', 'subject', 'body', etc."
                },
                "labelIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "List of label IDs applied to this message."
                },
                "snippet": {
                  "type": "string",
                  "description": "A short part of the message text."
                },
                "historyId": {
                  "type": "string",
                  "description": "The ID of the last history record that modified this message."
                },
                "internalDate": {
                  "type": "string",
                  "description": "The internal message creation timestamp (epoch ms)."
                },
                "sizeEstimate": {
                  "type": "integer",
                  "description": "Estimated size in bytes of the message."
                },
                "sender": {
                  "type": "string",
                  "description": "The email address of the sender."
                },
                "recipient": {
                  "type": "string",
                  "description": "The email address of the recipient."
                },
                "subject": {
                  "type": "string",
                  "description": "The message subject."
                },
                "body": {
                  "type": "string",
                  "description": "The message body text."
                },
                "isRead": {
                  "type": "boolean",
                  "description": "Whether the message has been read."
                },
                "date": {
                  "type": "string",
                  "description": "The date this message was created."
                },
                "payload": {
                  "type": "object",
                  "properties": {
                    "mimeType": {
                      "type": "string",
                      "description": "The MIME type of the message."
                    },
                    "parts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "mimeType": {
                            "type": "string",
                            "description": "The MIME type of the part."
                          },
                          "filename": {
                            "type": "string",
                            "description": "The filename for attachment parts."
                          },
                          "body": {
                            "type": "object",
                            "properties": {
                              "attachmentId": {
                                "type": "string",
                                "description": "The attachment ID reference."
                              },
                              "size": {
                                "type": "integer",
                                "description": "The size of the attachment in bytes (max 25MB per attachment)."
                              }
                            },
                            "description": "The body content with keys:",
                            "required": [
                              "attachmentId",
                              "size"
                            ]
                          }
                        },
                        "required": [
                          "body",
                          "mimeType"
                        ]
                      },
                      "description": "List of message parts for attachments:"
                    }
                  },
                  "description": "The parsed email structure with keys:",
                  "required": [
                    "mimeType",
                    "parts"
                  ]
                }
              },
              "description": "The message object with keys:"
            }
          },
          "description": "An optional dictionary containing the draft message details with keys:",
          "required": [
            "message"
          ]
        }
      }
    }
  },
  {
    "name": "search_mailbox_for_emails",
    "description": "Lists the messages in the user's mailbox.\n\nRetrieves a list of messages matching the specified query criteria.\nSupports filtering based on whether the message has the `TRASH` or `SPAM` label,\nand using `q` (keywords, from:, to:, label:, subject:, attachment:) and `labelIds`.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_account_to_search": {
          "type": "string",
          "description": "The user ID. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "result_limit": {
          "type": "integer",
          "description": "Maximum number of messages to return. Defaults to 100."
        },
        "search_query_string": {
          "type": "string",
          "description": "Query string for filtering messages. Strings with spaces must be enclosed\nin single (') or double (\") quotes. Supports space-delimited tokens\n(each one filters the current result set). Supported tokens:\n- `from:<email>`       Exact sender address (case-insensitive)\n- `to:<email>`         Exact recipient address (case-insensitive)\n- `label:<LABEL_ID>`   Uppercase label ID\n- `subject:<text>`     Substring match in the subject (case-insensitive)\n- `<keyword>`          Substring match in subject, body, sender or recipient (case-insensitive)\n- `\"<phrase>\"`         Exact phrase match in subject or body (case-insensitive)\n\nFilters are combined by implicit AND; token order does not matter.\nExamples:\n    # Messages from bob@example.com with \"report\" in the subject\n    q='from:bob@example.com subject:report'\n    # Messages mentioning the exact phrase \"urgent fix\"\n    q='\"urgent fix\"'"
        },
        "required_label_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of label IDs required on messages. Defaults to None."
        },
        "search_spam_and_trash_folders": {
          "type": "boolean",
          "description": "Include messages from SPAM and TRASH.\nDefaults to False."
        }
      }
    }
  },
  {
    "name": "set_display_language",
    "description": "Updates the language settings for the specified user.\n\nModifies the language configuration for the user's account based on the\nprovided `language_settings`. Only the fields present in the input dictionary\nare updated.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id_for_language_update": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "language_settings_data": {
          "type": "object",
          "properties": {
            "displayLanguage": {
              "type": "string",
              "description": "The language code for display (e.g., 'en-US' for English)."
            }
          },
          "description": "An optional dictionary containing the language settings\nto update with keys:",
          "required": [
            "displayLanguage"
          ]
        }
      }
    }
  },
  {
    "name": "subscribe_to_mailbox_events",
    "description": "Set up or update a watch on the user's mailbox.\n\nStores the watch request configuration for the specified user.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_email_address": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "notification_config": {
          "type": "object",
          "properties": {},
          "description": "An optional dictionary containing the watch request body.\nThe exact structure depends on the watch configuration requirements.\nDefaults to None, resulting in an empty watch configuration."
        }
      }
    }
  },
  {
    "name": "update_email_tags",
    "description": "Modifies the labels on the specified message.\n\nAdds or removes labels from the message identified by the given ID. All labels are handled\ncase-insensitively and stored in their uppercase form. The function enforces label exclusivity\nrules where INBOX is mutually exclusive with SENT, DRAFT, and TRASH. Adding SENT, DRAFT, or TRASH\nwill automatically remove INBOX, while adding INBOX will only succeed if none of SENT, DRAFT, or\nTRASH are present. All labels are converted to uppercase before processing, duplicates are\nautomatically removed, and labels are stored in a sorted list for consistency. Custom labels can\nbe added alongside system labels.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id_for_label_change": {
          "type": "string",
          "description": "The user's email address. The special value 'me'\ncan be used to indicate the authenticated user. Defaults to 'me'."
        },
        "message_id_to_modify": {
          "type": "string",
          "description": "The ID of the message to modify. Defaults to ''."
        },
        "labels_to_apply": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of label names to add. Label names are handled\ncase-insensitively and stored in their uppercase form. Defaults to None."
        },
        "labels_to_remove": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of label names to remove. Label names are handled\ncase-insensitively and stored in their uppercase form. Defaults to None."
        }
      }
    }
  },
  {
    "name": "update_thread_label_assignments",
    "description": "Modifies the labels applied to the specified thread.\n\nAdds or removes labels from all messages within the specified thread.\nIt utilizes the `Messages.modify` function for each message in the thread.",
    "parameters": {
      "type": "object",
      "properties": {
        "target_user_email": {
          "type": "string",
          "description": "The user's email address. The special value 'me' can be used to indicate the authenticated user."
        },
        "thread_identifier_to_modify": {
          "type": "string",
          "description": "The ID of the thread to modify."
        },
        "add_these_label_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of IDs of labels to add to this message. You can add up to 100 labels with each update."
        },
        "remove_these_label_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of IDs of labels to remove from this message. You can remove up to 100 labels with each update."
        }
      }
    }
  },
  {
    "name": "verify_user_account_existence",
    "description": "Checks if a user exists in the database.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_to_validate": {
          "type": "string",
          "description": "The ID of the user to check."
        }
      },
      "required": [
        "user_to_validate"
      ]
    }
  }
]