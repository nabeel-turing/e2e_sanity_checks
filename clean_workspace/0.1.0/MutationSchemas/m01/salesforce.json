[
  {
    "name": "add_calendar_event",
    "description": "Creates a new event.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_title": {
          "type": "string",
          "description": "The name of the event."
        },
        "event_purpose": {
          "type": "string",
          "description": "The subject of the event."
        },
        "schedule_start_time": {
          "type": "string",
          "description": "Start time of the event."
        },
        "schedule_end_time": {
          "type": "string",
          "description": "End time of the event."
        },
        "detailed_event_notes": {
          "type": "string",
          "description": "Description of the event."
        },
        "meeting_venue": {
          "type": "string",
          "description": "Location of the event."
        },
        "is_full_day_occurrence": {
          "type": "boolean",
          "description": "Whether the event is all day."
        },
        "event_coordinator_id": {
          "type": "string",
          "description": "ID of the event owner."
        },
        "related_contact_id": {
          "type": "string",
          "description": "ID of the related contact."
        },
        "associated_record_id": {
          "type": "string",
          "description": "ID of the related record."
        }
      }
    }
  },
  {
    "name": "add_new_task",
    "description": "Creates a new task.",
    "parameters": {
      "type": "object",
      "properties": {
        "task_urgency": {
          "type": "string",
          "description": "Priority of the task (required)."
        },
        "task_progress_state": {
          "type": "string",
          "description": "Status of the task (required)."
        },
        "custom_task_id": {
          "type": "string",
          "description": "Custom ID for the task. If not provided, a UUID will be generated."
        },
        "task_short_name": {
          "type": "string",
          "description": "The name of the task."
        },
        "task_main_subject": {
          "type": "string",
          "description": "The subject of the task."
        },
        "task_detailed_info": {
          "type": "string",
          "description": "Description of the task."
        },
        "task_due_date": {
          "type": "string",
          "description": "Due date of the task."
        },
        "alternative_deadline": {
          "type": "string",
          "description": "Alternative field for task due date."
        },
        "assigned_user_id": {
          "type": "string",
          "description": "ID of the task owner."
        },
        "linked_person_id": {
          "type": "string",
          "description": "ID of the related contact."
        },
        "linked_record_id": {
          "type": "string",
          "description": "ID of the related record."
        },
        "has_reminder_notification": {
          "type": "boolean",
          "description": "Whether reminder is set."
        },
        "notification_timestamp": {
          "type": "string",
          "description": "Reminder date and time."
        }
      },
      "required": [
        "task_progress_state",
        "task_urgency"
      ]
    }
  },
  {
    "name": "create_or_modify_task",
    "description": "Creates or updates a task.",
    "parameters": {
      "type": "object",
      "properties": {
        "task_identifier_for_upsert": {
          "type": "string",
          "description": "Task ID (required for update)."
        },
        "upsert_task_name": {
          "type": "string",
          "description": "The name of the task."
        },
        "upsert_task_subject": {
          "type": "string",
          "description": "The subject of the task."
        },
        "upsert_task_priority": {
          "type": "string",
          "description": "Priority of the task."
        },
        "upsert_task_status": {
          "type": "string",
          "description": "Status of the task."
        },
        "upsert_task_description": {
          "type": "string",
          "description": "Description of the task."
        },
        "upsert_activity_date": {
          "type": "string",
          "description": "Due date of the task."
        },
        "upsert_owner_id": {
          "type": "string",
          "description": "ID of the task owner."
        },
        "upsert_related_contact_id": {
          "type": "string",
          "description": "ID of the related contact."
        },
        "upsert_related_record_id": {
          "type": "string",
          "description": "ID of the related record."
        },
        "upsert_reminder_flag": {
          "type": "boolean",
          "description": "Whether reminder is set."
        },
        "upsert_reminder_timestamp": {
          "type": "string",
          "description": "Reminder date and time."
        }
      }
    }
  },
  {
    "name": "create_or_update_event",
    "description": "Creates or updates an event.",
    "parameters": {
      "type": "object",
      "properties": {
        "upsert_event_name": {
          "type": "string",
          "description": "The name of the event."
        },
        "event_identifier_for_upsert": {
          "type": "string",
          "description": "Event ID (required for update)."
        },
        "upsert_event_subject": {
          "type": "string",
          "description": "The subject of the event."
        },
        "upsert_start_datetime": {
          "type": "string",
          "description": "Start time of the event."
        },
        "upsert_end_datetime": {
          "type": "string",
          "description": "End time of the event."
        },
        "upsert_event_details": {
          "type": "string",
          "description": "Description of the event."
        },
        "upsert_event_location": {
          "type": "string",
          "description": "Location of the event."
        },
        "upsert_is_all_day_flag": {
          "type": "boolean",
          "description": "Whether the event is all day."
        },
        "upsert_owner_id": {
          "type": "string",
          "description": "ID of the event owner."
        },
        "upsert_who_id": {
          "type": "string",
          "description": "ID of the related contact."
        },
        "upsert_what_id": {
          "type": "string",
          "description": "ID of the related record."
        }
      }
    }
  },
  {
    "name": "decode_where_filter_rules",
    "description": "Parse the conditions in the WHERE clause.\n\nHandles '=', 'IN', 'LIKE', and 'CONTAINS'.",
    "parameters": {
      "type": "object",
      "properties": {
        "condition_string_list": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of condition strings to parse. Example:\n- \"Subject = 'Meeting'\"\n- \"IsAllDayEvent = true\"\n- \"Location IN ('Boardroom', 'Conference Room')\"\n- \"Description LIKE '%important%'\"\n- \"Subject CONTAINS 'review'\""
        }
      },
      "required": [
        "condition_string_list"
      ]
    }
  },
  {
    "name": "fetch_event_object_schema",
    "description": "Describes the object (Event).",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "fetch_single_task_data",
    "description": "Retrieves a task.",
    "parameters": {
      "type": "object",
      "properties": {
        "task_lookup_identifier": {
          "type": "string",
          "description": "The ID of the task to retrieve."
        }
      },
      "required": [
        "task_lookup_identifier"
      ]
    }
  },
  {
    "name": "fetch_specific_event",
    "description": "Retrieves details of a specific event.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_lookup_id": {
          "type": "string",
          "description": "The ID of the event to retrieve."
        }
      },
      "required": [
        "event_lookup_id"
      ]
    }
  },
  {
    "name": "fetch_task_object_schema",
    "description": "Describes Task SObjects.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "find_events_by_filter",
    "description": "Queries events based on specified criteria.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_query_conditions": {
          "type": "object",
          "properties": {
            "Subject": {
              "type": "string",
              "description": "The subject of the event."
            },
            "IsAllDayEvent": {
              "type": "boolean",
              "description": "Whether the event is all day."
            },
            "StartDateTime": {
              "type": "string",
              "description": "Start time of the event."
            },
            "EndDateTime": {
              "type": "string",
              "description": "End time of the event."
            },
            "Description": {
              "type": "string",
              "description": "Description of the event."
            },
            "Location": {
              "type": "string",
              "description": "Location of the event."
            },
            "OwnerId": {
              "type": "string",
              "description": "ID of the event owner."
            }
          },
          "description": "Key-value pairs to filter events. Example:",
          "required": [
            "Description",
            "EndDateTime",
            "IsAllDayEvent",
            "Location",
            "OwnerId",
            "StartDateTime",
            "Subject"
          ]
        }
      }
    }
  },
  {
    "name": "find_tasks_by_attributes",
    "description": "Queries tasks based on specified criteria.",
    "parameters": {
      "type": "object",
      "properties": {
        "task_filter_set": {
          "type": "object",
          "properties": {},
          "description": "Key-value pairs to filter tasks.\nIf provided, the dictionary structure is validated. Example:\n{\n    \"Subject\": Optional[str],\n    \"Priority\": Optional[str],\n    \"Status\": Optional[str],\n    \"ActivityDate\": Optional[str] # e.g., \"2024-01-01\"\n}\nAll keys within the criteria dictionary are optional."
        }
      }
    }
  },
  {
    "name": "get_event_layout_structure",
    "description": "Describes the layout of an event.",
    "parameters": {
      "type": "object",
      "properties": {
        "target_event_id_for_layout": {
          "type": "string",
          "description": "The ID of the event to describe."
        }
      },
      "required": [
        "target_event_id_for_layout"
      ]
    }
  },
  {
    "name": "get_task_ui_configuration",
    "description": "Describes the layout of a task.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "locate_events_by_keyword",
    "description": "Searches for events based on specified search criteria.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_search_phrase": {
          "type": "string",
          "description": "The term to search for in event fields."
        }
      },
      "required": [
        "event_search_phrase"
      ]
    }
  },
  {
    "name": "locate_tasks_by_text",
    "description": "Searches for tasks based on specified search criteria.",
    "parameters": {
      "type": "object",
      "properties": {
        "task_search_keyword": {
          "type": "string",
          "description": "The term to search for in task fields."
        }
      },
      "required": [
        "task_search_keyword"
      ]
    }
  },
  {
    "name": "modify_calendar_event",
    "description": "Updates an existing event.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_id_to_modify": {
          "type": "string",
          "description": "The ID of the event to update."
        },
        "new_event_title": {
          "type": "string",
          "description": "The name of the event."
        },
        "updated_event_subject": {
          "type": "string",
          "description": "The subject of the event."
        },
        "revised_start_time": {
          "type": "string",
          "description": "Start time of the event."
        },
        "revised_end_time": {
          "type": "string",
          "description": "End time of the event."
        },
        "updated_event_description": {
          "type": "string",
          "description": "Description of the event."
        },
        "changed_event_location": {
          "type": "string",
          "description": "Location of the event."
        },
        "new_all_day_status": {
          "type": "boolean",
          "description": "Whether the event is all day."
        },
        "new_event_owner_id": {
          "type": "string",
          "description": "ID of the event owner."
        },
        "updated_contact_id": {
          "type": "string",
          "description": "ID of the related contact."
        },
        "modified_related_record_id": {
          "type": "string",
          "description": "ID of the related record."
        }
      },
      "required": [
        "event_id_to_modify"
      ]
    }
  },
  {
    "name": "modify_existing_task",
    "description": "Updates a task.",
    "parameters": {
      "type": "object",
      "properties": {
        "task_id_for_update": {
          "type": "string",
          "description": "The ID of the task to update."
        },
        "updated_task_name": {
          "type": "string",
          "description": "The name of the task."
        },
        "revised_task_subject": {
          "type": "string",
          "description": "The subject of the task."
        },
        "new_task_priority": {
          "type": "string",
          "description": "Priority of the task."
        },
        "changed_task_status": {
          "type": "string",
          "description": "Status of the task."
        },
        "amended_task_description": {
          "type": "string",
          "description": "Description of the task."
        },
        "new_due_date": {
          "type": "string",
          "description": "Due date of the task."
        },
        "reassigned_owner_id": {
          "type": "string",
          "description": "ID of the task owner."
        },
        "updated_related_contact_id": {
          "type": "string",
          "description": "ID of the related contact."
        },
        "changed_associated_record_id": {
          "type": "string",
          "description": "ID of the related record."
        },
        "new_reminder_setting": {
          "type": "boolean",
          "description": "Whether reminder is set."
        },
        "updated_reminder_time": {
          "type": "string",
          "description": "Reminder date and time."
        }
      },
      "required": [
        "task_id_for_update"
      ]
    }
  },
  {
    "name": "remove_calendar_event",
    "description": "Deletes an event.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_identifier_to_delete": {
          "type": "string",
          "description": "The ID of the event to delete."
        }
      },
      "required": [
        "event_identifier_to_delete"
      ]
    }
  },
  {
    "name": "remove_task_record",
    "description": "Deletes a task.",
    "parameters": {
      "type": "object",
      "properties": {
        "task_identifier_to_remove": {
          "type": "string",
          "description": "The ID of the task to delete."
        }
      },
      "required": [
        "task_identifier_to_remove"
      ]
    }
  },
  {
    "name": "restore_deleted_event",
    "description": "Restores a deleted event. (Place holder - no actual deletion tracking).",
    "parameters": {
      "type": "object",
      "properties": {
        "event_id_for_restoration": {
          "type": "string",
          "description": "The ID of the event to undelete."
        }
      },
      "required": [
        "event_id_for_restoration"
      ]
    }
  },
  {
    "name": "restore_deleted_task",
    "description": "Recovers deleted tasks. (Placeholder - no actual deletion tracking).",
    "parameters": {
      "type": "object",
      "properties": {
        "task_id_to_recover": {
          "type": "string",
          "description": "The ID of the task to undelete."
        }
      },
      "required": [
        "task_id_to_recover"
      ]
    }
  },
  {
    "name": "retrieve_erased_tasks",
    "description": "Retrieves deleted tasks.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "retrieve_modified_events",
    "description": "Retrieves updated events.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "retrieve_removed_events",
    "description": "Retrieves deleted events.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "retrieve_revised_tasks",
    "description": "Retrieves updated tasks.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "run_soql_command",
    "description": "Executes a SOQL-like query against the in-memory database.\n\nThe query string is first URL-decoded. \nThe parser has specific behaviors and improved parsing logic as detailed below.",
    "parameters": {
      "type": "object",
      "properties": {
        "soql_query_string": {
          "type": "string",
          "description": "The SOQL-like query string. Example:\n\"SELECT Name, Location FROM Event WHERE Location = 'Boardroom' ORDER BY Name ASC OFFSET 0 LIMIT 5\""
        }
      },
      "required": [
        "soql_query_string"
      ]
    }
  }
]