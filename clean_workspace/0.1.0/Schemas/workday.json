[
  {
    "name": "add_supplier_companies_to_event_by_external_id",
    "description": "Add suppliers to an event using external identifiers. Only events of type RFP are supported.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_external_id": {
          "type": "string",
          "description": "The unique external identifier of the event to\nwhich suppliers will be added."
        },
        "data": {
          "type": "object",
          "description": "A dictionary containing the supplier information, including:",
          "properties": {
            "supplier_external_ids": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of supplier external IDs to be\n    added to the event"
            },
            "type": {
              "type": "string",
              "description": "Object type, should always be \"supplier_companies\""
            }
          },
          "required": [
            "type"
          ]
        }
      },
      "required": [
        "data",
        "event_external_id"
      ]
    }
  },
  {
    "name": "add_supplier_companies_to_event_by_internal_id",
    "description": "Add suppliers to an event. Only events of type RFP are supported.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_id": {
          "type": "integer",
          "description": "The unique identifier of the event to which suppliers\nwill be added."
        },
        "data": {
          "type": "object",
          "description": "A dictionary containing the supplier information, including:",
          "properties": {
            "supplier_ids": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of supplier IDs to be added to the event"
            },
            "type": {
              "type": "string",
              "description": "Object type, should always be \"supplier_companies\""
            }
          },
          "required": [
            "type"
          ]
        }
      },
      "required": [
        "data",
        "event_id"
      ]
    }
  },
  {
    "name": "add_supplier_companies_to_project",
    "description": "Adds one or more supplier companies to a project.",
    "parameters": {
      "type": "object",
      "properties": {
        "project_id": {
          "type": "integer",
          "description": "The unique identifier of the project."
        },
        "supplier_ids": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "A list of supplier company IDs to add to the project.\nFor optimal performance, it's recommended to add 10 or fewer\nsuppliers in a single request."
        }
      },
      "required": [
        "project_id",
        "supplier_ids"
      ]
    }
  },
  {
    "name": "add_supplier_companies_to_project_by_external_id",
    "description": "Adds one or more supplier companies to a project using external identifiers.",
    "parameters": {
      "type": "object",
      "properties": {
        "project_external_id": {
          "type": "string",
          "description": "The external identifier of the project."
        },
        "supplier_external_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of supplier company external IDs to add to the project."
        }
      },
      "required": [
        "project_external_id",
        "supplier_external_ids"
      ]
    }
  },
  {
    "name": "add_supplier_contacts_to_event_by_external_ids",
    "description": "Add suppliers to an event using supplier contacts. Only events of type RFP are supported. You must supply the unique event external identifier (the one you used when created the event). You must supply the external identifiers of the supplier contacts too. The operation will be rolled back upon any failure, and invitations won't be sent. For best performance, we recommend inviting 10 or less supplier contacts in a single request.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_external_id": {
          "type": "string",
          "description": "The unique external identifier of the event to which suppliers will be added."
        },
        "data": {
          "type": "object",
          "description": "A dictionary containing the supplier contact information, including:",
          "properties": {
            "supplier_contact_external_ids": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of supplier contact external IDs to be added to the event"
            },
            "type": {
              "type": "string",
              "description": "Object type, should always be \"supplier_contacts\""
            }
          },
          "required": [
            "type"
          ]
        }
      },
      "required": [
        "data",
        "event_external_id"
      ]
    }
  },
  {
    "name": "add_supplier_contacts_to_event_by_internal_id",
    "description": "Adds supplier contacts to a specific event. Only events of type RFP are supported.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_id": {
          "type": "integer",
          "description": "The unique identifier of the event to which supplier\ncontacts will be added."
        },
        "data": {
          "type": "object",
          "description": "A dictionary containing the supplier contact information,\nincluding:",
          "properties": {
            "supplier_contact_ids": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of supplier contact IDs to be\n    added to the event"
            },
            "type": {
              "type": "string",
              "description": "Object type, should always be \"supplier_contacts\""
            }
          },
          "required": [
            "type"
          ]
        }
      },
      "required": [
        "data",
        "event_id"
      ]
    }
  },
  {
    "name": "add_supplier_contacts_to_project_by_external_ids",
    "description": "Adds suppliers to a project using supplier contact external identifiers.\n\nThis endpoint links supplier contacts to an existing project by referencing their external identifiers. This is particularly useful for bulk-inviting suppliers already registered in the system.",
    "parameters": {
      "type": "object",
      "properties": {
        "project_external_id": {
          "type": "string",
          "description": "External ID of the project to which suppliers should be added."
        },
        "supplier_contact_external_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "External IDs of the supplier contacts to add to the project."
        }
      },
      "required": [
        "project_external_id",
        "supplier_contact_external_ids"
      ]
    }
  },
  {
    "name": "add_supplier_contacts_to_project_by_internal_id",
    "description": "Adds one or more supplier contacts to a project.",
    "parameters": {
      "type": "object",
      "properties": {
        "project_id": {
          "type": "integer",
          "description": "The unique identifier of the project."
        },
        "supplier_contact_ids": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "A list of supplier contact IDs to add to the project."
        }
      },
      "required": [
        "project_id",
        "supplier_contact_ids"
      ]
    }
  },
  {
    "name": "create_attachment",
    "description": "Create a new attachment in the system.\n\nThis function creates a new attachment with the provided data. It checks for duplicate\nexternal IDs and generates a new unique internal ID for the attachment.",
    "parameters": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "type": {
              "type": "object",
              "description": "Object type, should always be attachments."
            },
            "name": {
              "type": "object",
              "description": "Attachment file name."
            },
            "uploaded_by": {
              "type": "string",
              "description": "Email/identifier of uploader"
            },
            "external_id": {
              "type": "object",
              "description": "Attachment external identifier."
            },
            "attributes": {
              "type": "object",
              "description": "Attachment attributes which may contain any of the following keys:",
              "properties": {
                "title": {
                  "type": "object",
                  "description": "Attachment title."
                },
                "size": {
                  "type": "string",
                  "description": "Attachment file size in bytes."
                },
                "external_id": {
                  "type": "object",
                  "description": "Attachment external identifier."
                },
                "download_url": {
                  "type": "string",
                  "description": "Attachment download URL."
                },
                "download_url_expires_at": {
                  "type": "object",
                  "description": "Download URL expiration time."
                },
                "uploaded_at": {
                  "type": "object",
                  "description": "Upload timestamp"
                }
              },
              "required": [
                "download_url",
                "download_url_expires_at",
                "external_id",
                "size",
                "title",
                "uploaded_at"
              ]
            },
            "relationships": {
              "type": "object",
              "description": "One of Contract, Event, Project, or Supplier Company containing:",
              "properties": {
                "type": {
                  "type": "object",
                  "description": "Object type."
                },
                "id": {
                  "type": "object",
                  "description": "Object identifier string."
                }
              },
              "required": [
                "id",
                "type"
              ]
            }
          },
          "description": "Dictionary containing attachment data with the following keys:",
          "required": [
            "attributes",
            "external_id",
            "name",
            "relationships",
            "type",
            "uploaded_by"
          ]
        }
      },
      "required": [
        "data"
      ]
    }
  },
  {
    "name": "create_contact_type",
    "description": "Creates a new contact type with the specified parameters.\n\nThis function allows for the creation of a new contact type in the system\nwith the provided configuration and properties. The function validates the\ninput and ensures all required fields are present.",
    "parameters": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object",
          "description": "A dictionary containing the properties and\nconfiguration for the new contact type. The dictionary should\ninclude:",
          "properties": {
            "type": {
              "type": "string",
              "description": "Object type, should always be \"contact_types\""
            },
            "external_id": {
              "type": "string",
              "description": "Contact type external identifier (max 255 characters)"
            },
            "name": {
              "type": "string",
              "description": "Contact type name (max 255 characters)"
            }
          },
          "required": [
            "external_id",
            "name",
            "type"
          ]
        }
      }
    }
  },
  {
    "name": "create_contract",
    "description": "Create a new contract with the specified attributes.",
    "parameters": {
      "type": "object",
      "properties": {
        "_include": {
          "type": "string",
          "description": "Comma-separated list of relationships to include\nin the response. \nSupported values: \"contract_type\", \"spend_category\", \"supplier_company\", \"docusign_envelopes\", \"adobe_sign_agreements\""
        },
        "body": {
          "type": "object",
          "description": "Dictionary containing contract creation data. Contains any of the following keys:",
          "properties": {
            "type": {
              "type": "string",
              "description": "Required. Object type"
            },
            "supplier_id": {
              "type": "string",
              "description": "Supplier identifier"
            },
            "start_date": {
              "type": "string",
              "description": "Contract start date"
            },
            "end_date": {
              "type": "string",
              "description": "Contract end date"
            },
            "external_id": {
              "type": "string",
              "description": "External contract identifier"
            },
            "attributes": {
              "type": "object",
              "description": "Required. Contract attributes containing:",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Required. Contract title (max 255 characters)"
                },
                "description": {
                  "type": "string",
                  "description": "Optional. Contract description"
                },
                "state": {
                  "type": "string",
                  "description": "Required. Current contract state, one of:\n        - \"draft\"\n        - \"requested\"\n        - \"in_progress\"\n        - \"out_for_approval\"\n        - \"approved\"\n        - \"active\"\n        - \"expired\"\n        - \"terminated\""
                },
                "state_label": {
                  "type": "string",
                  "description": "Optional. Customer-specific contract state label"
                },
                "external_id": {
                  "type": "string",
                  "description": "Optional. Customer provided unique contract identifier"
                },
                "actual_start_date": {
                  "type": "string",
                  "description": "Optional. Contract start date"
                },
                "actual_end_date": {
                  "type": "string",
                  "description": "Optional. Contract end date"
                },
                "actual_spend_amount": {
                  "type": "number",
                  "description": "Optional. Actual spend amount"
                },
                "auto_renewal": {
                  "type": "string",
                  "description": "Optional. Auto-renewal mode, one of:\n        - \"yes\"\n        - \"no\"\n        - \"evergreen\""
                },
                "marked_as_needs_attention_at": {
                  "type": "string",
                  "description": "Optional. Date when contract was flagged as needs attention"
                },
                "needs_attention": {
                  "type": "boolean",
                  "description": "Optional. Whether contract needs attention"
                },
                "needs_attention_note": {
                  "type": "string",
                  "description": "Optional. Notes on why contract needs attention"
                },
                "needs_attention_reason": {
                  "type": "string",
                  "description": "Optional. Reason why contract needs attention"
                },
                "renew_number_of_times": {
                  "type": "integer",
                  "description": "Optional. Number of times contract should be renewed"
                },
                "renewal_term_unit": {
                  "type": "string",
                  "description": "Optional. Term unit for renewals, one of:\n        - \"days\"\n        - \"weeks\"\n        - \"months\"\n        - \"years\""
                },
                "renewal_term_value": {
                  "type": "integer",
                  "description": "Optional. Number of term units between renewals"
                },
                "renewal_termination_notice_unit": {
                  "type": "string",
                  "description": "Optional. Term unit for termination notice"
                },
                "renewal_termination_notice_value": {
                  "type": "integer",
                  "description": "Optional. Term units before end date for notice"
                },
                "renewal_termination_reminder_unit": {
                  "type": "string",
                  "description": "Optional. Term unit for termination reminder"
                },
                "renewal_termination_reminder_value": {
                  "type": "integer",
                  "description": "Optional. Term units before notice for reminder"
                },
                "terminated_note": {
                  "type": "string",
                  "description": "Optional. Termination notes"
                },
                "terminated_reason": {
                  "type": "string",
                  "description": "Optional. Termination reason"
                },
                "custom_fields": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  },
                  "description": "Optional. Custom field values"
                },
                "approval_rounds": {
                  "type": "integer",
                  "description": "Optional. Times contract has been sent for approval"
                },
                "public": {
                  "type": "boolean",
                  "description": "Optional. Public visibility of contract"
                }
              },
              "required": [
                "actual_end_date",
                "actual_spend_amount",
                "actual_start_date",
                "approval_rounds",
                "auto_renewal",
                "description",
                "external_id",
                "marked_as_needs_attention_at",
                "needs_attention",
                "needs_attention_note",
                "needs_attention_reason",
                "public",
                "renew_number_of_times",
                "renewal_term_unit",
                "renewal_term_value",
                "renewal_termination_notice_unit",
                "renewal_termination_notice_value",
                "renewal_termination_reminder_unit",
                "renewal_termination_reminder_value",
                "state",
                "state_label",
                "terminated_note",
                "terminated_reason",
                "title"
              ]
            },
            "relationships": {
              "type": "object",
              "description": "Required. Contract relationships containing:",
              "properties": {
                "owner": {
                  "type": "object",
                  "description": "Required. Contract owner with:",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Required. Object type"
                    },
                    "id": {
                      "type": "integer",
                      "description": "Required. Owner identifier"
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "supplier_company": {
                  "type": "object",
                  "description": "Required. Associated supplier company with:",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Required. Always \"supplier_companies\""
                    },
                    "id": {
                      "type": "integer",
                      "description": "Required. Supplier company identifier"
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "contract_type": {
                  "type": "object",
                  "description": "Required. Contract type with:",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Required. Always \"contract_types\""
                    },
                    "id": {
                      "type": "integer",
                      "description": "Required. Contract type identifier"
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "spend_category": {
                  "type": "object",
                  "description": "Optional. Spend category with:",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Required. Always \"spend_categories\""
                    },
                    "id": {
                      "type": "integer",
                      "description": "Required. Spend category identifier"
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                },
                "payment_currency": {
                  "type": "object",
                  "description": "Optional. Payment currency with:",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Required. Always \"payment_currencies\""
                    },
                    "id": {
                      "type": "integer",
                      "description": "Required. Payment currency identifier"
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                }
              },
              "required": [
                "contract_type",
                "owner",
                "payment_currency",
                "spend_category",
                "supplier_company"
              ]
            }
          },
          "required": [
            "attributes",
            "end_date",
            "external_id",
            "relationships",
            "start_date",
            "supplier_id",
            "type"
          ]
        }
      }
    }
  },
  {
    "name": "create_contract_type",
    "description": "Create a new contract type.",
    "parameters": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object",
          "description": "Dictionary containing contract type creation data. Can contain any of the following keys:",
          "properties": {
            "type": {
              "type": "string",
              "description": "Object type, should always be \"contract_types\""
            },
            "name": {
              "type": "string",
              "description": "Name of the contract type"
            },
            "external_id": {
              "type": "string",
              "description": "External contract type identifier"
            }
          },
          "required": [
            "external_id",
            "name",
            "type"
          ]
        }
      }
    }
  },
  {
    "name": "create_custom_field",
    "description": "Create a field with given parameters.\n\nFor fields with target_object set to RFP, group relationship should be omitted. It is required to specify the relationship for all other target objects.",
    "parameters": {
      "type": "object",
      "properties": {
        "new_id": {
          "type": "string",
          "description": "The unique identifier for the new field. If not provided, the system will generate a new ID."
        },
        "options": {
          "type": "object",
          "description": "A dictionary containing the field configuration options. Can contain any of the following fields:",
          "properties": {
            "type": {
              "type": "string",
              "description": "Field type"
            },
            "group": {
              "type": "string",
              "description": "Field group identifier string"
            },
            "name": {
              "type": "string",
              "description": "Field name (max 255 characters)"
            },
            "attributes": {
              "type": "object",
              "description": "Field attributes containing:",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Field name (max 255 characters)"
                },
                "target_object": {
                  "type": "string",
                  "description": "Field object type, one of:\n        - \"PROJECT\"\n        - \"RFP\"\n        - \"SUPPLIER_COMPANY\""
                },
                "type_description": {
                  "type": "string",
                  "description": "Internal name and meaning of each field, one of:\n        - \"Checkbox\"\n        - \"File\"\n        - \"Short Text\"\n        - \"Paragraph\"\n        - \"Date\"\n        - \"Integer\"\n        - \"Currency\"\n        - \"Decimal\"\n        - \"Single Select\"\n        - \"Multiple Select\"\n        - \"URL\"\n        - \"Lookup\"\n        - \"Related\""
                },
                "required": {
                  "type": "boolean",
                  "description": "Identifies whether the field is required"
                }
              },
              "required": [
                "name",
                "required",
                "target_object",
                "type_description"
              ]
            },
            "relationships": {
              "type": "object",
              "description": "Field relationship containing:",
              "properties": {
                "group": {
                  "type": "object",
                  "description": "Reference to the field group where the field belongs to\n        Note: Must be null for fields with target_object set to RFP, and required for all other fields"
                }
              },
              "required": [
                "group"
              ]
            }
          },
          "required": [
            "attributes",
            "group",
            "name",
            "relationships",
            "type"
          ]
        }
      }
    }
  },
  {
    "name": "create_event",
    "description": "Create a new event.",
    "parameters": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "external_id": {
              "type": "string",
              "description": "Event identifier string"
            },
            "name": {
              "type": "string",
              "description": "Event name"
            },
            "type": {
              "type": "string",
              "description": "Event type enum (\"RFP\", \"AUCTION\", \"AUCTION_WITH_LOTS\", \"AUCTION_LOT\", \"PERFORMANCE_REVIEW_EVENT\", \"PERFORMANCE_REVIEW_SCORE_CARD_ONLY_EVENT\", \"SUPPLIER_REVIEW_EVENT\", \"SUPPLIER_REVIEW_MASTER_EVENT\")"
            },
            "suppliers": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of suppliers"
            },
            "supplier_contacts": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of supplier contacts"
            },
            "attributes": {
              "type": "object",
              "description": "Event attributes containing:",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "An event title"
                },
                "event_type": {
                  "type": "string",
                  "description": "Event type enum (\"RFP\", \"AUCTION\", \"AUCTION_WITH_LOTS\", \"AUCTION_LOT\", \"PERFORMANCE_REVIEW_EVENT\", \"PERFORMANCE_REVIEW_SCORE_CARD_ONLY_EVENT\", \"SUPPLIER_REVIEW_EVENT\", \"SUPPLIER_REVIEW_MASTER_EVENT\")"
                },
                "state": {
                  "type": "string",
                  "description": "Current event state enum (\"draft\", \"scheduled\", \"published\", \"live_editing\", \"closed\", \"canceled\")"
                },
                "duplication_state": {
                  "type": "string",
                  "description": "Event duplication state enum (\"scheduled\", \"started\", \"finished\", \"failed\")"
                },
                "spend_amount": {
                  "type": "number",
                  "description": "Actual spend amount"
                },
                "request_type": {
                  "type": "string",
                  "description": "Request type"
                },
                "late_bids": {
                  "type": "boolean",
                  "description": "Whether late bid submissions are allowed"
                },
                "revise_bids": {
                  "type": "boolean",
                  "description": "Whether suppliers can re-submit bids"
                },
                "instant_notifications": {
                  "type": "boolean",
                  "description": "Whether notifications are sent immediately"
                },
                "supplier_rsvp_deadline": {
                  "type": "string",
                  "description": "RSVP deadline date-time"
                },
                "supplier_question_deadline": {
                  "type": "string",
                  "description": "Questions deadline date-time"
                },
                "bid_submission_deadline": {
                  "type": "string",
                  "description": "Bid submission deadline date-time"
                },
                "created_at": {
                  "type": "string",
                  "description": "Creation date-time"
                },
                "closed_at": {
                  "type": "string",
                  "description": "Closing date-time"
                },
                "published_at": {
                  "type": "string",
                  "description": "Publication date-time"
                },
                "external_id": {
                  "type": "string",
                  "description": "Event ID in internal database"
                },
                "is_public": {
                  "type": "boolean",
                  "description": "Whether event is accessible for self-registration"
                },
                "restricted": {
                  "type": "boolean",
                  "description": "Whether event is invitation only"
                },
                "custom_fields": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  },
                  "description": "Custom field values"
                }
              },
              "required": [
                "bid_submission_deadline",
                "closed_at",
                "created_at",
                "duplication_state",
                "event_type",
                "external_id",
                "instant_notifications",
                "is_public",
                "late_bids",
                "published_at",
                "request_type",
                "restricted",
                "revise_bids",
                "spend_amount",
                "state",
                "supplier_question_deadline",
                "supplier_rsvp_deadline",
                "title"
              ]
            },
            "relationships": {
              "type": "object",
              "description": "Event relationships containing:",
              "properties": {
                "attachments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  },
                  "description": "List of attachments"
                },
                "project": {
                  "type": "object",
                  "description": "Associated project"
                },
                "spend_category": {
                  "type": "object",
                  "description": "Associated spend category"
                },
                "event_template": {
                  "type": "object",
                  "description": "Used event template"
                },
                "commodity_codes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  },
                  "description": "List of commodity codes"
                }
              },
              "required": [
                "event_template",
                "project",
                "spend_category"
              ]
            }
          },
          "description": "Dictionary containing event creation data. Can contain any of the following keys:",
          "required": [
            "attributes",
            "external_id",
            "name",
            "relationships",
            "type"
          ]
        }
      },
      "required": [
        "data"
      ]
    }
  },
  {
    "name": "create_event_worksheet_line_item",
    "description": "Create a line item with given cell values.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_id": {
          "type": "integer",
          "description": "The unique identifier of the event to which the line item will belong."
        },
        "worksheet_id": {
          "type": "integer",
          "description": "The unique identifier of the worksheet to which the line item will belong."
        },
        "data": {
          "type": "object",
          "description": "A dictionary containing the properties for the new line item, including:",
          "properties": {
            "type": {
              "type": "string",
              "description": "Object type, should always be \"line_items\""
            },
            "attributes": {
              "type": "object",
              "description": "LineItem attributes containing:",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "A hashmap where keys are data identifier strings for the columns in the worksheet, and values are cell values, where each value contains:",
                  "properties": {
                    "data_identifier": {
                      "type": "string",
                      "description": "Worksheet column identifier string"
                    },
                    "value": {
                      "type": "object",
                      "description": "Worksheet line item cell value"
                    }
                  },
                  "required": [
                    "data_identifier",
                    "value"
                  ]
                }
              },
              "required": [
                "data"
              ]
            },
            "relationships": {
              "type": "object",
              "description": "Line item relationships containing:",
              "properties": {
                "worksheet": {
                  "type": "object",
                  "description": "Associated worksheet containing:",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Object type, should always be \"worksheets\""
                    },
                    "id": {
                      "type": "integer",
                      "description": "Worksheet identifier string"
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                }
              },
              "required": [
                "worksheet"
              ]
            }
          },
          "required": [
            "attributes",
            "relationships",
            "type"
          ]
        }
      },
      "required": [
        "data",
        "event_id",
        "worksheet_id"
      ]
    }
  },
  {
    "name": "create_field_group",
    "description": "Creates a new field group with the specified parameters.",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the field group to be created."
        },
        "description": {
          "type": "string",
          "description": "A detailed description of the field group.\nDefaults to an empty string."
        },
        "data": {
          "type": "object",
          "description": "A dictionary containing the field group configuration options. Can contain any of the following fields:",
          "properties": {
            "type": {
              "type": "string",
              "description": "Object type, should always be \"field_groups\""
            },
            "name": {
              "type": "string",
              "description": "Field group name (max 255 characters)"
            },
            "fields": {
              "type": "object",
              "description": "List of fields belonging to this group"
            },
            "attributes": {
              "type": "object",
              "description": "Field group attributes containing:",
              "properties": {
                "target_object": {
                  "type": "string",
                  "description": "Field group object type string, one of:\n        - \"PROJECT\"\n        - \"SUPPLIER_COMPANY\"\n        - \"RFP\""
                },
                "name": {
                  "type": "string",
                  "description": "Field group name (max 255 characters)"
                }
              },
              "required": [
                "name",
                "target_object"
              ]
            }
          },
          "required": [
            "attributes",
            "fields",
            "name",
            "type"
          ]
        }
      },
      "required": [
        "name"
      ]
    }
  },
  {
    "name": "create_field_options",
    "description": "Creates a new field option with given parameters..",
    "parameters": {
      "type": "object",
      "properties": {
        "new_id": {
          "type": "string",
          "description": "The field ID to associate the options with. If not provided, the field ID will be generated."
        },
        "options": {
          "type": "object",
          "description": "A list of options to be associated with the field."
        }
      }
    }
  },
  {
    "name": "create_multiple_event_worksheet_line_items",
    "description": "Creates multiple line items in the specified event worksheet.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_id": {
          "type": "integer",
          "description": "The unique identifier of the event to which the line items will belong."
        },
        "worksheet_id": {
          "type": "integer",
          "description": "The unique identifier of the worksheet to which the line items will belong."
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "Object type, should always be \"line_items\""
              },
              "attributes": {
                "type": "object",
                "description": "LineItem attributes containing:",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "A hashmap where keys are data identifier strings for the columns in the worksheet, and values are cell values, where each value contains:",
                    "properties": {
                      "data_identifier": {
                        "type": "string",
                        "description": "Worksheet column identifier string"
                      },
                      "value": {
                        "type": "object",
                        "description": "Worksheet line item cell value"
                      }
                    },
                    "required": [
                      "data_identifier",
                      "value"
                    ]
                  }
                },
                "required": [
                  "data"
                ]
              },
              "relationships": {
                "type": "object",
                "description": "Line item relationships containing:",
                "properties": {
                  "worksheet": {
                    "type": "object",
                    "description": "Associated worksheet containing:",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Object type, should always be \"worksheets\""
                      },
                      "id": {
                        "type": "integer",
                        "description": "Worksheet identifier string"
                      }
                    },
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                },
                "required": [
                  "worksheet"
                ]
              }
            },
            "required": [
              "attributes",
              "relationships",
              "type"
            ]
          },
          "description": "A list of dictionaries, where each dictionary contains\nthe properties for a new line item, including:"
        }
      },
      "required": [
        "data",
        "event_id",
        "worksheet_id"
      ]
    }
  },
  {
    "name": "create_payment_currency",
    "description": "Creates a new payment currency entry in the system.",
    "parameters": {
      "type": "object",
      "properties": {
        "alpha": {
          "type": "string",
          "description": "The three-letter currency code (e.g., USD, EUR)."
        },
        "numeric": {
          "type": "string",
          "description": "The numeric currency code."
        },
        "external_id": {
          "type": "string",
          "description": "An external identifier for the currency."
        }
      },
      "required": [
        "alpha",
        "numeric"
      ]
    }
  },
  {
    "name": "create_payment_term",
    "description": "Creates a new payment term entry in the system.",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the payment term (e.g., \"Net 30\", \"Net 60\")."
        },
        "external_id": {
          "type": "string",
          "description": "An external identifier for the payment term."
        }
      },
      "required": [
        "name"
      ]
    }
  },
  {
    "name": "create_payment_type",
    "description": "Create a payment type with given parameters.",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the payment type (e.g., \"Credit Card\", \"Bank Transfer\")."
        },
        "payment_method": {
          "type": "string",
          "description": "The method of payment (e.g., \"card\", \"transfer\")."
        },
        "external_id": {
          "type": "string",
          "description": "An external identifier for the payment type."
        }
      },
      "required": [
        "name",
        "payment_method"
      ]
    }
  },
  {
    "name": "create_project",
    "description": "Creates a new project with the specified attributes.",
    "parameters": {
      "type": "object",
      "properties": {
        "project_data": {
          "type": "object",
          "properties": {
            "type_id": {
              "type": "string",
              "description": "Object type (defaults to \"projects\")"
            },
            "id": {
              "type": "string",
              "description": "Project identifier string"
            },
            "external_id": {
              "type": "string",
              "description": "Project external identifier string"
            },
            "supplier_companies": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              },
              "description": "Array of supplier company objects"
            },
            "supplier_contacts": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              },
              "description": "Array of supplier contact objects"
            },
            "status": {
              "type": "string",
              "description": "Project status"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Project name (mandatory)"
                },
                "description": {
                  "type": "string",
                  "description": "Project description"
                },
                "state": {
                  "type": "string",
                  "description": "Project state (draft, requested, planned, active, completed, canceled, on_hold)"
                },
                "target_start_date": {
                  "type": "object",
                  "description": "Project target start date"
                },
                "target_end_date": {
                  "type": "object",
                  "description": "Project target end date"
                },
                "actual_spend_amount": {
                  "type": "number",
                  "description": "Project actual spend amount"
                },
                "approved_spend_amount": {
                  "type": "number",
                  "description": "Project approved spend amount"
                },
                "estimated_savings_amount": {
                  "type": "number",
                  "description": "Project estimated savings amount"
                },
                "estimated_spend_amount": {
                  "type": "number",
                  "description": "Project estimated spend amount"
                },
                "canceled_note": {
                  "type": "string",
                  "description": "Project cancelation note"
                },
                "canceled_reason": {
                  "type": "string",
                  "description": "Project cancelation reason"
                },
                "on_hold_note": {
                  "type": "string",
                  "description": "Project on-hold note"
                },
                "on_hold_reason": {
                  "type": "string",
                  "description": "Project on-hold reason"
                },
                "needs_attention": {
                  "type": "boolean",
                  "description": "Project needs attention status"
                },
                "marked_as_needs_attention_at": {
                  "type": "object",
                  "description": "Project marked as needs attention timestamp"
                },
                "needs_attention_note": {
                  "type": "string",
                  "description": "Project needs attention note"
                },
                "needs_attention_reason": {
                  "type": "string",
                  "description": "Project needs attention reason"
                }
              },
              "description": "Project attributes object containing:",
              "required": [
                "actual_spend_amount",
                "approved_spend_amount",
                "description",
                "estimated_savings_amount",
                "estimated_spend_amount",
                "name",
                "needs_attention",
                "state",
                "target_end_date",
                "target_start_date"
              ]
            },
            "relationships": {
              "type": "object",
              "properties": {
                "attachments": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": "Array of attachment objects"
                },
                "creator": {
                  "type": "object",
                  "description": "Project creator stakeholder object"
                },
                "requester": {
                  "type": "object",
                  "description": "Project requester stakeholder object"
                },
                "owner": {
                  "type": "object",
                  "description": "Project owner stakeholder object"
                },
                "project_type": {
                  "type": "object",
                  "description": "Project type object"
                }
              },
              "description": "Project relationships object containing:",
              "required": [
                "attachments",
                "creator",
                "owner",
                "project_type",
                "requester"
              ]
            }
          },
          "description": "A dictionary containing the project attributes.\nIf 'id' is not provided, a new unique ID will be generated.\n'attributes' field with at least 'name' is mandatory.\nproject_data can contain any of the following keys:",
          "required": [
            "attributes",
            "external_id",
            "id",
            "relationships",
            "status",
            "supplier_companies",
            "supplier_contacts",
            "type_id"
          ]
        }
      },
      "required": [
        "project_data"
      ]
    }
  },
  {
    "name": "create_scim_user",
    "description": "Creates a new SCIM user in the Workday Strategic Sourcing system.\n\nThis operation is SCIM-compliant and requires a payload defining the user details.\nIt validates the input data using Pydantic models and creates a new user record\nin the Workday Strategic Sourcing database.",
    "parameters": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object",
          "properties": {
            "userName": {
              "type": "string",
              "description": "Unique username, typically an email address"
            },
            "name": {
              "type": "object",
              "properties": {
                "givenName": {
                  "type": "string",
                  "description": "User's first name"
                },
                "familyName": {
                  "type": "string",
                  "description": "User's last name"
                }
              },
              "description": "User's name components",
              "required": [
                "familyName",
                "givenName"
              ]
            },
            "schemas": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "SCIM schemas, typically ['urn:ietf:params:scim:schemas:core:2.0:User']"
            },
            "externalId": {
              "type": "string",
              "description": "External identifier for the user"
            },
            "active": {
              "type": "boolean",
              "description": "Whether the user account is active (defaults to True)"
            },
            "roles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Role identifier."
                  },
                  "display": {
                    "type": "string",
                    "description": "Human-readable role name."
                  },
                  "primary": {
                    "type": "boolean",
                    "description": "Whether this is the primary role."
                  },
                  "type": {
                    "type": "string",
                    "description": "Role type."
                  }
                },
                "required": [
                  "display",
                  "primary",
                  "type",
                  "value"
                ]
              },
              "description": "Roles assigned to the user"
            }
          },
          "description": "The user data to create. Must contain:",
          "required": [
            "name",
            "userName"
          ]
        }
      },
      "required": [
        "body"
      ]
    }
  },
  {
    "name": "create_spend_category",
    "description": "Creates a new spend category with specified attributes.\n\nSpend categories are used to classify spend for procurement, expense, ad-hoc payment, or supplier invoice use cases. Only categories with the \"procurement\" usage can be used in requisitions.",
    "parameters": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. Name of the spend category."
        },
        "external_id": {
          "type": "string",
          "description": "External identifier of the category (max 255 characters)."
        },
        "usages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of applicable usage contexts.\n- Allowed values: \"procurement\", \"expense\", \"ad_hoc_payment\", \"supplier_invoice\""
        }
      },
      "required": [
        "name"
      ]
    }
  },
  {
    "name": "create_supplier_company",
    "description": "Creates a new supplier company with specified attributes, linked resources, and optional custom fields.\n\nSupports internal and external ID references via `external_` prefixes for relationships. Allows compound creation via `include` parameter to return related resources in one request.",
    "parameters": {
      "type": "object",
      "properties": {
        "_include": {
          "type": "string",
          "description": "Comma-separated list of related resources to include in the response.\n- Enum: \"attachments\", \"supplier_category\", \"supplier_groups\", \"default_payment_term\",\n\"payment_types\", \"default_payment_type\", \"payment_currencies\",\n\"default_payment_currency\", \"supplier_classification_values\""
        },
        "body": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Must be \"supplier_companies\"."
            },
            "attributes": {
              "type": "object",
              "description": "It can contain the following keys:",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Required. Supplier company name."
                },
                "description": {
                  "type": "string",
                  "description": "Optional. Company description."
                },
                "public": {
                  "type": "boolean",
                  "description": "Optional. Whether the company is public."
                },
                "risk": {
                  "type": "string",
                  "description": "Optional. Risk classification (slug)."
                },
                "segmentation": {
                  "type": "string",
                  "description": "Optional. Segmentation type (slug)."
                },
                "segmentation_status": {
                  "type": "string",
                  "description": "Optional. Segmentation status (slug)."
                },
                "segmentation_notes": {
                  "type": "string",
                  "description": "Optional. Notes for segmentation."
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Optional. Associated tags."
                },
                "url": {
                  "type": "string",
                  "description": "Optional. Supplier website."
                },
                "duns_number": {
                  "type": "string",
                  "description": "Optional. D-U-N-S® number."
                },
                "external_id": {
                  "type": "string",
                  "description": "Optional. Internal database ID."
                },
                "self_registered": {
                  "type": "boolean",
                  "description": "Optional. Whether supplier self-registered."
                },
                "onboarding_form_completion_status": {
                  "type": "string",
                  "description": "Optional. Onboarding status.\n        - Enum: null, \"not_started\", \"in_progress\", \"completed\""
                },
                "accept_all_currencies": {
                  "type": "boolean",
                  "description": "Optional. Accepts all currencies."
                },
                "custom_fields": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Field name."
                      },
                      "value": {
                        "type": "object",
                        "description": "Field value."
                      }
                    },
                    "required": [
                      "name",
                      "value"
                    ]
                  },
                  "description": "Optional. List of custom fields."
                }
              },
              "required": [
                "accept_all_currencies",
                "custom_fields",
                "description",
                "duns_number",
                "external_id",
                "name",
                "onboarding_form_completion_status",
                "public",
                "risk",
                "segmentation",
                "segmentation_notes",
                "segmentation_status",
                "self_registered",
                "tags",
                "url"
              ]
            },
            "relationships": {
              "type": "object",
              "properties": {},
              "description": "Resource links (optional).\n    - supplier_category\n    - supplier_groups\n    - default_payment_term\n    - payment_types\n    - default_payment_type\n    - payment_currencies\n    - default_payment_currency\n    - attachments\n    - supplier_classification_values"
            }
          },
          "description": "Supplier company payload.",
          "required": [
            "attributes",
            "relationships",
            "type"
          ]
        }
      }
    }
  },
  {
    "name": "create_supplier_company_segmentation",
    "description": "Creates a new supplier company segmentation.\n\nThis function registers a new segmentation category used to organize supplier\ncompanies within the platform. The segmentation is defined by a label, display order,\nand optional slug for programmatic reference.",
    "parameters": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object",
          "properties": {
            "label": {
              "type": "string",
              "description": "Required. Display label for the segmentation (≤ 255 characters)."
            },
            "order": {
              "type": "integer",
              "description": "Required. UI display ordering index."
            },
            "slug": {
              "type": "string",
              "description": "Optional programmatic identifier (≤ 255 characters)."
            }
          },
          "description": "Payload defining the segmentation details.",
          "required": [
            "label",
            "order"
          ]
        }
      }
    }
  },
  {
    "name": "create_supplier_contact",
    "description": "Creates a new supplier contact with the provided attributes and relationships.\n\nThis function links the contact to an existing supplier company by ID or external ID.\nYou may also assign contact types and a phone reference. The response includes the\nfull created contact object with all resolved relationships.",
    "parameters": {
      "type": "object",
      "properties": {
        "_include": {
          "type": "string",
          "description": "Comma-separated list of related resources to include in the response.\nAllowed values:\n- \"supplier_company\"\n- \"contact_types\"\n- \"phones\""
        },
        "body": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {},
              "description": ""
            },
            "type": {
              "type": "string",
              "description": "Required. Must be \"supplier_contacts\"."
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Required unless first_name and last_name are provided. Full name (≤ 255 chars)."
                },
                "first_name": {
                  "type": "string",
                  "description": "First name (≤ 255 chars)."
                },
                "last_name": {
                  "type": "string",
                  "description": "Last name (≤ 255 chars)."
                },
                "email": {
                  "type": "string",
                  "description": "Required. Contact's email address (≤ 255 chars)."
                },
                "notes": {
                  "type": "string",
                  "description": "Additional notes about the contact."
                },
                "phone_number": {
                  "type": "string",
                  "description": "Deprecated. Prefer the `phones` relationship."
                },
                "job_title": {
                  "type": "string",
                  "description": "Contact's job title."
                },
                "external_id": {
                  "type": "string",
                  "description": "Internal system reference."
                },
                "is_suggested": {
                  "type": "boolean",
                  "description": "Whether the contact was suggested but unapproved."
                }
              },
              "description": "",
              "required": [
                "email",
                "name"
              ]
            },
            "relationships": {
              "type": "object",
              "properties": {
                "supplier_company": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Supplier company ID or external ID."
                        },
                        "type": {
                          "type": "string",
                          "description": "Must be \"supplier_companies\"."
                        }
                      },
                      "description": "",
                      "required": [
                        "id",
                        "type"
                      ]
                    }
                  },
                  "description": "Required. Link to a supplier company.",
                  "required": [
                    "data"
                  ]
                },
                "contact_types": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "Contact type ID."
                          },
                          "type": {
                            "type": "string",
                            "description": "Must be \"contact_types\"."
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      },
                      "description": ""
                    }
                  },
                  "description": "",
                  "required": [
                    "data"
                  ]
                },
                "phones": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "Phone ID."
                          },
                          "type": {
                            "type": "string",
                            "description": "Must be \"phones\"."
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      },
                      "description": "Maximum of one phone."
                    }
                  },
                  "description": "",
                  "required": [
                    "data"
                  ]
                }
              },
              "description": "",
              "required": [
                "supplier_company"
              ]
            }
          },
          "description": "The supplier contact creation payload.",
          "required": [
            "attributes",
            "data",
            "relationships",
            "type"
          ]
        }
      }
    }
  },
  {
    "name": "deactivate_scim_user_by_id",
    "description": "Deactivates a user by their unique identifier.\n\nThis operation marks the user as inactive by setting the 'active' field to False.\nUsers cannot deactivate themselves, which results in a 403 Forbidden error.\nIf the specified user does not exist, the function returns False.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique SCIM user identifier of the user to deactivate."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "delete_attachment_by_external_id",
    "description": "Delete an attachment by its external ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The external ID of the attachment to delete."
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "delete_attachment_by_id",
    "description": "Delete an attachment by its internal ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The internal ID of the attachment to delete."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "delete_contact_type_by_external_id",
    "description": "Deletes a contact type from the system using its external ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The unique external identifier of the contact type to delete."
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "delete_contact_type_by_id",
    "description": "Deletes a contact type from the system.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique internal identifier of the contact type to delete."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "delete_contract_by_external_id",
    "description": "Delete a contract by its external ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The external identifier of the contract to delete."
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "delete_contract_by_id",
    "description": "Delete a contract by its internal ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The internal identifier of the contract to delete."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "delete_contract_type_by_external_id",
    "description": "Delete a contract type by its external ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The external identifier of the contract type to delete."
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "delete_contract_type_by_id",
    "description": "Delete a contract type by its internal ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The internal identifier of the contract type to delete."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "delete_event_by_id",
    "description": "Delete an event.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique identifier of the event to delete."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "delete_event_worksheet_line_item_by_id",
    "description": "Deletes a specific line item from the system.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_id": {
          "type": "integer",
          "description": "The unique identifier of the event to which the line item belongs."
        },
        "worksheet_id": {
          "type": "integer",
          "description": "The unique identifier of the worksheet to which the line item belongs."
        },
        "id": {
          "type": "integer",
          "description": "The unique identifier of the line item to delete."
        }
      },
      "required": [
        "event_id",
        "id",
        "worksheet_id"
      ]
    }
  },
  {
    "name": "delete_field_by_external_id",
    "description": "Deletes a specific field from the system by its external ID.\n\nThis function removes a field identified by its external identifier from\nthe system. The function searches through all fields to find a match for\nthe provided external ID before performing the deletion.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The external identifier of the field to delete."
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "delete_field_by_id",
    "description": "Deletes a field using its internal identifier.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The internal identifier of the field to delete."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "delete_field_group_by_id",
    "description": "Deletes a specific field group from the system.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the field group to delete."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "delete_field_options_by_id",
    "description": "Deletes a field option from the system.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the field option to delete."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "delete_payment_currency_by_external_id",
    "description": "Deletes a payment currency using its external identifier.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The external identifier of the currency to delete."
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "delete_payment_currency_by_id",
    "description": "Deletes a payment currency using its internal identifier.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The internal identifier of the currency to delete."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "delete_payment_term_by_external_id",
    "description": "Deletes a payment term using its external identifier.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The external identifier of the payment term to delete."
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "delete_payment_term_by_id",
    "description": "Deletes a payment term using its internal identifier.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The internal identifier of the payment term to delete."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "delete_payment_type_by_external_id",
    "description": "Deletes a payment type using its external identifier.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The external identifier of the payment type to delete."
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "delete_payment_type_by_id",
    "description": "Deletes a payment type using its internal identifier.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The internal identifier of the payment type to delete."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "delete_project_by_external_id",
    "description": "Deletes a project using its external identifier.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The unique external identifier of the project to delete."
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "delete_project_by_id",
    "description": "Deletes a project using its unique internal identifier.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique internal identifier of the project to delete."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "delete_spend_category_by_external_id",
    "description": "Deletes an existing spend category using its internal identifier.\n\nThe internal ID must match the one provided in the URL path.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Internal identifier of the spend category to be deleted."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "delete_spend_category_by_id",
    "description": "Deletes an existing spend category by its unique identifier.\n\nThe identifier must match the one returned during spend category creation. This operation is irreversible and will permanently remove the category.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "Unique ID of the spend category to delete."
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "delete_supplier_company_by_external_id",
    "description": "Deletes a supplier company using its external identifier.\n\nThis operation permanently deletes an existing supplier company. You must provide the external identifier used during the supplier company’s creation.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "Required. The external ID of the supplier company to delete.\nExample: \"1234-5678-abcd-efgh\""
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "delete_supplier_company_by_id",
    "description": "Deletes a supplier company by its unique identifier.\n\nThis operation permanently removes the supplier company record from the system.\nYou must provide the supplier company ID that was returned upon its creation.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Required. Unique Supplier Company identifier.\nExample: 1"
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "delete_supplier_company_contact_by_id",
    "description": "Deletes a supplier company contact.\n\nThis function removes a specific contact from the system using both the company ID\nand contact ID for identification.",
    "parameters": {
      "type": "object",
      "properties": {
        "company_id": {
          "type": "integer",
          "description": "The unique identifier of the supplier company.\nThis is the internal ID used by the system to reference the company."
        },
        "contact_id": {
          "type": "integer",
          "description": "The unique identifier of the contact.\nThis is the internal ID used by the system to reference the contact."
        }
      },
      "required": [
        "company_id",
        "contact_id"
      ]
    }
  },
  {
    "name": "delete_supplier_contact_by_external_id",
    "description": "Deletes a supplier contact using the external identifier.\n\nThis function permanently removes the specified supplier contact identified by\nits external ID from the system.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "Required. The unique external identifier of the supplier contact.\nExample: \"CNT-17\""
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "delete_supplier_contact_by_id",
    "description": "Deletes a supplier contact by its unique identifier.\n\nThis function permanently removes the specified supplier contact from the system.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Required. Unique identifier of the supplier contact to be deleted."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "describe_bid_fields",
    "description": "Returns a list of fields for the bid object.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "describe_bid_line_items_fields",
    "description": "Retrieves the list of available fields for bid line item objects.\n\nThis function returns a comprehensive list of all fields that can be present\nin a bid line item object, based on the schema definition in the system.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "describe_supplier_company_fields",
    "description": "Describes the Supplier Company object fields.\n\nReturns a list of field names for the Supplier Company resource. This metadata \nis useful for understanding the available fields that can be used when working \nwith supplier company data.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "get_attachment_by_external_id",
    "description": "Retrieve a specific attachment by its external ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The external ID of the attachment to retrieve."
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "get_attachment_by_id",
    "description": "Retrieve a specific attachment by its internal ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The internal ID of the attachment to retrieve."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "get_award_line_item_by_id",
    "description": "Retrieve details of a specific award line item.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the award line item to retrieve."
        },
        "_include": {
          "type": "string",
          "description": "Use the _include parameter to request related resources along with the primary resource.\nSupported includes: \"supplier_company\", \"worksheet\"."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "get_bid_by_id",
    "description": "Retrieves the details of an existing bid. You need to supply the unique bid identifier that was returned upon bid creation.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique internal identifier of the bid to retrieve. This ID is\ntypically returned when the bid is created in the system. Must be a\npositive integer."
        },
        "_include": {
          "type": "string",
          "description": "A comma-separated string specifying additional\nrelated data to include in the response. Common options include:\n- 'event': Include associated event details\n- 'supplier_company': Include supplier information\nDefaults to None."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "get_bid_line_item_by_id",
    "description": "Retrieves the details of an existing bid line item.\n\nThis function locates a specific bid line item using its unique identifier\nand returns its complete details if found.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique identifier of the bid line item to retrieve."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "get_contract_award_by_id",
    "description": "Retrieves detailed information about a specific contract award.\n\nThis function returns comprehensive information about a contract award,\nincluding all its associated data and configurations. The function provides\ncomplete visibility into award details and associated metrics.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique internal identifier of the award to retrieve."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "get_contract_award_line_item_by_id",
    "description": "Retrieves detailed information about a specific award line item.\n\nThis function returns comprehensive information about a contract award line\nitem, including all its associated data and configurations. The function\nprovides complete visibility into line item details and associated metrics.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the award line item to retrieve."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "get_contract_by_external_id",
    "description": "Retrieve details of a specific contract by its external ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The external identifier of the contract to retrieve."
        },
        "_include": {
          "type": "string",
          "description": "Comma-separated list of relationships to include\nin the response.\nSupported values: \"contract_type\", \"spend_category\", \"supplier_company\", \"docusign_envelopes\", \"adobe_sign_agreements\""
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "get_contract_by_id",
    "description": "Retrieve details of a specific contract by its internal ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The internal identifier of the contract to retrieve."
        },
        "_include": {
          "type": "string",
          "description": "Comma-separated list of relationships to include\nin the response. \nSupported values: \"contract_type\", \"spend_category\", \"supplier_company\", \"docusign_envelopes\", \"adobe_sign_agreements\""
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "get_contract_fields_description",
    "description": "Retrieve a list of all available fields for the contract object.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "get_contract_milestone_report_schema",
    "description": "Retrieves the contract milestone report schema.\n\nThe schema defines the structure and expected data types for each field in a contract milestone report entry. \nThis information is useful for dynamically generating forms, validating input, or formatting report data.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "get_contract_report_entries",
    "description": "Retrieves a list of contract report entries.\n\nContract reports are aggregated data entries related to contract performance, values, timelines, or milestones.\nThis endpoint returns all available contract report entries in a simple list format.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "get_contract_report_schema",
    "description": "Retrieves the schema definition for contract report entries.\n\nThe schema outlines the available fields, their types, and how data is structured within contract reports. \nThis information is useful for dynamically interpreting or building UIs and integrations based on contract data fields.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "get_contract_type_by_external_id",
    "description": "Retrieve details of a specific contract type by its external ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The external identifier of the contract type to retrieve."
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "get_contract_type_by_id",
    "description": "Retrieve details of a specific contract type by its internal ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The internal identifier of the contract type to retrieve."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "get_event_by_id",
    "description": "Retrieve details of a specific event.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique identifier of the event to retrieve."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "get_event_report_entries_by_report_id",
    "description": "Retrieves a list of event report entries for a specific event report.\n\nThis endpoint provides detailed entries linked to a single event report, identified by `event_report_id`. It is useful for retrieving scoped data related to a specific event. The response is paginated.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_report_id": {
          "type": "integer",
          "description": "Unique identifier for the event report to retrieve entries from."
        }
      },
      "required": [
        "event_report_id"
      ]
    }
  },
  {
    "name": "get_event_report_schema",
    "description": "Retrieves the schema definition for event report entries.\n\nThis schema provides metadata about the fields available in event report entries, including their names and data types. It can be used to dynamically interpret and render event report data.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "get_event_template_by_id",
    "description": "Retrieves the details of an existing event template by its ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique internal identifier of the event template to retrieve."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "get_event_worksheet_by_id",
    "description": "Retrieves the details of an existing worksheet. You need to supply the unique worksheet identifier that was returned upon worksheet creation.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_id": {
          "type": "integer",
          "description": "The unique identifier of the event to which the worksheet belongs."
        },
        "id": {
          "type": "integer",
          "description": "The unique identifier of the worksheet to retrieve."
        }
      },
      "required": [
        "event_id",
        "id"
      ]
    }
  },
  {
    "name": "get_event_worksheet_line_item_by_id",
    "description": "Retrieves the details of an existing line item. You need to supply the unique line item identifier that \n\nwas returned upon line item creation.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_id": {
          "type": "integer",
          "description": "The unique identifier of the event to which the line item belongs."
        },
        "worksheet_id": {
          "type": "integer",
          "description": "The unique identifier of the worksheet to which the line item belongs."
        },
        "id": {
          "type": "integer",
          "description": "The unique identifier of the line item to retrieve."
        }
      },
      "required": [
        "event_id",
        "id",
        "worksheet_id"
      ]
    }
  },
  {
    "name": "get_field_by_external_id",
    "description": "Retrieves the details of a specific field by its external ID.\n\nThis function returns the complete details of a field identified by its\nexternal identifier. The function searches through all fields to find a\nmatch for the provided external ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The external identifier of the field to retrieve."
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "get_field_details_by_id",
    "description": "Retrieves the details of an existing field using its internal identifier.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The internal identifier of the field to retrieve."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "get_field_group_by_id",
    "description": "Retrieves the details of a specific field group by its ID.\n\nThis function returns the complete details of a field group identified by its\nunique identifier. The function supports both string and integer ID formats.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the field group to retrieve."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "get_performance_review_answer_report_schema",
    "description": "Retrieves the schema for performance review answer reports.\n\nThis schema outlines the structure of performance review answers returned by the API, including field names and their respective data types. Useful for dynamic rendering or processing of answer entries.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "get_performance_review_report_schema",
    "description": "Retrieves the schema for the performance review report.\n\nThe schema defines the structure of performance review report entries, including field types and names. This is useful for dynamically building forms, validating input, or rendering reports.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "get_project_by_external_id",
    "description": "Retrieves the details of a specific project using its external identifier.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The unique external identifier of the project to retrieve."
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "get_project_details_by_id",
    "description": "Retrieves the details of a specific project using its unique internal identifier.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique internal identifier of the project to retrieve."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "get_project_fields_description",
    "description": "Retrieves a list of all available fields for project objects.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "get_project_milestone_report_schema",
    "description": "Retrieves the schema definition for project milestone reports.\n\nThis endpoint provides metadata describing the fields available in project milestone reporting. Useful for dynamically rendering forms or parsing report data.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "get_project_report_entries_by_id",
    "description": "Retrieves a list of report entries for a specified project report.\n\nAccepts an optional project_report_id parameter in newer API versions (2019-01-01 and later). Use this to scope results to a particular report.",
    "parameters": {
      "type": "object",
      "properties": {
        "project_report_id": {
          "type": "integer",
          "description": "Unique identifier of the project report."
        }
      },
      "required": [
        "project_report_id"
      ]
    }
  },
  {
    "name": "get_project_report_schema",
    "description": "Retrieves the schema definition for project report entries.\n\nThe schema provides metadata about the fields used in project reports, including field names and data types.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "get_project_type_by_id",
    "description": "Retrieves detailed information about a specific project type using its unique identifier.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique identifier of the project type."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "get_savings_report_schema",
    "description": "Retrieves the schema definition for the savings report.\n\nThe schema provides a list of fields and their types used in the savings report entries. This is useful for understanding the expected structure and available data fields when creating or interpreting report entries.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "get_scim_resource_type_by_name",
    "description": "Retrieves metadata for a specific SCIM resource type.\n\nThis endpoint provides the schema, endpoint path, and any extensions supported for a given SCIM resource (e.g., \"User\"). It returns a subset of the information available from the general `/ResourceTypes` endpoint, focusing on a single resource type.",
    "parameters": {
      "type": "object",
      "properties": {
        "resource": {
          "type": "string",
          "description": "Name of the SCIM resource type.\n- Example: \"User\""
        }
      },
      "required": [
        "resource"
      ]
    }
  },
  {
    "name": "get_scim_resource_type_metadata_by_name",
    "description": "Retrieves metadata for a specific SCIM resource type.\n\nThis endpoint provides the schema, endpoint path, and any extensions supported for a given SCIM resource (e.g., \"User\"). It returns a subset of the information available from the general `/ResourceTypes` endpoint, focusing on a single resource type.",
    "parameters": {
      "type": "object",
      "properties": {
        "resource": {
          "type": "string",
          "description": "Name of the SCIM resource type.\n- Example: \"User\""
        }
      },
      "required": [
        "resource"
      ]
    }
  },
  {
    "name": "get_scim_schema_by_uri",
    "description": "Retrieves a specific SCIM schema by its URI.\n\nThis endpoint provides the structure and metadata for a SCIM resource type, including all attributes and constraints, as defined by the schema URI (e.g., User, Group).",
    "parameters": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Schema URI identifying the SCIM resource type.\n- Example: \"urn:ietf:params:scim:schemas:core:2.0:User\""
        }
      },
      "required": [
        "uri"
      ]
    }
  },
  {
    "name": "get_scim_service_provider_config",
    "description": "Retrieves the SCIM service provider configuration, describing supported features and capabilities.\n\nThis endpoint returns metadata about the SCIM implementation, including patch, filter, bulk, authentication schemes, and more, as specified in Section 5 of RFC 7643.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "get_scim_user_by_id",
    "description": "Retrieves the details of a single user by SCIM resource ID.\n\nThis endpoint conforms to SCIM 2.0 RFC 7644 Section 3.4.1, returning user metadata,\ncore attributes, and optional related roles or identifiers. It supports attribute\nselection and filtering.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique SCIM identifier of the user to retrieve."
        },
        "attributes": {
          "type": "string",
          "description": "Comma-separated list of attributes to return in the response.\nValid values:\n- \"userName\": User's unique identifier (email address)\n- \"name\": Complete name object with givenName and familyName\n- \"name.familyName\": User's last name only\n- \"name.givenName\": User's first name only\n- \"roles\": Complete roles array with all role properties\n- \"roles.value\": Only the role value field from roles\n- \"roles.display\": Only the role display name from roles\n- \"roles.primary\": Only the role primary flag from roles\n- \"roles.type\": Only the role type field from roles\n- \"externalId\": External system identifier for the user\n- \"active\": Boolean indicating if user account is active\n- \"meta\": Complete meta object with all metadata\n- \"meta.resourceType\": Resource type from meta object\n- \"meta.created\": ISO 8601 timestamp of creation\n- \"meta.lastModified\": ISO 8601 timestamp of last modification\n- \"meta.location\": Full URL to access the specific user resource\n- \"id\": SCIM resource identifier (UUID)\n- \"schemas\": SCIM schemas array"
        },
        "filter": {
          "type": "string",
          "description": "SCIM-compliant filter expression for additional filtering.\nSupported filter attributes:\n- userName, name, name.familyName, name.givenName, \n  roles, roles.value, roles.display, roles.primary, roles.type,\n  externalId, active, meta, meta.resourceType, meta.created, meta.lastModified, meta.location, id, schemas\n  \nSupported operators (case-insensitive):\n- eq (equal): Exact match comparison\n- ne (not equal): Non-matching comparison  \n- co (contains): Substring match\n- sw (starts with): Prefix match\n- ew (ends with): Suffix match\n- pr (present): Attribute has non-empty value\n- gt (greater than): Lexicographical/chronological/numeric comparison\n- ge (greater than or equal): Inclusive greater comparison\n- lt (less than): Lexicographical/chronological/numeric comparison\n- le (less than or equal): Inclusive lesser comparison\n\nLogical operators:\n- and: Both expressions must be true\n- or: Either expression must be true\n- not: Expression must be false\n\nExamples:\n- 'active eq true'\n- 'roles.value eq \"admin\"'\n- 'name.familyName co \"Smith\"'"
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "get_spend_category_by_id",
    "description": "Retrieves the details of a specific spend category by its unique identifier.\n\nSpend categories define classification for various types of organizational spend such as procurement, expenses, supplier invoices, etc.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "Unique identifier of the spend category."
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "get_spend_category_details_by_external_id",
    "description": "Retrieves the details of an existing spend category using its internal identifier.\n\nInternal IDs allow referencing spend categories directly in the database. This is useful for internal operations and direct database access.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Internal identifier of the spend category."
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "get_supplier_by_id",
    "description": "Retrieves the details of an existing supplier company by its unique ID.\n\nThis function searches for a supplier in the database by their ID and returns\nthe supplier object if found, or None if not found.",
    "parameters": {
      "type": "object",
      "properties": {
        "supplier_id": {
          "type": "integer",
          "description": "Unique identifier of the supplier company to retrieve."
        }
      },
      "required": [
        "supplier_id"
      ]
    }
  },
  {
    "name": "get_supplier_company_by_external_id",
    "description": "Retrieves a supplier company using its external identifier.\n\nThis endpoint fetches the details of a supplier company by its unique external ID. Related resources can be included using the `include` query parameter.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "Required. The external identifier of the supplier company. Example: \"1234-5678-abcd-efgh\""
        },
        "_include": {
          "type": "string",
          "description": "Comma-separated list of related resources to include in the response. \nEnum values:\n- \"attachments\"\n- \"supplier_category\"\n- \"supplier_groups\"\n- \"default_payment_term\"\n- \"payment_types\"\n- \"default_payment_type\"\n- \"payment_currencies\"\n- \"default_payment_currency\"\n- \"supplier_classification_values\""
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "get_supplier_company_by_id",
    "description": "Retrieves the details of an existing supplier company.\n\nThis function fetches all metadata and linked relationships for a supplier\ncompany using its unique identifier. Related resources can optionally be\nincluded using the `include` query parameter.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Required. Unique identifier of the supplier company.\nExample: 1"
        },
        "_include": {
          "type": "string",
          "description": "Comma-separated list of related resources to include.\nAllowed values:\n- \"attachments\"\n- \"supplier_category\"\n- \"supplier_groups\"\n- \"default_payment_term\"\n- \"payment_types\"\n- \"default_payment_type\"\n- \"payment_currencies\"\n- \"default_payment_currency\"\n- \"supplier_classification_values\""
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "get_supplier_company_contact_by_id",
    "description": "Retrieves the details of an existing supplier company contact.\n\nThis function locates a specific contact using both the company ID and contact ID,\nthen returns the complete contact details with optional related resource inclusion.",
    "parameters": {
      "type": "object",
      "properties": {
        "company_id": {
          "type": "integer",
          "description": "The unique identifier of the supplier company.\nThis is the internal ID used by the system to reference the company."
        },
        "contact_id": {
          "type": "integer",
          "description": "The unique identifier of the contact.\nThis is the internal ID used by the system to reference the contact."
        },
        "_include": {
          "type": "string",
          "description": "Comma-separated list of related resources to include\nin the response. Not fully implemented in simulation."
        }
      },
      "required": [
        "company_id",
        "contact_id"
      ]
    }
  },
  {
    "name": "get_supplier_company_contacts_by_external_id",
    "description": "Retrieves contacts associated with a supplier company by external identifier.\n\nThis function returns all contacts for a specific supplier company and optionally\nfilters them based on provided criteria. The external ID must match the one used\nwhen the company was created.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "Required. External identifier of the supplier company.\nExample: \"COMP-001\""
        },
        "_include": {
          "type": "string",
          "description": "Comma-separated list of related resources to include.\nCurrently not fully implemented."
        },
        "filter": {
          "type": "object",
          "properties": {},
          "description": "Optional filter criteria to apply to contacts.\nEach key-value pair in the dictionary will be used to filter contacts."
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "get_supplier_contact_by_external_id",
    "description": "Retrieves the details of an existing supplier contact by external ID.\n\nThis function returns the full resource representation of a supplier contact\nidentified by its external ID, with optional inclusion of related entities.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "Required. Unique external identifier of the supplier contact.\nExample: \"CNT-17\""
        },
        "_include": {
          "type": "string",
          "description": "Comma-separated list of related resources to include in the response.\nAllowed values:\n- \"supplier_company\"\n- \"contact_types\"\n- \"phones\""
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "get_supplier_contact_by_id",
    "description": "Retrieves the details of an existing supplier contact by ID.\n\nThis function returns full information about a supplier contact, including their\nattributes and optionally included related resources such as contact types, phones,\nand linked supplier company.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Required. Unique identifier of the supplier contact."
        },
        "_include": {
          "type": "string",
          "description": "Comma-separated list of related resources to include in the response.\nAllowed values:\n- \"supplier_company\"\n- \"contact_types\"\n- \"phones\""
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "get_supplier_report_schema",
    "description": "Returns the supplier report schema.\n\nThis function retrieves the schema definition for supplier reports, including\nfield names, types, and metadata that describe how supplier report entries are structured.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "get_supplier_review_report_schema",
    "description": "Returns the supplier review report schema.\n\nThis function retrieves the schema definition for supplier review reports. The schema\ndescribes the structure of review report entries, including the type and name of each field.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_all_attachments_with_filter",
    "description": "Returns a filtered list of attachments based on the `filter[id_equals]` param.\n\nThe result is limited to 50 attachments.",
    "parameters": {
      "type": "object",
      "properties": {
        "filter_id_equals": {
          "type": "string",
          "description": "Comma-separated string of attachment IDs to filter by. Defaults to None.\nIf None, all attachments are returned (up to the limit)."
        }
      }
    }
  },
  {
    "name": "list_all_bid_line_items",
    "description": "Returns a list of all bid line items.\n\nThis function returns all bid line items in the system, with the option to\nfilter the results based on specific criteria.",
    "parameters": {
      "type": "object",
      "properties": {
        "filter": {
          "type": "object",
          "description": "A dictionary containing field-value pairs to filter\nthe bid line items. Each key in the dictionary represents a field name,\nand its corresponding value is the exact value to match.\nExample: {\"bid_id\": 123, \"status\": \"active\"}\nDefaults to None, which returns all bid line items."
        }
      }
    }
  },
  {
    "name": "list_all_suppliers",
    "description": "Returns a list of all supplier companies from the database.\n\nThis function retrieves all suppliers stored in the simulation database\nwithout any filtering or pagination.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_attachments_by_ids",
    "description": "Retrieve a filtered list of attachments based on specified IDs.\n\nThis function returns a list of attachments matching the provided IDs, with a maximum\nlimit of 50 attachments per request.",
    "parameters": {
      "type": "object",
      "properties": {
        "filter_id_equals": {
          "type": "string",
          "description": "Comma-separated string of attachment IDs to filter by."
        }
      },
      "required": [
        "filter_id_equals"
      ]
    }
  },
  {
    "name": "list_award_line_items_for_award",
    "description": "Retrieve line items associated with a specific award.",
    "parameters": {
      "type": "object",
      "properties": {
        "award_id": {
          "type": "integer",
          "description": "The unique identifier of the award to retrieve line items for."
        },
        "filter_is_quoted_equals": {
          "type": "boolean",
          "description": "Filter line items by their quoted status.\nTrue for quoted items, False for non-quoted items."
        },
        "filter_line_item_type_equals": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Return awards line items with specified line item types.\nValid types include: \"STANDARD\", \"GOODS\", \"SERVICES\"."
        },
        "_include": {
          "type": "string",
          "description": "Use the _include parameter to request related resources along with the primary resource.\nSupported includes: \"supplier_company\", \"worksheet\"."
        }
      },
      "required": [
        "award_id"
      ]
    }
  },
  {
    "name": "list_awards_with_filters",
    "description": "Retrieve a list of awards based on specified filter criteria.\n\nThis function supports filtering awards by their state and update timestamps.\nMultiple filters can be combined to narrow down the results.",
    "parameters": {
      "type": "object",
      "properties": {
        "filter_state_equals": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of states to filter awards by.\nValid states include: \"draft\" \"confirmed\" \"awaiting_requisition_sync\" \"requisition_created\"."
        },
        "filter_updated_at_from": {
          "type": "string",
          "description": "Return awards updated on or after the specified timestamp.."
        },
        "filter_updated_at_to": {
          "type": "string",
          "description": "Return awards updated on or before the specified timestamp."
        }
      }
    }
  },
  {
    "name": "list_bid_line_items_for_bid",
    "description": "Returns a list of line items associated with a specific bid.\n\nThis function returns all line items that are linked to the specified bid ID,\nallowing for detailed analysis of bid components and their associated data.",
    "parameters": {
      "type": "object",
      "properties": {
        "bid_id": {
          "type": "integer",
          "description": "The unique identifier of the bid for which to retrieve line items."
        }
      },
      "required": [
        "bid_id"
      ]
    }
  },
  {
    "name": "list_contact_types",
    "description": "Retrieves a list of all contact types in the system.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_contract_award_line_items",
    "description": "Retrieves a list of line items associated with a specific contract award.\n\nThis function returns all line items that are linked to the specified award ID,\nallowing for detailed analysis of award components and their associated data.\nThe line items provide granular information about the award's components.",
    "parameters": {
      "type": "object",
      "properties": {
        "award_id": {
          "type": "integer",
          "description": "The unique identifier of the award for which to retrieve\nline items."
        }
      },
      "required": [
        "award_id"
      ]
    }
  },
  {
    "name": "list_contract_awards",
    "description": "Retrieves a list of all contract awards in the Workday Strategic Sourcing system.\n\nThis function returns all available contract awards, providing comprehensive\ninformation about each award including their associated data and configurations.\nThe function enables complete visibility into all awards and their current status.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_contract_milestone_report_entries",
    "description": "Retrieves a list of contract milestone report entries.\n\nReturns paginated milestone entries submitted under contract reports. Used for tracking progress or performance milestones across contracts.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_contract_types",
    "description": "Retrieve a list of all available contract types.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_contracts",
    "description": "Retrieve a list of contracts based on specified criteria.\n\nThis function supports filtering, relationship inclusion, and pagination of contracts.\nContracts can be filtered based on any attribute present in the contract object.",
    "parameters": {
      "type": "object",
      "properties": {
        "filter": {
          "type": "object",
          "description": "Dictionary containing filter criteria for contracts. Supported filters:",
          "properties": {
            "updated_at_from": {
              "type": "string",
              "description": "Return contracts updated on or after timestamp"
            },
            "updated_at_to": {
              "type": "string",
              "description": "Return contracts updated on or before timestamp"
            },
            "number_from": {
              "type": "string",
              "description": "Find contracts with number >= specified"
            },
            "number_to": {
              "type": "string",
              "description": "Find contracts with number <= specified"
            },
            "title_contains": {
              "type": "string",
              "description": "Return contracts with title containing string"
            },
            "title_not_contains": {
              "type": "string",
              "description": "Return contracts with title not containing string"
            },
            "description_contains": {
              "type": "string",
              "description": "Return contracts with description containing string"
            },
            "description_not_contains": {
              "type": "string",
              "description": "Return contracts with description not containing string"
            },
            "external_id_empty": {
              "type": "boolean",
              "description": "Return contracts with blank external_id"
            },
            "external_id_not_empty": {
              "type": "boolean",
              "description": "Return contracts with non-blank external_id"
            },
            "external_id_equals": {
              "type": "string",
              "description": "Find contracts by specific external ID"
            },
            "external_id_not_equals": {
              "type": "string",
              "description": "Find contracts excluding specified external ID"
            },
            "actual_start_date_from": {
              "type": "string",
              "description": "Return contracts started on or after date"
            },
            "actual_start_date_to": {
              "type": "string",
              "description": "Return contracts started on or before date"
            },
            "actual_end_date_from": {
              "type": "string",
              "description": "Return contracts ended on or after date"
            },
            "actual_end_date_to": {
              "type": "string",
              "description": "Return contracts ended on or before date"
            },
            "actual_spend_amount_from": {
              "type": "number",
              "description": "Return contracts with spend >= amount"
            },
            "actual_spend_amount_to": {
              "type": "number",
              "description": "Return contracts with spend <= amount"
            },
            "auto_renewal": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Auto-renewal mode (\"yes\", \"no\", \"evergreen\")"
            },
            "needs_attention_equals": {
              "type": "boolean",
              "description": "Return contracts with specified needs attention status"
            },
            "needs_attention_not_equals": {
              "type": "boolean",
              "description": "Return contracts with needs attention status not equal"
            },
            "renew_number_of_times_from": {
              "type": "integer",
              "description": "Find contracts renewing >= specified times"
            },
            "renew_number_of_times_to": {
              "type": "integer",
              "description": "Find contracts renewing <= specified times"
            },
            "state_equals": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Find contracts with specified states"
            },
            "terminated_note_contains": {
              "type": "string",
              "description": "Return contracts with termination note containing string"
            },
            "terminated_note_not_contains": {
              "type": "string",
              "description": "Return contracts with termination note not containing string"
            },
            "terminated_note_empty": {
              "type": "string",
              "description": "Return contracts with empty termination note"
            },
            "terminated_note_not_empty": {
              "type": "string",
              "description": "Return contracts with non-empty termination note"
            },
            "terminated_reason_contains": {
              "type": "string",
              "description": "Return contracts with termination reason containing string"
            },
            "terminated_reason_not_contains": {
              "type": "string",
              "description": "Return contracts with termination reason not containing string"
            },
            "terminated_reason_empty": {
              "type": "string",
              "description": "Return contracts with empty termination reason"
            },
            "terminated_reason_not_empty": {
              "type": "string",
              "description": "Return contracts with non-empty termination reason"
            },
            "contract_type_id_equals": {
              "type": "integer",
              "description": "Find contracts with specified contract type"
            },
            "contract_type_id_not_equals": {
              "type": "integer",
              "description": "Find contracts with different contract type"
            },
            "marked_as_needs_attention_at_from": {
              "type": "string",
              "description": "Find contracts marked needs attention after date"
            },
            "marked_as_needs_attention_at_to": {
              "type": "string",
              "description": "Find contracts marked needs attention before date"
            },
            "needs_attention_note_contains": {
              "type": "string",
              "description": "Return contracts with needs attention note containing string"
            },
            "needs_attention_note_not_contains": {
              "type": "string",
              "description": "Return contracts with needs attention note not containing string"
            },
            "needs_attention_note_empty": {
              "type": "string",
              "description": "Return contracts with empty needs attention note"
            },
            "needs_attention_note_not_empty": {
              "type": "string",
              "description": "Return contracts with non-empty needs attention note"
            },
            "needs_attention_reason_contains": {
              "type": "string",
              "description": "Return contracts with needs attention reason containing string"
            },
            "needs_attention_reason_not_contains": {
              "type": "string",
              "description": "Return contracts with needs attention reason not containing string"
            },
            "needs_attention_reason_empty": {
              "type": "string",
              "description": "Return contracts with empty needs attention reason"
            },
            "needs_attention_reason_not_empty": {
              "type": "string",
              "description": "Return contracts with non-empty needs attention reason"
            },
            "renewal_termination_notice_date_from": {
              "type": "string",
              "description": "Find contracts with termination notice date >= specified"
            },
            "renewal_termination_notice_date_to": {
              "type": "string",
              "description": "Find contracts with termination notice date <= specified"
            },
            "renewal_termination_reminder_date_from": {
              "type": "string",
              "description": "Find contracts with termination reminder date >= specified"
            },
            "renewal_termination_reminder_date_to": {
              "type": "string",
              "description": "Find contracts with termination reminder date <= specified"
            },
            "spend_category_id_equals": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "Find contracts using specified Spend Category IDs"
            }
          },
          "required": [
            "actual_end_date_from",
            "actual_end_date_to",
            "actual_spend_amount_from",
            "actual_spend_amount_to",
            "actual_start_date_from",
            "actual_start_date_to",
            "auto_renewal",
            "contract_type_id_equals",
            "contract_type_id_not_equals",
            "description_contains",
            "description_not_contains",
            "external_id_empty",
            "external_id_equals",
            "external_id_not_empty",
            "external_id_not_equals",
            "marked_as_needs_attention_at_from",
            "marked_as_needs_attention_at_to",
            "needs_attention_equals",
            "needs_attention_not_equals",
            "needs_attention_note_contains",
            "needs_attention_note_empty",
            "needs_attention_note_not_contains",
            "needs_attention_note_not_empty",
            "needs_attention_reason_contains",
            "needs_attention_reason_empty",
            "needs_attention_reason_not_contains",
            "needs_attention_reason_not_empty",
            "number_from",
            "number_to",
            "renew_number_of_times_from",
            "renew_number_of_times_to",
            "renewal_termination_notice_date_from",
            "renewal_termination_notice_date_to",
            "renewal_termination_reminder_date_from",
            "renewal_termination_reminder_date_to",
            "spend_category_id_equals",
            "state_equals",
            "terminated_note_contains",
            "terminated_note_empty",
            "terminated_note_not_contains",
            "terminated_note_not_empty",
            "terminated_reason_contains",
            "terminated_reason_empty",
            "terminated_reason_not_contains",
            "terminated_reason_not_empty",
            "title_contains",
            "title_not_contains",
            "updated_at_from",
            "updated_at_to"
          ]
        },
        "_include": {
          "type": "string",
          "description": "Comma-separated list of relationships to include in response.\nSupported values: \"contract_type\", \"spend_category\", \"supplier_company\", \n\"docusign_envelopes\", \"adobe_sign_agreements\""
        },
        "page": {
          "type": "object",
          "description": "Dictionary containing pagination parameters:",
          "properties": {
            "size": {
              "type": "integer",
              "description": "Number of results per page (default: 10, max: 100)"
            }
          },
          "required": [
            "size"
          ]
        }
      }
    }
  },
  {
    "name": "list_custom_fields",
    "description": "Returns a list of custom fields for the specified criteria.",
    "parameters": {
      "type": "object",
      "properties": {
        "filter": {
          "type": "object",
          "description": "A dictionary containing field attributes and their desired values for filtering.\nIf None, returns all fields. Supported filters:",
          "properties": {
            "group_id_equals": {
              "type": "string",
              "description": "ID of the group for which fields should be selected"
            },
            "target_object_equals": {
              "type": "string",
              "description": "Find custom fields by target class name"
            }
          },
          "required": [
            "group_id_equals",
            "target_object_equals"
          ]
        }
      }
    }
  },
  {
    "name": "list_event_bids",
    "description": "Returns a list of all bids. Only bids for events of type RFP are returned\n\nThis function returns all bids linked to the specified event, with support\nfor filtering, pagination, and optional inclusion of related data. Only\nbids for events of type RFP (Request for Proposal) are returned. The function\nsupports comprehensive filtering and data inclusion options.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_id": {
          "type": "integer",
          "description": "The unique identifier of the event for which to retrieve\nbids."
        },
        "filter": {
          "type": "object",
          "description": "A dictionary containing filter criteria for bids. Each key represents a filter field with its corresponding value. Supported filters:",
          "properties": {
            "id_equals": {
              "type": "integer",
              "description": "Find bids by specific IDs"
            },
            "intend_to_bid_equals": {
              "type": "boolean",
              "description": "Return bids with specified \"intent to bid\" status"
            },
            "intend_to_bid_not_equals": {
              "type": "boolean",
              "description": "Return bids with \"intent to bid\" status not equal to specified value"
            },
            "intend_to_bid_answered_at_from": {
              "type": "string",
              "description": "Return bids with intend_to_bid updated on or after timestamp"
            },
            "intend_to_bid_answered_at_to": {
              "type": "string",
              "description": "Return bids with intend_to_bid updated on or before timestamp"
            },
            "submitted_at_from": {
              "type": "string",
              "description": "Return bids with submitted_at on or after timestamp"
            },
            "submitted_at_to": {
              "type": "string",
              "description": "Return bids with submitted_at on or before timestamp"
            },
            "resubmitted_at_from": {
              "type": "string",
              "description": "Return bids with resubmitted_at on or after timestamp"
            },
            "resubmitted_at_to": {
              "type": "string",
              "description": "Return bids with resubmitted_at on or before timestamp"
            },
            "status_equals": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Find bids with specified statuses (award_retracted, awarded, draft, rejected, rejection_retracted, resubmitted, revising, submitted, unclaimed, update_requested)"
            },
            "supplier_company_id_equals": {
              "type": "integer",
              "description": "Find bids by specific Supplier Company IDs"
            },
            "supplier_company_external_id_equals": {
              "type": "string",
              "description": "Find bids by specific Supplier Company External IDs"
            }
          },
          "required": [
            "id_equals",
            "intend_to_bid_answered_at_from",
            "intend_to_bid_answered_at_to",
            "intend_to_bid_equals",
            "intend_to_bid_not_equals",
            "resubmitted_at_from",
            "resubmitted_at_to",
            "status_equals",
            "submitted_at_from",
            "submitted_at_to",
            "supplier_company_external_id_equals",
            "supplier_company_id_equals"
          ]
        },
        "_include": {
          "type": "string",
          "description": "A string specifying additional related resources to include in the response. Supported values:\n- \"event\": Include event details\n- \"supplier_company\": Include supplier company details\nDefaults to None."
        },
        "page": {
          "type": "object",
          "description": "A dictionary containing pagination parameters:",
          "properties": {
            "size": {
              "type": "integer",
              "description": "The number of results returned per page. Default is 10, maximum is 100."
            }
          },
          "required": [
            "size"
          ]
        }
      },
      "required": [
        "event_id"
      ]
    }
  },
  {
    "name": "list_event_report_entries",
    "description": "Retrieves a list of event report entries.\n\nEvent report entries contain detailed records of events captured within the system. These can include audit events, workflow triggers, system updates, etc. The response is paginated and supports traversal through `next` and `prev` links.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_event_templates",
    "description": "Returns a list of all event templates.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_event_worksheet_line_items",
    "description": "Returns a list of line items for the specified criteria.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_id": {
          "type": "integer",
          "description": "The unique identifier of the event to which the line items belong."
        },
        "worksheet_id": {
          "type": "integer",
          "description": "The unique identifier of the worksheet to which the line items belong."
        }
      },
      "required": [
        "event_id",
        "worksheet_id"
      ]
    }
  },
  {
    "name": "list_event_worksheets",
    "description": "Returns a list of all worksheets.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_id": {
          "type": "integer",
          "description": "The unique identifier of the event to which the worksheets belong."
        }
      },
      "required": [
        "event_id"
      ]
    }
  },
  {
    "name": "list_events_with_filters",
    "description": "Returns a list of events for the specified criteria.",
    "parameters": {
      "type": "object",
      "properties": {
        "filter": {
          "type": "object",
          "description": "Dictionary containing filter criteria where keys are\nevent attributes and values are the desired values to match. Supported filters:",
          "properties": {
            "updated_at_from": {
              "type": "string",
              "description": "Return events updated on or after timestamp"
            },
            "updated_at_to": {
              "type": "string",
              "description": "Return events updated on or before timestamp"
            },
            "title_contains": {
              "type": "string",
              "description": "Return events with title containing string"
            },
            "title_not_contains": {
              "type": "string",
              "description": "Return events with title not containing string"
            },
            "spend_category_id_equals": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "Find events using specified Spend Category IDs"
            },
            "state_equals": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Find events with specified states (\"draft\", \"scheduled\", \"published\", \"live_editing\", \"closed\", \"canceled\")"
            },
            "event_type_equals": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Find events with specified types (\"RFP\", \"AUCTION\", \"AUCTION_WITH_LOTS\", \"AUCTION_LOT\", \"PERFORMANCE_REVIEW_EVENT\", \"PERFORMANCE_REVIEW_SCORE_CARD_ONLY_EVENT\", \"SUPPLIER_REVIEW_EVENT\", \"SUPPLIER_REVIEW_MASTER_EVENT\")"
            },
            "request_type_equals": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Find events with specified request types"
            },
            "supplier_rsvp_deadline_from": {
              "type": "string",
              "description": "Return events with RSVP deadline on or after date"
            },
            "supplier_rsvp_deadline_to": {
              "type": "string",
              "description": "Return events with RSVP deadline on or before date"
            },
            "supplier_rsvp_deadline_empty": {
              "type": "boolean",
              "description": "Return events with RSVP deadline not set"
            },
            "supplier_rsvp_deadline_not_empty": {
              "type": "boolean",
              "description": "Return events with RSVP deadline set"
            },
            "supplier_question_deadline_from": {
              "type": "string",
              "description": "Return events with questions deadline on or after date"
            },
            "supplier_question_deadline_to": {
              "type": "string",
              "description": "Return events with questions deadline on or before date"
            },
            "supplier_question_deadline_empty": {
              "type": "boolean",
              "description": "Return events with questions deadline not set"
            },
            "supplier_question_deadline_not_empty": {
              "type": "boolean",
              "description": "Return events with questions deadline set"
            },
            "bid_submission_deadline_from": {
              "type": "string",
              "description": "Return events with bid deadline on or after date"
            },
            "bid_submission_deadline_to": {
              "type": "string",
              "description": "Return events with bid deadline on or before date"
            },
            "bid_submission_deadline_empty": {
              "type": "boolean",
              "description": "Return events with bid deadline not set"
            },
            "bid_submission_deadline_not_empty": {
              "type": "boolean",
              "description": "Return events with bid deadline set"
            },
            "created_at_from": {
              "type": "string",
              "description": "Return events created on or after timestamp"
            },
            "created_at_to": {
              "type": "string",
              "description": "Return events created on or before timestamp"
            },
            "published_at_from": {
              "type": "string",
              "description": "Return events published on or after timestamp"
            },
            "published_at_to": {
              "type": "string",
              "description": "Return events published on or before timestamp"
            },
            "published_at_empty": {
              "type": "boolean",
              "description": "Return events without published timestamp"
            },
            "published_at_not_empty": {
              "type": "boolean",
              "description": "Return events with published timestamp"
            },
            "closed_at_from": {
              "type": "string",
              "description": "Return events closed on or after timestamp"
            },
            "closed_at_to": {
              "type": "string",
              "description": "Return events closed on or before timestamp"
            },
            "closed_at_empty": {
              "type": "boolean",
              "description": "Return events without closed timestamp"
            },
            "closed_at_not_empty": {
              "type": "boolean",
              "description": "Return events with closed timestamp"
            },
            "spend_amount_from": {
              "type": "number",
              "description": "Return events with spend amount >= amount"
            },
            "spend_amount_to": {
              "type": "number",
              "description": "Return events with spend amount <= amount"
            },
            "spend_amount_empty": {
              "type": "boolean",
              "description": "Return events with spend amount not set"
            },
            "spend_amount_not_empty": {
              "type": "boolean",
              "description": "Return events with spend amount set"
            },
            "external_id_empty": {
              "type": "boolean",
              "description": "Return events with blank external_id"
            },
            "external_id_not_empty": {
              "type": "boolean",
              "description": "Return events with non-blank external_id"
            },
            "external_id_equals": {
              "type": "string",
              "description": "Find events by specific external ID"
            },
            "external_id_not_equals": {
              "type": "string",
              "description": "Find events excluding specified external ID"
            }
          },
          "required": [
            "bid_submission_deadline_empty",
            "bid_submission_deadline_from",
            "bid_submission_deadline_not_empty",
            "bid_submission_deadline_to",
            "closed_at_empty",
            "closed_at_from",
            "closed_at_not_empty",
            "closed_at_to",
            "created_at_from",
            "created_at_to",
            "event_type_equals",
            "external_id_empty",
            "external_id_equals",
            "external_id_not_empty",
            "external_id_not_equals",
            "published_at_empty",
            "published_at_from",
            "published_at_not_empty",
            "published_at_to",
            "request_type_equals",
            "spend_amount_empty",
            "spend_amount_from",
            "spend_amount_not_empty",
            "spend_amount_to",
            "spend_category_id_equals",
            "state_equals",
            "supplier_question_deadline_empty",
            "supplier_question_deadline_from",
            "supplier_question_deadline_not_empty",
            "supplier_question_deadline_to",
            "supplier_rsvp_deadline_empty",
            "supplier_rsvp_deadline_from",
            "supplier_rsvp_deadline_not_empty",
            "supplier_rsvp_deadline_to",
            "title_contains",
            "title_not_contains",
            "updated_at_from",
            "updated_at_to"
          ]
        },
        "page": {
          "type": "object",
          "description": "Dictionary containing pagination parameters:",
          "properties": {
            "size": {
              "type": "integer",
              "description": "Number of results per page (default: 10, max: 100)"
            }
          },
          "required": [
            "size"
          ]
        }
      }
    }
  },
  {
    "name": "list_field_groups",
    "description": "Returns a list of field groups.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_field_options_by_field_id",
    "description": "Returns a list of field options for the specified field.",
    "parameters": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string",
          "description": "The unique identifier of the field for which\nto retrieve options."
        }
      },
      "required": [
        "field_id"
      ]
    }
  },
  {
    "name": "list_payment_currencies",
    "description": "Retrieves a list of all available payment currencies in the system.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_payment_terms",
    "description": "Retrieves a list of all available payment terms in the system.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_payment_types",
    "description": "Retrieves a list of all available payment types in the system.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_performance_review_answer_report_entries",
    "description": "Retrieves a list of performance review answer entries.\n\nThis endpoint returns detailed entries from performance review responses, useful for evaluation analysis, tracking progress, and generating summaries. Pagination is supported via `next` and `prev` links.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_performance_review_report_entries",
    "description": "Retrieves a list of performance review report entries.\n\nReturns detailed performance review report data in a paginated format. Each entry contains attributes related to a performance review. Use pagination links to iterate through results.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_project_milestone_report_entries",
    "description": "Retrieves a list of project milestone report entries.\n\nEach milestone entry provides details related to project milestones.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_project_types",
    "description": "Retrieves a list of all available project types in the system.\n\nEach project type includes a name and a short code. This information is useful for categorizing and identifying different types of projects in workflows and project planning.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_projects",
    "description": "Retrieves a list of projects based on optional filtering criteria and pagination settings.",
    "parameters": {
      "type": "object",
      "properties": {
        "filter": {
          "type": "object",
          "description": "A dictionary containing filter criteria for projects. Supported filters include:",
          "properties": {
            "updated_at_from": {
              "type": "object",
              "description": "Return projects updated on or after the specified timestamp"
            },
            "updated_at_to": {
              "type": "object",
              "description": "Return projects updated on or before the specified timestamp"
            },
            "number_from": {
              "type": "integer",
              "description": "Find projects with number equal or greater than the specified one"
            },
            "number_to": {
              "type": "integer",
              "description": "Find projects with number equal or smaller than the specified one"
            },
            "title_contains": {
              "type": "string",
              "description": "Return projects with title containing the specified string"
            },
            "title_not_contains": {
              "type": "string",
              "description": "Return projects with title not containing the specified string"
            },
            "description_contains": {
              "type": "string",
              "description": "Return projects with description containing the specified string"
            },
            "description_not_contains": {
              "type": "string",
              "description": "Return projects with description not containing the specified string"
            },
            "external_id_empty": {
              "type": "boolean",
              "description": "Return projects with external_id blank"
            },
            "external_id_not_empty": {
              "type": "boolean",
              "description": "Return projects with non-blank external_id"
            },
            "external_id_equals": {
              "type": "string",
              "description": "Find projects by a specific external ID"
            },
            "external_id_not_equals": {
              "type": "string",
              "description": "Find projects excluding the one with the specified external ID"
            },
            "actual_start_date_from": {
              "type": "object",
              "description": "Return projects started on or after the specified date"
            },
            "actual_start_date_to": {
              "type": "object",
              "description": "Return projects started on or before the specified date"
            },
            "actual_end_date_from": {
              "type": "object",
              "description": "Return projects ended on or after the specified date"
            },
            "actual_end_date_to": {
              "type": "object",
              "description": "Return projects ended on or before the specified date"
            },
            "target_start_date_from": {
              "type": "object",
              "description": "Return projects targeted to start on or after the specified date"
            },
            "target_start_date_to": {
              "type": "object",
              "description": "Return projects targeted to start on or before the specified date"
            },
            "target_end_date_from": {
              "type": "object",
              "description": "Return projects targeted to end on or after the specified date"
            },
            "target_end_date_to": {
              "type": "object",
              "description": "Return projects targeted to end on or before the specified date"
            },
            "actual_spend_amount_from": {
              "type": "number",
              "description": "Return projects with actual spend amount equal or greater than the specified amount"
            },
            "actual_spend_amount_to": {
              "type": "number",
              "description": "Return projects with actual spend amount equal or smaller than the specified amount"
            },
            "approved_spend_amount_from": {
              "type": "number",
              "description": "Return projects with approved spend amount equal or greater than the specified amount"
            },
            "approved_spend_amount_to": {
              "type": "number",
              "description": "Return projects with approved spend amount equal or smaller than the specified amount"
            },
            "estimated_savings_amount_from": {
              "type": "number",
              "description": "Return projects with estimated savings amount equal or greater than the specified amount"
            },
            "estimated_savings_amount_to": {
              "type": "number",
              "description": "Return projects with estimated savings amount equal or smaller than the specified amount"
            },
            "estimated_spend_amount_from": {
              "type": "number",
              "description": "Return projects with estimated spend amount equal or greater than the specified amount"
            },
            "estimated_spend_amount_to": {
              "type": "number",
              "description": "Return projects with estimated spend amount equal or smaller than the specified amount"
            },
            "canceled_note_contains": {
              "type": "string",
              "description": "Return projects with cancelation note containing the specified string"
            },
            "canceled_note_not_contains": {
              "type": "string",
              "description": "Return projects with cancelation note not containing the specified string"
            },
            "canceled_note_empty": {
              "type": "string",
              "description": "Return projects with an empty cancelation note"
            },
            "canceled_note_not_empty": {
              "type": "string",
              "description": "Return projects with a non-empty cancelation note"
            },
            "canceled_reason_contains": {
              "type": "string",
              "description": "Return projects with cancelation reason containing the specified string"
            },
            "canceled_reason_not_contains": {
              "type": "string",
              "description": "Return projects with cancelation reason not containing the specified string"
            },
            "canceled_reason_empty": {
              "type": "string",
              "description": "Return projects with an empty cancelation reason"
            },
            "canceled_reason_not_empty": {
              "type": "string",
              "description": "Return projects with a non-empty cancelation reason"
            },
            "on_hold_note_contains": {
              "type": "string",
              "description": "Return projects with on-hold note containing the specified string"
            },
            "on_hold_note_not_contains": {
              "type": "string",
              "description": "Return projects with on-hold note not containing the specified string"
            },
            "on_hold_note_empty": {
              "type": "string",
              "description": "Return projects with an empty on-hold note"
            },
            "on_hold_note_not_empty": {
              "type": "string",
              "description": "Return projects with a non-empty on-hold note"
            },
            "on_hold_reason_contains": {
              "type": "string",
              "description": "Return projects with on-hold reason containing the specified string"
            },
            "on_hold_reason_not_contains": {
              "type": "string",
              "description": "Return projects with on-hold reason not containing the specified string"
            },
            "on_hold_reason_empty": {
              "type": "string",
              "description": "Return projects with an empty on-hold reason"
            },
            "on_hold_reason_not_empty": {
              "type": "string",
              "description": "Return projects with a non-empty on-hold reason"
            },
            "needs_attention_equals": {
              "type": "boolean",
              "description": "Return projects with the specified \"needs attention\" status"
            },
            "needs_attention_not_equals": {
              "type": "boolean",
              "description": "Return projects with the \"needs attention\" status not equal to the specified one"
            },
            "state_equals": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Find projects with specified statuses (draft, requested, planned, active, completed, canceled, on_hold)"
            },
            "marked_as_needs_attention_at_from": {
              "type": "object",
              "description": "Find projects marked as \"needs attention\" after or on the specified date"
            },
            "marked_as_needs_attention_at_to": {
              "type": "object",
              "description": "Find projects marked as \"needs attention\" before or on the specified date"
            },
            "needs_attention_note_contains": {
              "type": "string",
              "description": "Return projects with \"needs attention\" note containing the specified string"
            },
            "needs_attention_note_not_contains": {
              "type": "string",
              "description": "Return projects with \"needs attention\" note not containing the specified string"
            },
            "needs_attention_note_empty": {
              "type": "string",
              "description": "Return projects with an empty \"needs attention\" note"
            },
            "needs_attention_note_not_empty": {
              "type": "string",
              "description": "Return projects with a non-empty \"needs attention\" note"
            },
            "needs_attention_reason_contains": {
              "type": "string",
              "description": "Return projects with \"needs attention\" reason containing the specified string"
            },
            "needs_attention_reason_not_contains": {
              "type": "string",
              "description": "Return projects with \"needs attention\" reason not containing the specified string"
            },
            "needs_attention_reason_empty": {
              "type": "string",
              "description": "Return projects with an empty \"needs attention\" reason"
            },
            "needs_attention_reason_not_empty": {
              "type": "string",
              "description": "Return projects with a non-empty \"needs attention\" reason"
            }
          },
          "required": [
            "actual_end_date_from",
            "actual_end_date_to",
            "actual_spend_amount_from",
            "actual_spend_amount_to",
            "actual_start_date_from",
            "actual_start_date_to",
            "approved_spend_amount_from",
            "approved_spend_amount_to",
            "canceled_note_contains",
            "canceled_note_empty",
            "canceled_note_not_contains",
            "canceled_note_not_empty",
            "canceled_reason_contains",
            "canceled_reason_empty",
            "canceled_reason_not_contains",
            "canceled_reason_not_empty",
            "description_contains",
            "description_not_contains",
            "estimated_savings_amount_from",
            "estimated_savings_amount_to",
            "estimated_spend_amount_from",
            "estimated_spend_amount_to",
            "external_id_empty",
            "external_id_equals",
            "external_id_not_empty",
            "external_id_not_equals",
            "marked_as_needs_attention_at_from",
            "marked_as_needs_attention_at_to",
            "needs_attention_equals",
            "needs_attention_not_equals",
            "needs_attention_note_contains",
            "needs_attention_note_empty",
            "needs_attention_note_not_contains",
            "needs_attention_note_not_empty",
            "needs_attention_reason_contains",
            "needs_attention_reason_empty",
            "needs_attention_reason_not_contains",
            "needs_attention_reason_not_empty",
            "number_from",
            "number_to",
            "on_hold_note_contains",
            "on_hold_note_empty",
            "on_hold_note_not_contains",
            "on_hold_note_not_empty",
            "on_hold_reason_contains",
            "on_hold_reason_empty",
            "on_hold_reason_not_contains",
            "on_hold_reason_not_empty",
            "state_equals",
            "target_end_date_from",
            "target_end_date_to",
            "target_start_date_from",
            "target_start_date_to",
            "title_contains",
            "title_not_contains",
            "updated_at_from",
            "updated_at_to"
          ]
        },
        "page": {
          "type": "object",
          "description": "A dictionary containing pagination settings with 'size' parameter\nto limit the number of results per page (default: 10, max: 100).\nIf None, no pagination is applied."
        }
      }
    }
  },
  {
    "name": "list_savings_report_entries",
    "description": "Retrieves a list of savings report entries.\n\nReturns all savings-related entries available to the authenticated user.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_scim_resource_types",
    "description": "Lists SCIM resource types available on the service provider.\n\nThis endpoint allows clients to discover all supported SCIM resource types and their associated metadata, including endpoint paths and schemas. This is based on Section 4 of RFC 7644.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_scim_schemas",
    "description": "Retrieves the list of supported SCIM schemas and their attribute definitions.\n\nThis endpoint provides metadata about each schema in use, including its attributes and constraints. Refer to Section 3.4 of RFC 7644 for schema discovery guidance.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_scim_users",
    "description": "Retrieves a list of SCIM users from the Workday Strategic Sourcing system.\n\nThis operation is SCIM-compliant and supports filtering, pagination, sorting, and \nattribute selection. It returns a SCIM ListResponse format with users and metadata.",
    "parameters": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "string",
          "description": "Comma-separated list of attributes to return in the response.\nValid values:\n- \"userName\": User's unique identifier (email address)\n- \"name\": Complete name object with givenName and familyName\n- \"name.familyName\": User's last name only\n- \"name.givenName\": User's first name only\n- \"roles\": Complete roles array with all role properties\n- \"roles.value\": Only the role value field from roles\n- \"roles.display\": Only the role display name from roles\n- \"roles.primary\": Only the role primary flag from roles\n- \"roles.type\": Only the role type field from roles\n- \"externalId\": External system identifier for the user\n- \"active\": Boolean indicating if user account is active\n- \"meta\": Complete meta object with all metadata\n- \"meta.resourceType\": Resource type from meta object\n- \"meta.created\": ISO 8601 timestamp of creation\n- \"meta.lastModified\": ISO 8601 timestamp of last modification\n- \"meta.location\": Full URL to access the specific user resource\n- \"id\": SCIM resource identifier (UUID)\n- \"schemas\": SCIM schemas array"
        },
        "filter": {
          "type": "string",
          "description": "SCIM-compliant filter expression for searching users.\nSupported filter attributes:\n- userName, name, name.familyName, name.givenName, \n  roles, roles.value, roles.display, roles.primary, roles.type,\n  externalId, active, meta, meta.resourceType, meta.created, meta.lastModified, meta.location, id, schemas\n  \nSupported operators (case-insensitive):\n- eq (equal): Exact match comparison\n- ne (not equal): Non-matching comparison  \n- co (contains): Substring match\n- sw (starts with): Prefix match\n- ew (ends with): Suffix match\n- pr (present): Attribute has non-empty value\n- gt (greater than): Lexicographical/chronological/numeric comparison\n- ge (greater than or equal): Inclusive greater comparison\n- lt (less than): Lexicographical/chronological/numeric comparison\n- le (less than or equal): Inclusive lesser comparison\n\nLogical operators:\n- and: Both expressions must be true\n- or: Either expression must be true\n- not: Expression must be false\n\nGrouping with parentheses () is supported.\nExamples:\n- 'userName eq \"john.doe@example.com\"'\n- 'active eq true and name.familyName co \"Smith\"'\n- 'meta.created gt \"2024-01-01T00:00:00Z\"'\n- '(userName sw \"admin\" or roles.value eq \"admin\") and active eq true'\n- 'not active eq false' (users where active is not false, i.e., active is true)\n- 'not (userName sw \"test\")' (users whose userName doesn't start with \"test\")"
        },
        "startIndex": {
          "type": "integer",
          "description": "1-based index of the first result to return. \nMust be >= 1. Default: 1\n        "
        },
        "count": {
          "type": "integer",
          "description": "Number of results to return per page. Must be >= 0. Default: 100"
        },
        "sortBy": {
          "type": "string",
          "description": "Attribute to sort results by.\nValid values:\n- \"id\": Sort by SCIM resource identifier\n- \"externalId\": Sort by external system identifier"
        },
        "sortOrder": {
          "type": "string",
          "description": "Sort direction.\nValid values:\n- \"ascending\": Sort in ascending order (default)\n- \"descending\": Sort in descending order"
        }
      }
    }
  },
  {
    "name": "list_spend_categories",
    "description": "Retrieves a list of spend categories.\n\nAllows listing of all available spend categories along with optional usage types. Categories can be used to group procurement, expenses, ad-hoc payments, and supplier invoices.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_supplier_companies",
    "description": "Retrieves a list of supplier companies matching the specified filters and options.\n\nSupports filtering, pagination, and compound document formatting via the `include` parameter to reduce multiple requests.",
    "parameters": {
      "type": "object",
      "properties": {
        "filter": {
          "type": "object",
          "properties": {},
          "description": "Filter supplier companies by criteria. One filter per attribute."
        },
        "_include": {
          "type": "string",
          "description": "Comma-separated list of related resources to include.\n- Enum: \"attachments\", \"supplier_category\", \"supplier_groups\", \"default_payment_term\",\n\"payment_types\", \"default_payment_type\", \"payment_currencies\",\n\"default_payment_currency\", \"supplier_classification_values\""
        },
        "page": {
          "type": "object",
          "properties": {},
          "description": "Pagination config."
        }
      }
    }
  },
  {
    "name": "list_supplier_company_contacts_by_company_external_id",
    "description": "Retrieves a list of contacts for a specific supplier company.\n\nThis function returns supplier contacts associated with a given supplier company ID.\nSupports detailed filtering, relationship includes, and pagination options.",
    "parameters": {
      "type": "object",
      "properties": {
        "company_id": {
          "type": "integer",
          "description": "Required. Unique identifier of the supplier company.\nExample: 1"
        },
        "_include": {
          "type": "string",
          "description": "Comma-separated list of related resources to include in the response.\nAllowed values:\n- \"supplier_company\"\n- \"contact_types\"\n- \"phones\""
        },
        "filter": {
          "type": "object",
          "properties": {
            "updated_at_from": {
              "type": "string",
              "description": "Return contacts updated on or after this timestamp."
            },
            "updated_at_to": {
              "type": "string",
              "description": "Return contacts updated on or before this timestamp."
            }
          },
          "description": "Dictionary of filter parameters to narrow down contact results.\nSupported filters include:",
          "required": [
            "updated_at_from",
            "updated_at_to"
          ]
        }
      },
      "required": [
        "company_id"
      ]
    }
  },
  {
    "name": "list_supplier_company_segmentations",
    "description": "Returns a list of supplier company segmentations.\n\nThis function retrieves all supplier company segmentation definitions,\nincluding label, order, and slug metadata used for categorization or\nfiltering of supplier companies.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_supplier_report_entries",
    "description": "This function retrieves all supplier report entries.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_supplier_review_report_entries",
    "description": "Returns a list of supplier review report entries.\n\nThis function retrieves all entries from the supplier review report. It supports pagination\nand includes metadata to navigate through result pages.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_user_owned_event_report_entries",
    "description": "Retrieves a list of event report entries owned by the user.\n\n**Deprecated**: This endpoint is only supported in API version 2018-04-01 and has been deprecated as of 2019-01-01. It returns report entries specific to the authenticated user.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_user_owned_project_report_entries",
    "description": "Retrieves a list of project report entries owned by the user.\n\nDeprecated: This endpoint is only available for API version `2018-04-01`. It has been removed in versions released after `2019-01-01`.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "partially_update_scim_user_by_id",
    "description": "Updates one or more attributes of a User resource using a sequence of additions, removals, and replacements operations.\n\nIt supports add, remove, and replace operations for partial user updates.\n\nBusiness Rules:\n    - If the user tries to deactivate themselves, they will get a 403 Access forbidden response.\n    - Operations on the userName field will only be processed if both original and target email \n      addresses match the domains list set for the Company's SSO connections.\n    - If not, the response returned will be a 403 Access forbidden.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique SCIM identifier of the user to patch."
        },
        "body": {
          "type": "object",
          "properties": {
            "schemas": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Array of strings - SCIM schemas (optional)"
            },
            "Operations": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "op": {
                    "type": "string",
                    "description": "The kind of operation to perform (required)\n        - Enum: \"add\", \"remove\", \"replace\""
                  },
                  "path": {
                    "type": "string",
                    "description": "Required when op is remove, optional otherwise"
                  },
                  "value": {
                    "type": "object",
                    "description": "Can be any value - string, number, boolean, array or object (optional)"
                  }
                },
                "required": [
                  "op",
                  "path",
                  "value"
                ]
              },
              "description": "Array of objects (PatchOperation) - required\n    Each operation in the array contains:"
            }
          },
          "description": "Payload describing the patch operations to apply upon the resource.\nContains:",
          "required": [
            "Operations"
          ]
        },
        "attributes": {
          "type": "string",
          "description": "Comma-separated list of attribute names to return in the response.\nSame attribute options as the get() function."
        }
      },
      "required": [
        "body",
        "id"
      ]
    }
  },
  {
    "name": "remove_supplier_companies_from_event_by_external_id",
    "description": "Removes supplier companies from a specific event using external identifiers. Only events of type RFP are supported.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_external_id": {
          "type": "string",
          "description": "The unique external identifier of the event from\nwhich suppliers will be removed."
        },
        "data": {
          "type": "object",
          "description": "A dictionary containing the supplier information, including:",
          "properties": {
            "supplier_external_ids": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of supplier external IDs to be\n    removed from the event"
            },
            "type": {
              "type": "string",
              "description": "Object type, should always be \"supplier_companies\""
            }
          },
          "required": [
            "supplier_external_ids",
            "type"
          ]
        }
      },
      "required": [
        "data",
        "event_external_id"
      ]
    }
  },
  {
    "name": "remove_supplier_companies_from_event_by_internal_id",
    "description": "Remove suppliers from an event. Only events of type RFP are supported.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_id": {
          "type": "integer",
          "description": "The unique identifier of the event from which suppliers\nwill be removed."
        },
        "data": {
          "type": "object",
          "description": "A dictionary containing the supplier information, including:",
          "properties": {
            "supplier_ids": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of supplier IDs to be removed from the event"
            },
            "type": {
              "type": "string",
              "description": "Object type, should always be \"supplier_companies\""
            }
          },
          "required": [
            "type"
          ]
        }
      },
      "required": [
        "data",
        "event_id"
      ]
    }
  },
  {
    "name": "remove_supplier_companies_from_project",
    "description": "Removes one or more supplier companies from a project.",
    "parameters": {
      "type": "object",
      "properties": {
        "project_id": {
          "type": "integer",
          "description": "The unique identifier of the project."
        },
        "supplier_ids": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "A list of supplier company IDs to remove from the project."
        }
      },
      "required": [
        "project_id",
        "supplier_ids"
      ]
    }
  },
  {
    "name": "remove_supplier_companies_from_project_by_external_id",
    "description": "Removes one or more supplier companies from a project using external identifiers.",
    "parameters": {
      "type": "object",
      "properties": {
        "project_external_id": {
          "type": "string",
          "description": "The external identifier of the project."
        },
        "supplier_external_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of supplier company external IDs to remove from the project.\nFor optimal performance, it's recommended to remove 10 or fewer\nsuppliers in a single request."
        }
      },
      "required": [
        "project_external_id",
        "supplier_external_ids"
      ]
    }
  },
  {
    "name": "remove_supplier_contacts_from_event_by_external_ids",
    "description": "Remove suppliers from an event using supplier contacts. Only events of type RFP are supported. You must supply the unique event external identifier (the one you used when created the event). You must supply the external identifiers of the supplier contacts too. The operation will be rolled back upon any failure, and invitations won't be removed. For best performance, we recommend removing 10 or less supplier contacts in a single request.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_external_id": {
          "type": "string",
          "description": "The unique external identifier of the event from which supplier contacts will be removed."
        },
        "data": {
          "type": "object",
          "description": "A dictionary containing the supplier contact information, including:",
          "properties": {
            "supplier_contact_external_ids": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of supplier contact external IDs to be removed from the event"
            },
            "type": {
              "type": "string",
              "description": "Object type, should always be \"supplier_contacts\""
            }
          },
          "required": [
            "type"
          ]
        }
      },
      "required": [
        "data",
        "event_external_id"
      ]
    }
  },
  {
    "name": "remove_supplier_contacts_from_event_by_internal_id",
    "description": "Remove suppliers from an event using supplier contacts. Only events of type RFP are supported.",
    "parameters": {
      "type": "object",
      "properties": {
        "event_id": {
          "type": "integer",
          "description": "The unique identifier of the event from which supplier\ncontacts will be removed."
        },
        "data": {
          "type": "object",
          "description": "A dictionary containing the supplier contact information,\nincluding:",
          "properties": {
            "supplier_contact_ids": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A list of supplier contact IDs to be\n    removed from the event"
            },
            "type": {
              "type": "string",
              "description": "Object type, should always be \"supplier_contacts\""
            }
          },
          "required": [
            "type"
          ]
        }
      },
      "required": [
        "data",
        "event_id"
      ]
    }
  },
  {
    "name": "remove_supplier_contacts_from_project_by_external_ids",
    "description": "Removes suppliers from a project using supplier contact external identifiers.\n\nThis endpoint disassociates supplier contacts from a specific project using their external IDs. This is commonly used to manage supplier participation in projects dynamically.",
    "parameters": {
      "type": "object",
      "properties": {
        "project_external_id": {
          "type": "string",
          "description": "External ID of the project from which suppliers are to be removed."
        },
        "supplier_contact_external_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "External IDs of the supplier contacts to remove from the project."
        }
      },
      "required": [
        "project_external_id",
        "supplier_contact_external_ids"
      ]
    }
  },
  {
    "name": "remove_supplier_contacts_from_project_by_internal_id",
    "description": "Removes one or more supplier contacts from a project.",
    "parameters": {
      "type": "object",
      "properties": {
        "project_id": {
          "type": "integer",
          "description": "The unique identifier of the project."
        },
        "supplier_contact_ids": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "A list of supplier contact IDs to remove from the project."
        }
      },
      "required": [
        "project_id",
        "supplier_contact_ids"
      ]
    }
  },
  {
    "name": "replace_scim_user_by_id",
    "description": "Replaces all updatable attributes of a User resource as per RFC 7644 Section 3.5.1.\n\nThis operation replaces only the attributes provided in the request payload, leaving any others intact.\nUsers cannot deactivate themselves or modify their email domain unless it's compliant with configured SSO rules.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique SCIM identifier of the user to update."
        },
        "body": {
          "type": "object",
          "properties": {
            "externalId": {
              "type": "string",
              "description": "Client-defined external identifier."
            },
            "userName": {
              "type": "string",
              "description": "Required. User's email address. Must match configured SSO domain for updates."
            },
            "name": {
              "type": "object",
              "properties": {
                "givenName": {
                  "type": "string",
                  "description": "Required. User's first name."
                },
                "familyName": {
                  "type": "string",
                  "description": "Required. User's last name."
                }
              },
              "description": "Required. Name compound object.",
              "required": [
                "familyName",
                "givenName"
              ]
            },
            "active": {
              "type": "boolean",
              "description": "Whether the user account is active."
            }
          },
          "description": "A dictionary containing the user attributes to update.",
          "required": [
            "name",
            "userName"
          ]
        },
        "attributes": {
          "type": "string",
          "description": "Comma-separated list of attribute names to return in the response."
        }
      },
      "required": [
        "body",
        "id"
      ]
    }
  },
  {
    "name": "update_attachment_by_external_id",
    "description": "Update an existing attachment by its external ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The external ID of the attachment to update."
        },
        "data": {
          "type": "object",
          "properties": {},
          "description": "Dictionary containing the fields to update with their new values."
        }
      },
      "required": [
        "data",
        "external_id"
      ]
    }
  },
  {
    "name": "update_attachment_by_id",
    "description": "Update an existing attachment by its internal ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The internal ID of the attachment to update."
        },
        "data": {
          "type": "object",
          "properties": {},
          "description": "Dictionary containing the fields to update with their new values."
        }
      },
      "required": [
        "data",
        "id"
      ]
    }
  },
  {
    "name": "update_contact_type_by_external_id",
    "description": "Updates the details of an existing contact type using its external ID.\n\nThis function allows for the modification of an existing contact type's properties\nby searching for it using its external identifier. It performs validation checks\nto ensure the update is valid and the contact type exists before applying the\nchanges. The function supports partial updates of contact type properties.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The unique external identifier of the contact type to update."
        },
        "body": {
          "type": "object",
          "description": "A dictionary containing the updated properties for\nthe contact type. The dictionary must include:",
          "properties": {
            "type": {
              "type": "string",
              "description": "Object type, should always be \"contact_types\""
            },
            "id": {
              "type": "integer",
              "description": "Contact type identifier"
            },
            "external_id": {
              "type": "string",
              "description": "Contact type external identifier (max 255 characters)"
            },
            "name": {
              "type": "string",
              "description": "Contact type name (max 255 characters)"
            }
          },
          "required": [
            "external_id",
            "id",
            "name",
            "type"
          ]
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "update_contact_type_by_id",
    "description": "Updates the details of an existing contact type.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique internal identifier of the contact type to update."
        },
        "body": {
          "type": "object",
          "description": "A dictionary containing the updated properties for\nthe contact type. The dictionary must include:",
          "properties": {
            "type": {
              "type": "string",
              "description": "Object type, should always be \"contact_types\""
            },
            "id": {
              "type": "integer",
              "description": "Contact type identifier"
            },
            "external_id": {
              "type": "string",
              "description": "Contact type external identifier (max 255 characters)"
            },
            "name": {
              "type": "string",
              "description": "Contact type name (max 255 characters)"
            }
          },
          "required": [
            "external_id",
            "id",
            "name",
            "type"
          ]
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "update_contract_by_external_id",
    "description": "Update an existing contract by its external ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The external identifier of the contract to update."
        },
        "_include": {
          "type": "string",
          "description": "Comma-separated list of relationships to include\nin the response.\nSupported values: \"contract_type\", \"spend_category\", \"supplier_company\", \"docusign_envelopes\", \"adobe_sign_agreements\""
        },
        "body": {
          "type": "object",
          "description": "Dictionary containing the fields to update. Must include:",
          "properties": {
            "type": {
              "type": "string",
              "description": "Object type"
            },
            "id": {
              "type": "integer",
              "description": "Contract identifier string"
            },
            "supplier_id": {
              "type": "string",
              "description": "Supplier identifier"
            },
            "start_date": {
              "type": "string",
              "description": "Contract start date"
            },
            "end_date": {
              "type": "string",
              "description": "Contract end date"
            },
            "external_id": {
              "type": "string",
              "description": "External contract identifier"
            },
            "attributes": {
              "type": "object",
              "description": "Contract attributes containing:",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Contract title (max 255 characters)"
                },
                "description": {
                  "type": "string",
                  "description": "Contract description"
                },
                "state": {
                  "type": "string",
                  "description": "Current contract state (\"draft\", \"requested\", \"in_progress\", \"out_for_approval\", \"approved\", \"active\", \"expired\", \"terminated\")"
                },
                "state_label": {
                  "type": "string",
                  "description": "Customer-specific contract state label"
                },
                "number": {
                  "type": "integer",
                  "description": "Contract number, generated sequentially"
                },
                "external_id": {
                  "type": "string",
                  "description": "Customer provided unique contract identifier"
                },
                "actual_start_date": {
                  "type": "string",
                  "description": "Contract start date"
                },
                "actual_end_date": {
                  "type": "string",
                  "description": "Contract end date"
                },
                "actual_spend_amount": {
                  "type": "number",
                  "description": "Actual spend amount"
                },
                "auto_renewal": {
                  "type": "string",
                  "description": "Auto-renewal mode (\"yes\", \"no\", \"evergreen\")"
                },
                "marked_as_needs_attention_at": {
                  "type": "string",
                  "description": "Date and time when contract was flagged as needs attention"
                },
                "needs_attention": {
                  "type": "boolean",
                  "description": "Whether contract needs attention"
                },
                "needs_attention_note": {
                  "type": "string",
                  "description": "Notes on why contract needs attention"
                },
                "needs_attention_reason": {
                  "type": "string",
                  "description": "Reason why contract needs attention"
                },
                "renew_number_of_times": {
                  "type": "integer",
                  "description": "Number of times contract should be renewed"
                },
                "renewal_term_unit": {
                  "type": "string",
                  "description": "Term unit for renewals (\"days\", \"weeks\", \"months\", \"years\")"
                },
                "renewal_term_value": {
                  "type": "integer",
                  "description": "Number of term units between renewals"
                },
                "renewal_termination_notice_date": {
                  "type": "string",
                  "description": "Date for termination notice"
                },
                "renewal_termination_notice_unit": {
                  "type": "string",
                  "description": "Term unit for termination notice"
                },
                "renewal_termination_notice_value": {
                  "type": "integer",
                  "description": "Term units before end date for notice"
                },
                "renewal_termination_reminder_date": {
                  "type": "string",
                  "description": "Date for termination reminder"
                },
                "renewal_termination_reminder_unit": {
                  "type": "string",
                  "description": "Term unit for termination reminder"
                },
                "renewal_termination_reminder_value": {
                  "type": "integer",
                  "description": "Term units before notice for reminder"
                },
                "terminated_note": {
                  "type": "string",
                  "description": "Termination notes"
                },
                "terminated_reason": {
                  "type": "string",
                  "description": "Termination reason"
                },
                "updated_at": {
                  "type": "string",
                  "description": "Last modification date"
                },
                "custom_fields": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  },
                  "description": "Custom field values"
                },
                "approved_at": {
                  "type": "string",
                  "description": "Date and time of contract approval"
                },
                "approval_rounds": {
                  "type": "integer",
                  "description": "Times contract has been sent for approval"
                },
                "first_sent_for_approval_at": {
                  "type": "string",
                  "description": "First approval request date"
                },
                "sent_for_approval_at": {
                  "type": "string",
                  "description": "Last approval request date"
                },
                "public": {
                  "type": "boolean",
                  "description": "Public visibility of contract"
                }
              },
              "required": [
                "actual_end_date",
                "actual_spend_amount",
                "actual_start_date",
                "approval_rounds",
                "approved_at",
                "auto_renewal",
                "description",
                "external_id",
                "first_sent_for_approval_at",
                "marked_as_needs_attention_at",
                "needs_attention",
                "needs_attention_note",
                "needs_attention_reason",
                "number",
                "public",
                "renew_number_of_times",
                "renewal_term_unit",
                "renewal_term_value",
                "renewal_termination_notice_date",
                "renewal_termination_notice_unit",
                "renewal_termination_notice_value",
                "renewal_termination_reminder_date",
                "renewal_termination_reminder_unit",
                "renewal_termination_reminder_value",
                "sent_for_approval_at",
                "state",
                "state_label",
                "terminated_note",
                "terminated_reason",
                "title",
                "updated_at"
              ]
            },
            "relationships": {
              "type": "object",
              "description": "Contract relationships containing:",
              "properties": {
                "attachments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  },
                  "description": "Contract attachments"
                },
                "supplier_company": {
                  "type": "object",
                  "description": "Associated supplier company"
                },
                "creator": {
                  "type": "object",
                  "description": "Contract creator"
                },
                "owner": {
                  "type": "object",
                  "description": "Contract owner"
                },
                "docusign_envelopes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  },
                  "description": "Docusign envelopes"
                },
                "adobe_sign_agreements": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  },
                  "description": "Adobe Sign agreements"
                },
                "contract_type": {
                  "type": "object",
                  "description": "Contract type"
                },
                "spend_category": {
                  "type": "object",
                  "description": "Spend category"
                }
              },
              "required": [
                "contract_type",
                "creator",
                "owner",
                "spend_category",
                "supplier_company"
              ]
            }
          },
          "required": [
            "attributes",
            "end_date",
            "external_id",
            "id",
            "relationships",
            "start_date",
            "supplier_id",
            "type"
          ]
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "update_contract_by_id",
    "description": "Update an existing contract by its internal ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The internal identifier of the contract to update."
        },
        "_include": {
          "type": "string",
          "description": "Comma-separated list of relationships to include\nin the response.\nSupported values: \"contract_type\", \"spend_category\", \"supplier_company\", \"docusign_envelopes\", \"adobe_sign_agreements\""
        },
        "body": {
          "type": "object",
          "description": "Dictionary containing the fields to update. Includes any of the following keys:",
          "properties": {
            "type": {
              "type": "object",
              "description": "Object type"
            },
            "id": {
              "type": "object",
              "description": "Contract identifier string"
            },
            "supplier_id": {
              "type": "string",
              "description": "Supplier identifier"
            },
            "start_date": {
              "type": "string",
              "description": "Contract start date"
            },
            "end_date": {
              "type": "string",
              "description": "Contract end date"
            },
            "external_id": {
              "type": "string",
              "description": "External contract identifier"
            },
            "attributes": {
              "type": "object",
              "description": "Contract attributes containing:",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Contract title (max 255 characters)"
                },
                "description": {
                  "type": "string",
                  "description": "Contract description"
                },
                "state": {
                  "type": "string",
                  "description": "Current contract state (\"draft\", \"requested\", \"in_progress\", \"out_for_approval\", \"approved\", \"active\", \"expired\", \"terminated\")"
                },
                "state_label": {
                  "type": "string",
                  "description": "Customer-specific contract state label"
                },
                "number": {
                  "type": "integer",
                  "description": "Contract number, generated sequentially"
                },
                "external_id": {
                  "type": "string",
                  "description": "Customer provided unique contract identifier"
                },
                "actual_start_date": {
                  "type": "string",
                  "description": "Contract start date"
                },
                "actual_end_date": {
                  "type": "string",
                  "description": "Contract end date"
                },
                "actual_spend_amount": {
                  "type": "number",
                  "description": "Actual spend amount"
                },
                "auto_renewal": {
                  "type": "string",
                  "description": "Auto-renewal mode (\"yes\", \"no\", \"evergreen\")"
                },
                "marked_as_needs_attention_at": {
                  "type": "string",
                  "description": "Date and time when contract was flagged as needs attention"
                },
                "needs_attention": {
                  "type": "boolean",
                  "description": "Whether contract needs attention"
                },
                "needs_attention_note": {
                  "type": "string",
                  "description": "Notes on why contract needs attention"
                },
                "needs_attention_reason": {
                  "type": "string",
                  "description": "Reason why contract needs attention"
                },
                "renew_number_of_times": {
                  "type": "integer",
                  "description": "Number of times contract should be renewed"
                },
                "renewal_term_unit": {
                  "type": "string",
                  "description": "Term unit for renewals (\"days\", \"weeks\", \"months\", \"years\")"
                },
                "renewal_term_value": {
                  "type": "integer",
                  "description": "Number of term units between renewals"
                },
                "renewal_termination_notice_date": {
                  "type": "string",
                  "description": "Date for termination notice"
                },
                "renewal_termination_notice_unit": {
                  "type": "string",
                  "description": "Term unit for termination notice"
                },
                "renewal_termination_notice_value": {
                  "type": "integer",
                  "description": "Term units before end date for notice"
                },
                "renewal_termination_reminder_date": {
                  "type": "string",
                  "description": "Date for termination reminder"
                },
                "renewal_termination_reminder_unit": {
                  "type": "string",
                  "description": "Term unit for termination reminder"
                },
                "renewal_termination_reminder_value": {
                  "type": "integer",
                  "description": "Term units before notice for reminder"
                },
                "terminated_note": {
                  "type": "string",
                  "description": "Termination notes"
                },
                "terminated_reason": {
                  "type": "string",
                  "description": "Termination reason"
                },
                "updated_at": {
                  "type": "string",
                  "description": "Last modification date"
                },
                "custom_fields": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  },
                  "description": "Custom field values"
                },
                "approved_at": {
                  "type": "string",
                  "description": "Date and time of contract approval"
                },
                "approval_rounds": {
                  "type": "integer",
                  "description": "Times contract has been sent for approval"
                },
                "first_sent_for_approval_at": {
                  "type": "string",
                  "description": "First approval request date"
                },
                "sent_for_approval_at": {
                  "type": "string",
                  "description": "Last approval request date"
                },
                "public": {
                  "type": "boolean",
                  "description": "Public visibility of contract"
                }
              },
              "required": [
                "actual_end_date",
                "actual_spend_amount",
                "actual_start_date",
                "approval_rounds",
                "approved_at",
                "auto_renewal",
                "description",
                "external_id",
                "first_sent_for_approval_at",
                "marked_as_needs_attention_at",
                "needs_attention",
                "needs_attention_note",
                "needs_attention_reason",
                "number",
                "public",
                "renew_number_of_times",
                "renewal_term_unit",
                "renewal_term_value",
                "renewal_termination_notice_date",
                "renewal_termination_notice_unit",
                "renewal_termination_notice_value",
                "renewal_termination_reminder_date",
                "renewal_termination_reminder_unit",
                "renewal_termination_reminder_value",
                "sent_for_approval_at",
                "state",
                "state_label",
                "terminated_note",
                "terminated_reason",
                "title",
                "updated_at"
              ]
            },
            "relationships": {
              "type": "object",
              "description": "Contract relationships containing:",
              "properties": {
                "attachments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  },
                  "description": "Contract attachments"
                },
                "supplier_company": {
                  "type": "object",
                  "description": "Associated supplier company"
                },
                "creator": {
                  "type": "object",
                  "description": "Contract creator"
                },
                "owner": {
                  "type": "object",
                  "description": "Contract owner"
                },
                "docusign_envelopes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  },
                  "description": "Docusign envelopes"
                },
                "adobe_sign_agreements": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  },
                  "description": "Adobe Sign agreements"
                },
                "contract_type": {
                  "type": "object",
                  "description": "Contract type"
                },
                "spend_category": {
                  "type": "object",
                  "description": "Spend category"
                }
              },
              "required": [
                "contract_type",
                "creator",
                "owner",
                "spend_category",
                "supplier_company"
              ]
            }
          },
          "required": [
            "attributes",
            "end_date",
            "external_id",
            "id",
            "relationships",
            "start_date",
            "supplier_id",
            "type"
          ]
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "update_contract_type_by_external_id",
    "description": "Update an existing contract type by its external ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The external identifier of the contract type to update."
        },
        "body": {
          "type": "object",
          "description": "Dictionary containing the fields to update. Must include:",
          "properties": {
            "external_id": {
              "type": "string",
              "description": "Must match the external_id parameter in the URL"
            },
            "type": {
              "type": "string",
              "description": "Object type, should always be \"contract_types\""
            },
            "name": {
              "type": "string",
              "description": "Name of the contract type"
            }
          },
          "required": [
            "external_id",
            "name",
            "type"
          ]
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "update_contract_type_by_id",
    "description": "Update an existing contract type by its internal ID. ",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The internal identifier of the contract type to update."
        },
        "body": {
          "type": "object",
          "description": "Dictionary containing the fields to update. Must include:",
          "properties": {
            "id": {
              "type": "integer",
              "description": "Must match the id parameter in the URL"
            },
            "type": {
              "type": "string",
              "description": "Object type, should always be \"contract_types\""
            },
            "name": {
              "type": "string",
              "description": "Name of the contract type"
            },
            "external_id": {
              "type": "string",
              "description": "External contract type identifier"
            }
          },
          "required": [
            "external_id",
            "id",
            "name",
            "type"
          ]
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "update_event_by_id",
    "description": "Update an existing event.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique identifier of the event to update."
        },
        "data": {
          "type": "object",
          "description": "Dictionary containing the fields to update. Must include:",
          "properties": {
            "id": {
              "type": "integer",
              "description": "Must match the id parameter in the URL"
            },
            "type": {
              "type": "string",
              "description": "Event type enum (\"RFP\", \"AUCTION\", \"AUCTION_WITH_LOTS\", \"AUCTION_LOT\", \"PERFORMANCE_REVIEW_EVENT\", \"PERFORMANCE_REVIEW_SCORE_CARD_ONLY_EVENT\", \"SUPPLIER_REVIEW_EVENT\", \"SUPPLIER_REVIEW_MASTER_EVENT\")"
            },
            "attributes": {
              "type": "object",
              "description": "Event attributes containing:",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "An event title"
                },
                "event_type": {
                  "type": "string",
                  "description": "Event type enum (\"RFP\", \"AUCTION\", \"AUCTION_WITH_LOTS\", \"AUCTION_LOT\", \"PERFORMANCE_REVIEW_EVENT\", \"PERFORMANCE_REVIEW_SCORE_CARD_ONLY_EVENT\", \"SUPPLIER_REVIEW_EVENT\", \"SUPPLIER_REVIEW_MASTER_EVENT\")"
                },
                "spend_amount": {
                  "type": "number",
                  "description": "Actual spend amount used to calculate savings and keep reporting up to date"
                },
                "late_bids": {
                  "type": "boolean",
                  "description": "Whether late bid submissions are allowed"
                },
                "revise_bids": {
                  "type": "boolean",
                  "description": "Whether suppliers are allowed to re-submit bids"
                },
                "instant_notifications": {
                  "type": "boolean",
                  "description": "When true, notification emails are sent immediately; when false, notifications are delivered every 3 hours in a digest form"
                },
                "external_id": {
                  "type": "string",
                  "description": "Event ID in your internal database"
                },
                "restricted": {
                  "type": "boolean",
                  "description": "Whether event is invitation only even when posted on the public site"
                },
                "custom_fields": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  },
                  "description": "Custom field values (note: custom fields of type File can only be accessed through the user interface, they will be exposed as null in the public API)"
                }
              },
              "required": [
                "event_type",
                "external_id",
                "instant_notifications",
                "late_bids",
                "restricted",
                "revise_bids",
                "spend_amount",
                "title"
              ]
            }
          },
          "required": [
            "attributes",
            "id",
            "type"
          ]
        }
      },
      "required": [
        "data",
        "id"
      ]
    }
  },
  {
    "name": "update_event_worksheet_line_item_by_id",
    "description": "Updates the details of an existing line item. You need to supply the unique line item that was returned \n\nupon line item creation. Please note, that request body must include the id attribute with the value of \nyour line item unique identifier (the same one you passed as argument)",
    "parameters": {
      "type": "object",
      "properties": {
        "event_id": {
          "type": "integer",
          "description": "The unique identifier of the event to which the line item belongs."
        },
        "worksheet_id": {
          "type": "integer",
          "description": "The unique identifier of the worksheet to which the line item belongs."
        },
        "id": {
          "type": "integer",
          "description": "The unique identifier of the line item to update."
        },
        "data": {
          "type": "object",
          "description": "A dictionary containing the updated properties for the line item.",
          "properties": {
            "type": {
              "type": "string",
              "description": "Object type, should always be \"line_items\""
            },
            "attributes": {
              "type": "object",
              "description": "LineItem attributes containing:",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "A hashmap where keys are data identifier strings for the columns in the worksheet, and values are cell values, where each value contains:",
                  "properties": {
                    "data_identifier": {
                      "type": "string",
                      "description": "Worksheet column identifier string"
                    },
                    "value": {
                      "type": "object",
                      "description": "Worksheet line item cell value"
                    }
                  },
                  "required": [
                    "data_identifier",
                    "value"
                  ]
                }
              },
              "required": [
                "data"
              ]
            },
            "relationships": {
              "type": "object",
              "description": "Line item relationships containing:",
              "properties": {
                "worksheet": {
                  "type": "object",
                  "description": "Associated worksheet containing:",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Object type, should always be \"worksheets\""
                    },
                    "id": {
                      "type": "integer",
                      "description": "Worksheet identifier string"
                    }
                  },
                  "required": [
                    "id",
                    "type"
                  ]
                }
              },
              "required": [
                "worksheet"
              ]
            }
          },
          "required": [
            "attributes",
            "relationships",
            "type"
          ]
        }
      },
      "required": [
        "data",
        "event_id",
        "id",
        "worksheet_id"
      ]
    }
  },
  {
    "name": "update_field_by_external_id",
    "description": "Updates the details of an existing field by its external ID.\n\nThis function updates the properties of a field identified by its external\nidentifier. The function verifies that the provided body includes the correct\nexternal ID before performing the update.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The external identifier of the field to update."
        },
        "body": {
          "type": "object",
          "description": "A dictionary containing the updated properties\nfor the field, including:",
          "properties": {
            "external_id": {
              "type": "string",
              "description": "Must match the external_id in the URL"
            },
            "name": {
              "type": "string",
              "description": "Updated name of the field"
            },
            "type": {
              "type": "string",
              "description": "Updated data type of the field"
            },
            "required": {
              "type": "boolean",
              "description": "Updated required status"
            },
            "description": {
              "type": "string",
              "description": "Updated description"
            },
            "configurations": {
              "type": "object",
              "description": "Updated field-specific settings"
            }
          },
          "required": [
            "configurations",
            "description",
            "external_id",
            "name",
            "required",
            "type"
          ]
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "update_field_details_by_id",
    "description": "Updates the details of an existing field using its internal identifier.\n\nPlease note, that request body must include an id attribute with the value of your field unique identifier,the same one you passed as argument.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The internal identifier of the field to update."
        },
        "options": {
          "type": "object",
          "description": "A dictionary containing the field properties to update.\nMust include an 'id' field matching the path parameter.\nContains any of the following fields:",
          "properties": {
            "type": {
              "type": "string",
              "description": "Field type"
            },
            "group": {
              "type": "string",
              "description": "Field group identifier string"
            },
            "name": {
              "type": "string",
              "description": "Field name (max 255 characters)"
            },
            "attributes": {
              "type": "object",
              "description": "Field attributes containing:",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Field name (max 255 characters)"
                },
                "target_object": {
                  "type": "string",
                  "description": "Field object type, one of:\n            - \"PROJECT\"\n            - \"RFP\"\n            - \"SUPPLIER_COMPANY\""
                },
                "type_description": {
                  "type": "string",
                  "description": "Internal name and meaning of each field, one of:\n            - \"Checkbox\"\n            - \"File\"\n            - \"Short Text\"\n            - \"Paragraph\"\n            - \"Date\"\n            - \"Integer\"\n            - \"Currency\"\n            - \"Decimal\"\n            - \"Single Select\"\n            - \"Multiple Select\"\n            - \"URL\"\n            - \"Lookup\"\n            - \"Related\""
                },
                "required": {
                  "type": "boolean",
                  "description": "Identifies whether the field is required"
                }
              },
              "required": [
                "name",
                "required",
                "target_object",
                "type_description"
              ]
            },
            "relationships": {
              "type": "object",
              "description": "Field relationship containing:",
              "properties": {
                "group": {
                  "type": "object",
                  "description": "Reference to the field group where the field belongs to\n            Note: Must be null for fields with target_object set to RFP, and required for all other fields"
                }
              },
              "required": [
                "group"
              ]
            }
          },
          "required": [
            "attributes",
            "group",
            "name",
            "relationships",
            "type"
          ]
        }
      },
      "required": [
        "id",
        "options"
      ]
    }
  },
  {
    "name": "update_field_group_by_id",
    "description": "Updates the details of an existing field group.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier of the field group to update."
        },
        "options": {
          "type": "object",
          "description": "A dictionary containing the updated properties for the\nfield group, including any of the following fields:",
          "properties": {
            "type": {
              "type": "string",
              "description": "Object type, should always be \"field_groups\""
            },
            "id": {
              "type": "integer",
              "description": "Field group identifier string. Same as the id parameter."
            },
            "fields": {
              "type": "object",
              "description": "List of fields belonging to this group"
            },
            "name": {
              "type": "string",
              "description": "Field group name (max 255 characters)"
            },
            "description": {
              "type": "string",
              "description": "Field group description (max 255 characters)"
            },
            "attributes": {
              "type": "object",
              "description": "Field group attributes containing:",
              "properties": {
                "target_object": {
                  "type": "string",
                  "description": "Field group object type string, one of:\n        - \"PROJECT\"\n        - \"SUPPLIER_COMPANY\"\n        - \"RFP\""
                },
                "name": {
                  "type": "string",
                  "description": "Field group name (max 255 characters)"
                }
              },
              "required": [
                "name",
                "target_object"
              ]
            }
          },
          "required": [
            "attributes",
            "description",
            "fields",
            "id",
            "name",
            "type"
          ]
        }
      },
      "required": [
        "id",
        "options"
      ]
    }
  },
  {
    "name": "update_field_options_by_id",
    "description": "Update a field options with given parameters.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique identifier of the field option to update."
        },
        "new_options": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {}
          },
          "description": "A list of new options to set for the field option."
        }
      },
      "required": [
        "id",
        "new_options"
      ]
    }
  },
  {
    "name": "update_payment_currency_by_external_id",
    "description": "Updates the details of an existing payment currency using its external identifier.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The external identifier of the currency to update."
        },
        "alpha": {
          "type": "string",
          "description": "The new three-letter currency code (e.g., USD, EUR)."
        },
        "numeric": {
          "type": "string",
          "description": "The new numeric currency code."
        }
      },
      "required": [
        "alpha",
        "external_id",
        "numeric"
      ]
    }
  },
  {
    "name": "update_payment_currency_by_id",
    "description": "Updates the details of an existing payment currency using its internal identifier.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The internal identifier of the currency to update."
        },
        "alpha": {
          "type": "string",
          "description": "The new three-letter currency code (e.g., USD, EUR)."
        },
        "numeric": {
          "type": "string",
          "description": "The new numeric currency code."
        },
        "external_id": {
          "type": "string",
          "description": "The new external identifier for the currency."
        }
      },
      "required": [
        "alpha",
        "id",
        "numeric"
      ]
    }
  },
  {
    "name": "update_payment_term_by_external_id",
    "description": "Updates the details of an existing payment term using its external identifier.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The external identifier of the payment term to update."
        },
        "name": {
          "type": "string",
          "description": "The new name for the payment term (e.g., \"Net 30\", \"Net 60\")."
        }
      },
      "required": [
        "external_id",
        "name"
      ]
    }
  },
  {
    "name": "update_payment_term_by_id",
    "description": "Updates the details of an existing payment term using its internal identifier.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The internal identifier of the payment term to update."
        },
        "name": {
          "type": "string",
          "description": "The name for the payment term."
        },
        "external_id": {
          "type": "string",
          "description": "The external identifier for the payment term."
        }
      },
      "required": [
        "id",
        "name"
      ]
    }
  },
  {
    "name": "update_payment_type_by_external_id",
    "description": "Updates the details of an existing payment type using its external identifier.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The external identifier of the payment type to update."
        },
        "name": {
          "type": "string",
          "description": "The new name for the payment type."
        },
        "payment_method": {
          "type": "string",
          "description": "The new payment method. One of: \"Direct Deposit\", \"Check\", \"EFT\", \"Cash\", \"Credit Card\", \"Wire\", \"Manual\", \"Direct Debit\", \"PayPal\", \"EFT with Reference\""
        }
      },
      "required": [
        "external_id",
        "name"
      ]
    }
  },
  {
    "name": "update_payment_type_by_id",
    "description": "Updates the details of an existing payment type using its internal identifier.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The internal identifier of the payment type to update."
        },
        "name": {
          "type": "string",
          "description": "The new name for the payment type. "
        },
        "payment_method": {
          "type": "string",
          "description": "The new payment method. One of: \"Direct Deposit\", \"Check\", \"EFT\", \"Cash\", \"Credit Card\", \"Wire\", \"Manual\", \"Direct Debit\", \"PayPal\", \"EFT with Reference\""
        },
        "external_id": {
          "type": "string",
          "description": "The new external identifier for the payment type."
        }
      },
      "required": [
        "id",
        "name"
      ]
    }
  },
  {
    "name": "update_project_by_external_id",
    "description": "Updates the details of an existing project using its external identifier.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "The unique external identifier of the project to update."
        },
        "project_data": {
          "type": "object",
          "description": "A dictionary containing the updated project details.\nMust include an 'external_id' field matching the provided ID.",
          "properties": {
            "type_id": {
              "type": "string",
              "description": "Object type"
            },
            "id": {
              "type": "string",
              "description": "Project identifier string"
            },
            "external_id": {
              "type": "string",
              "description": "Project external identifier string. Same as the provided ID."
            },
            "supplier_companies": {
              "type": "object",
              "description": "Array of supplier company objects"
            },
            "supplier_contacts": {
              "type": "object",
              "description": "Array of supplier contact objects"
            },
            "status": {
              "type": "string",
              "description": "Project status"
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Project name"
                },
                "description": {
                  "type": "string",
                  "description": "Project description"
                },
                "state": {
                  "type": "string",
                  "description": "Project state (draft, requested, planned, active, completed, canceled, on_hold)"
                },
                "target_start_date": {
                  "type": "object",
                  "description": "Project target start date"
                },
                "target_end_date": {
                  "type": "object",
                  "description": "Project target end date"
                },
                "actual_spend_amount": {
                  "type": "number",
                  "description": "Project actual spend amount"
                },
                "approved_spend_amount": {
                  "type": "number",
                  "description": "Project approved spend amount"
                },
                "estimated_savings_amount": {
                  "type": "number",
                  "description": "Project estimated savings amount"
                },
                "estimated_spend_amount": {
                  "type": "number",
                  "description": "Project estimated spend amount"
                },
                "canceled_note": {
                  "type": "string",
                  "description": "Project cancelation note"
                },
                "canceled_reason": {
                  "type": "string",
                  "description": "Project cancelation reason"
                },
                "on_hold_note": {
                  "type": "string",
                  "description": "Project on-hold note"
                },
                "on_hold_reason": {
                  "type": "string",
                  "description": "Project on-hold reason"
                },
                "needs_attention": {
                  "type": "boolean",
                  "description": "Project needs attention status"
                },
                "marked_as_needs_attention_at": {
                  "type": "object",
                  "description": "Project marked as needs attention timestamp"
                },
                "needs_attention_note": {
                  "type": "string",
                  "description": "Project needs attention note"
                },
                "needs_attention_reason": {
                  "type": "string",
                  "description": "Project needs attention reason"
                }
              },
              "description": "Project attributes object containing:",
              "required": [
                "actual_spend_amount",
                "approved_spend_amount",
                "description",
                "estimated_savings_amount",
                "estimated_spend_amount",
                "name",
                "needs_attention",
                "state",
                "target_end_date",
                "target_start_date"
              ]
            },
            "relationships": {
              "type": "object",
              "properties": {
                "attachments": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": "Array of attachment objects"
                },
                "creator": {
                  "type": "object",
                  "description": "Project creator stakeholder object"
                },
                "requester": {
                  "type": "object",
                  "description": "Project requester stakeholder object"
                },
                "owner": {
                  "type": "object",
                  "description": "Project owner stakeholder object"
                },
                "project_type": {
                  "type": "object",
                  "description": "Project type object"
                }
              },
              "description": "Project relationships object containing:",
              "required": [
                "attachments",
                "creator",
                "owner",
                "project_type",
                "requester"
              ]
            }
          },
          "required": [
            "attributes",
            "external_id",
            "id",
            "relationships",
            "status",
            "supplier_companies",
            "supplier_contacts",
            "type_id"
          ]
        }
      },
      "required": [
        "external_id",
        "project_data"
      ]
    }
  },
  {
    "name": "update_project_details_by_id",
    "description": "Updates the details of an existing project using its unique internal identifier.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique internal identifier of the project to update."
        },
        "project_data": {
          "type": "object",
          "description": "A dictionary containing the updated project details.\nValidated against ProjectDataInputModel.\nMust include an 'id' field whose string representation matches the provided path ID.",
          "properties": {
            "type_id": {
              "type": "string",
              "description": "Object type"
            },
            "id": {
              "type": "string",
              "description": "Project identifier string."
            },
            "external_id": {
              "type": "string",
              "description": "Project external identifier string"
            },
            "supplier_companies": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              },
              "description": "Array of supplier company objects"
            },
            "supplier_contacts": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {}
              },
              "description": "Array of supplier contact objects"
            },
            "status": {
              "type": "string",
              "description": "Project status"
            },
            "attributes": {
              "type": "object",
              "description": "Project attributes object."
            },
            "relationships": {
              "type": "object",
              "description": "Project relationships object."
            }
          },
          "required": [
            "id"
          ]
        }
      },
      "required": [
        "id",
        "project_data"
      ]
    }
  },
  {
    "name": "update_spend_category_by_id",
    "description": "Updates an existing spend category with new attributes.\n\nThe spend category must be identified by its unique ID (same as provided in the path). Only fields passed in the payload will be updated; others remain unchanged.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "Unique identifier of the spend category to update."
        },
        "name": {
          "type": "string",
          "description": "Optional. Spend category name (max 255 characters)."
        },
        "new_external_id": {
          "type": "string",
          "description": "Optional. External system ID (max 255 characters)."
        },
        "usages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. Applicable contexts.\n- Enum: \"procurement\", \"expense\", \"ad_hoc_payment\", \"supplier_invoice\"\n- name (str): Optional. Spend category name (max 255 characters).\n- external_id (str): Optional. External system ID (max 255 characters).\n- usages (List[str]): Optional. Applicable contexts.\n    - Enum: \"procurement\", \"expense\", \"ad_hoc_payment\", \"supplier_invoice\""
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "update_spend_category_details_by_external_id",
    "description": "Updates the details of an existing spend category using its internal identifier.\n\nThe internal ID must match the one provided in the URL path. All parameters are optional and only the provided fields will be updated.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Internal identifier for the spend category to be updated."
        },
        "name": {
          "type": "string",
          "description": "Updated name (max 255 characters)."
        },
        "external_id": {
          "type": "string",
          "description": "New or same external identifier (max 255 characters)."
        },
        "usages": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Updated list of usages.\n- Enum: \"procurement\", \"expense\", \"ad_hoc_payment\", \"supplier_invoice\""
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "update_supplier_company_by_external_id",
    "description": "Updates an existing supplier company using its external identifier.\n\nThis endpoint allows updating a supplier company's attributes and relationships using its external ID. The request body must include an `id` that matches the identifier in the path.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "Required. External identifier of the supplier company (e.g., \"1234-5678-abcd-efgh\")."
        },
        "_include": {
          "type": "string",
          "description": "Comma-separated list of related resources to include in the response.\nEnum values:\n- \"attachments\"\n- \"supplier_category\"\n- \"supplier_groups\"\n- \"default_payment_term\"\n- \"payment_types\"\n- \"default_payment_type\"\n- \"payment_currencies\"\n- \"default_payment_currency\"\n- \"supplier_classification_values\""
        },
        "body": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Must be \"supplier_companies\"."
            },
            "id": {
              "type": "integer",
              "description": "Supplier company ID."
            },
            "attributes": {
              "type": "object",
              "description": "Fields to update.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Required. Company name (max 255 characters)."
                },
                "description": {
                  "type": "string",
                  "description": "Optional description."
                },
                "public": {
                  "type": "boolean",
                  "description": "Visibility of the company."
                },
                "risk": {
                  "type": "string",
                  "description": "Slug value for company risk."
                },
                "segmentation": {
                  "type": "string",
                  "description": "Slug value for segmentation."
                },
                "segmentation_status": {
                  "type": "string",
                  "description": "Slug value for segmentation status."
                },
                "segmentation_notes": {
                  "type": "string",
                  "description": "Notes for segmentation."
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Tags for classification."
                },
                "url": {
                  "type": "string",
                  "description": "Supplier's website."
                },
                "duns_number": {
                  "type": "string",
                  "description": "D-U-N-S® Number."
                },
                "external_id": {
                  "type": "string",
                  "description": "Custom external ID."
                },
                "self_registered": {
                  "type": "boolean",
                  "description": "Whether the supplier self-registered."
                },
                "onboarding_form_completion_status": {
                  "type": "string",
                  "description": "Onboarding progress: null, 'not_started', 'in_progress', 'completed'."
                },
                "accept_all_currencies": {
                  "type": "boolean",
                  "description": "If all currencies are accepted."
                },
                "custom_fields": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the custom field."
                      },
                      "value": {
                        "type": "object",
                        "description": "Value, based on field type."
                      }
                    },
                    "required": [
                      "name",
                      "value"
                    ]
                  },
                  "description": "List of custom fields."
                }
              },
              "required": [
                "accept_all_currencies",
                "custom_fields",
                "description",
                "duns_number",
                "external_id",
                "name",
                "onboarding_form_completion_status",
                "public",
                "risk",
                "segmentation",
                "segmentation_notes",
                "segmentation_status",
                "self_registered",
                "tags",
                "url"
              ]
            },
            "relationships": {
              "type": "object",
              "description": "Updated linked resources.\n    - supplier_category, external_supplier_category (dict): Supplier category by ID or external ID.\n    - supplier_groups, external_supplier_groups (List[dict]): Group associations by ID or external ID.\n    - default_payment_term, external_default_payment_term (dict): Default payment term by ID or external ID.\n    - payment_types, external_payment_types (List[dict]): Accepted payment types.\n    - default_payment_type, external_default_payment_type (dict): Default payment method.\n    - payment_currencies, external_payment_currencies (List[dict]): Accepted currencies.\n    - default_payment_currency, external_default_payment_currency (dict): Default currency.",
              "properties": {
                "attachments": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "description": "Attachments (ID + type = \"attachments\")."
                }
              },
              "required": [
                "attachments"
              ]
            }
          },
          "description": "The payload used to update the supplier company.",
          "required": [
            "attributes",
            "id",
            "relationships",
            "type"
          ]
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "update_supplier_company_by_id",
    "description": "Updates the details of an existing supplier company.\n\nThis endpoint allows modification of a supplier company's attributes and relationships. You must provide the unique identifier of the supplier company (same as in the path) in the request body. When updating relationships, the entire existing relationship is replaced by the provided values.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Required. Unique identifier of the supplier company.\nExample: 1"
        },
        "_include": {
          "type": "string",
          "description": "Comma-separated list of related resources to include in the response.\nAllowed values:\n- \"attachments\"\n- \"supplier_category\"\n- \"supplier_groups\"\n- \"default_payment_term\"\n- \"payment_types\"\n- \"default_payment_type\"\n- \"payment_currencies\"\n- \"default_payment_currency\"\n- \"supplier_classification_values\""
        },
        "body": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "description": "Must be \"supplier_companies\"."
            },
            "id": {
              "type": "integer",
              "description": "Supplier company ID (must match the path parameter)."
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Required. Name of the supplier (≤ 255 characters)."
                },
                "description": {
                  "type": "string",
                  "description": "Company description."
                },
                "public": {
                  "type": "boolean",
                  "description": "Whether the company is publicly listed."
                },
                "risk": {
                  "type": "string",
                  "description": "Risk slug defined by your organization."
                },
                "segmentation": {
                  "type": "string",
                  "description": "Segmentation slug."
                },
                "segmentation_status": {
                  "type": "string",
                  "description": "Segmentation status slug."
                },
                "segmentation_notes": {
                  "type": "string",
                  "description": "Notes about the segmentation."
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Tags assigned to the supplier."
                },
                "url": {
                  "type": "string",
                  "description": "Website of the supplier."
                },
                "duns_number": {
                  "type": "string",
                  "description": "D-U-N-S® Number."
                },
                "external_id": {
                  "type": "string",
                  "description": "Your internal system ID for the supplier."
                },
                "self_registered": {
                  "type": "boolean",
                  "description": "Whether the supplier self-registered."
                },
                "onboarding_form_completion_status": {
                  "type": "string",
                  "description": "One of: null, 'not_started', 'in_progress', 'completed'."
                },
                "accept_all_currencies": {
                  "type": "boolean",
                  "description": "Whether all currencies are accepted."
                },
                "custom_fields": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {}
                  },
                  "description": "List of custom field entries. Each entry can be of multiple supported types.\n        Note: File-type custom fields are only accessible via UI and return `null` in the API.\n\n        Supported types include:\n            - Checkbox\n            - Short Text\n            - Paragraph\n            - Date\n            - Integer\n            - Currency\n            - Decimal\n            - Single Select\n            - Multiple Select\n            - URL\n            - Lookup\n            - Related"
                }
              },
              "description": "",
              "required": [
                "accept_all_currencies",
                "custom_fields",
                "name",
                "onboarding_form_completion_status",
                "public",
                "self_registered",
                "tags"
              ]
            },
            "relationships": {
              "type": "object",
              "properties": {},
              "description": "Supplier relationships (replaces existing data).\n    - supplier_category\n    - supplier_groups\n    - default_payment_term\n    - payment_types\n    - default_payment_type\n    - payment_currencies\n    - default_payment_currency\n    - attachments\n    - supplier_classification_values"
            }
          },
          "description": "SupplierCompanyUpdate object containing:",
          "required": [
            "attributes",
            "id",
            "relationships",
            "type"
          ]
        }
      },
      "required": [
        "id"
      ]
    }
  },
  {
    "name": "update_supplier_company_contact_by_id",
    "description": "Updates the details of an existing supplier company contact.\n\nThis function allows modification of contact information by providing updated\nvalues for specific fields. The contact is identified by both company ID and\ncontact ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "company_id": {
          "type": "integer",
          "description": "The unique identifier of the supplier company.\nThis is the internal ID used by the system to reference the company."
        },
        "contact_id": {
          "type": "integer",
          "description": "The unique identifier of the contact.\nThis is the internal ID used by the system to reference the contact."
        },
        "_include": {
          "type": "string",
          "description": "Comma-separated list of related resources to include\nin the response. Not fully implemented in simulation."
        },
        "body": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The contact's full name"
            },
            "email": {
              "type": "string",
              "description": "The contact's email address"
            },
            "phone": {
              "type": "string",
              "description": "The contact's phone number"
            },
            "role": {
              "type": "string",
              "description": "The contact's role in the company"
            },
            "status": {
              "type": "string",
              "description": "The contact's status"
            }
          },
          "description": "Dictionary containing the fields to update.\nRequired fields:\n- At least one field to update\nOptional fields:",
          "required": [
            "email",
            "name",
            "phone",
            "role",
            "status"
          ]
        }
      },
      "required": [
        "company_id",
        "contact_id"
      ]
    }
  },
  {
    "name": "update_supplier_contact_by_external_id",
    "description": "Updates the details of an existing supplier contact using the external ID.\n\nThe function modifies a supplier contact’s attributes and relationships such as contact types\nand phone numbers, identified via the external ID. The request body must include the contact's\ninternal `id`, which must match the contact's actual identifier in the system.",
    "parameters": {
      "type": "object",
      "properties": {
        "external_id": {
          "type": "string",
          "description": "Required. Unique external identifier of the supplier contact.\nExample: \"CNT-17\""
        },
        "_include": {
          "type": "string",
          "description": "Comma-separated list of related resources to include in the response.\nAllowed values:\n- \"supplier_company\"\n- \"contact_types\"\n- \"phones\""
        },
        "body": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {},
              "description": ""
            },
            "type": {
              "type": "string",
              "description": "Required. Must be \"supplier_contacts\"."
            },
            "id": {
              "type": "integer",
              "description": "Required. Must match the internal ID of the contact being updated."
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Required unless both `first_name` and `last_name` are given. Full name (≤ 255 chars)."
                },
                "first_name": {
                  "type": "string",
                  "description": "First name (≤ 255 chars)."
                },
                "last_name": {
                  "type": "string",
                  "description": "Last name (≤ 255 chars)."
                },
                "email": {
                  "type": "string",
                  "description": "Required. Email address (≤ 255 chars)."
                },
                "notes": {
                  "type": "string",
                  "description": "Optional notes related to the contact."
                },
                "phone_number": {
                  "type": "string",
                  "description": "Deprecated. Prefer using `phones` relationship."
                },
                "job_title": {
                  "type": "string",
                  "description": "Job title of the contact."
                },
                "external_id": {
                  "type": "string",
                  "description": "External ID of the contact."
                },
                "is_suggested": {
                  "type": "boolean",
                  "description": "Indicates if the contact was suggested and not yet approved."
                }
              },
              "description": "",
              "required": [
                "email",
                "name"
              ]
            },
            "relationships": {
              "type": "object",
              "properties": {
                "contact_types": {
                  "type": "object",
                  "properties": {},
                  "description": "- data: List[{ id (int), type (str) }]"
                },
                "phones": {
                  "type": "object",
                  "properties": {},
                  "description": "- data: List[{ id (int), type (str) }]"
                }
              },
              "description": ""
            }
          },
          "description": "Payload with updated supplier contact details.",
          "required": [
            "attributes",
            "data",
            "id",
            "relationships",
            "type"
          ]
        }
      },
      "required": [
        "external_id"
      ]
    }
  },
  {
    "name": "update_supplier_contact_by_id",
    "description": "Updates the details of an existing supplier contact.\n\nThis function modifies a supplier contact's attributes and optionally updates related\ncontact types and phone records. The request body must include the `id` of the contact,\nwhich should match the path parameter.",
    "parameters": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Required. Unique identifier of the supplier contact to be updated."
        },
        "_include": {
          "type": "string",
          "description": "Comma-separated list of related resources to include in the response.\nAllowed values:\n- \"supplier_company\"\n- \"contact_types\"\n- \"phones\""
        },
        "body": {
          "type": "object",
          "properties": {
            "data": {
              "type": "object",
              "properties": {},
              "description": ""
            },
            "type": {
              "type": "string",
              "description": "Required. Must be \"supplier_contacts\"."
            },
            "id": {
              "type": "integer",
              "description": "Required. Must match the `id` in the URL path."
            },
            "attributes": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Required unless both `first_name` and `last_name` are provided. Full name (≤ 255 chars)."
                },
                "first_name": {
                  "type": "string",
                  "description": "First name (≤ 255 chars)."
                },
                "last_name": {
                  "type": "string",
                  "description": "Last name (≤ 255 chars)."
                },
                "email": {
                  "type": "string",
                  "description": "Required. Email address (≤ 255 chars)."
                },
                "notes": {
                  "type": "string",
                  "description": "Notes about the contact."
                },
                "phone_number": {
                  "type": "string",
                  "description": "Deprecated. Prefer `phones` relationship."
                },
                "job_title": {
                  "type": "string",
                  "description": "Job title of the contact."
                },
                "external_id": {
                  "type": "string",
                  "description": "Internal reference ID."
                },
                "is_suggested": {
                  "type": "boolean",
                  "description": "If the contact is unapproved or suggested."
                }
              },
              "description": "",
              "required": [
                "email",
                "name"
              ]
            },
            "relationships": {
              "type": "object",
              "properties": {
                "contact_types": {
                  "type": "object",
                  "properties": {},
                  "description": "- data: List[{ id (int), type (str) }]"
                },
                "phones": {
                  "type": "object",
                  "properties": {},
                  "description": "- data: List[{ id (int), type (str) }]"
                }
              },
              "description": ""
            }
          },
          "description": "Payload containing the updated supplier contact information.",
          "required": [
            "attributes",
            "data",
            "id",
            "relationships",
            "type"
          ]
        }
      },
      "required": [
        "id"
      ]
    }
  }
]