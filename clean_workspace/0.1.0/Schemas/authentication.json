[
  {
    "name": "authenticate_service",
    "description": "Authenticate a service by setting its authentication status to True.",
    "parameters": {
      "type": "object",
      "properties": {
        "service_name": {
          "type": "string",
          "description": "The name of the service to authenticate"
        }
      },
      "required": [
        "service_name"
      ]
    }
  },
  {
    "name": "create_authenticated_function",
    "description": "Creates an authenticated version of a function that checks authentication before execution.\n\nThis function wraps an existing function with authentication checking logic.\nThe wrapped function will only execute if the specified service is authenticated,\notherwise it raises an AuthenticationError with a helpful message.",
    "parameters": {
      "type": "object",
      "properties": {
        "func": {
          "type": "object",
          "description": "The function to wrap with authentication checking."
        },
        "service_name": {
          "type": "string",
          "description": "The name of the service that needs to be authenticated."
        }
      },
      "required": [
        "func",
        "service_name"
      ]
    }
  },
  {
    "name": "deauthenticate_service",
    "description": "Deauthenticate a service by setting its authentication status to False.",
    "parameters": {
      "type": "object",
      "properties": {
        "service_name": {
          "type": "string",
          "description": "The name of the service to deauthenticate"
        }
      },
      "required": [
        "service_name"
      ]
    }
  },
  {
    "name": "is_service_authenticated",
    "description": "Checks if a service is authenticated and returns a simple boolean result.\n\nThis function checks the runtime authentication state from the framework config.\nIt uses the authentication manager to determine if authentication is required.",
    "parameters": {
      "type": "object",
      "properties": {
        "service_name": {
          "type": "string",
          "description": "The name of the service to check. Can be any string,\nincluding names of services that don't exist in the system.\n    "
        }
      },
      "required": [
        "service_name"
      ]
    }
  },
  {
    "name": "list_authenticated_services",
    "description": "List all authenticated services.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "reset_all_authentication",
    "description": "Reset authentication status for all services.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  }
]