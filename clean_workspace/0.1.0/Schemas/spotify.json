[
  {
    "name": "add_custom_playlist_cover_image",
    "description": "Add or replace the custom cover image for a playlist.\n\nThis endpoint allows you to upload a new JPEG image to be used as the cover for a specific playlist. The image must be base64-encoded JPEG data, with a maximum size of 256 KB. Any previous cover image will be replaced.",
    "parameters": {
      "type": "object",
      "properties": {
        "playlist_id": {
          "type": "string",
          "description": "The Spotify ID for the playlist. Example: 'QDyH69WryQ7dPRXVOFmy2V'."
        },
        "image_data": {
          "type": "string",
          "description": "Base64-encoded JPEG image data. Maximum 256 KB after decoding."
        }
      },
      "required": [
        "image_data",
        "playlist_id"
      ]
    }
  },
  {
    "name": "add_items_to_playlist",
    "description": "Add one or more items (tracks or episodes) to a user's playlist.\n\nThis endpoint allows you to add tracks or episodes to an existing playlist. \nYou can specify the position at which to insert the new items, or append them \nto the end. The function validates input, updates the playlist's track list, \nand generates a new snapshot ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "playlist_id": {
          "type": "string",
          "description": "The Spotify ID for the playlist. Example: 'QDyH69WryQ7dPRXVOFmy2V'."
        },
        "uris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Spotify track or episode URIs to add. \nEach must be a valid URI of the form 'spotify:track:<id>' or 'spotify:episode:<id>'. \nMaximum 100 items per request.\nExample: ['spotify:track:4iV5W9uYEdYUVa79Axb7Rh', 'spotify:episode:518j5o704s0mygKUv9aJL4']"
        },
        "position": {
          "type": "integer",
          "description": "The position to insert the items (0-based). If omitted, items are appended to the end."
        }
      },
      "required": [
        "playlist_id",
        "uris"
      ]
    }
  },
  {
    "name": "change_playlist_details",
    "description": "Change a playlist's name and public/private state, collaborative state, and description.\n\nThis endpoint allows users to modify the metadata of their playlists, including the name, visibility settings, collaborative status, and description. This is essential for playlist management functionality.",
    "parameters": {
      "type": "object",
      "properties": {
        "playlist_id": {
          "type": "string",
          "description": "The Spotify ID for the playlist."
        },
        "name": {
          "type": "string",
          "description": "The new name for the playlist, for example \"My New Playlist Title\"."
        },
        "public": {
          "type": "boolean",
          "description": "If true the playlist will be public, if false it will be private."
        },
        "collaborative": {
          "type": "boolean",
          "description": "If true, the playlist will become collaborative and other users will be able to modify the playlist in their Spotify client."
        },
        "description": {
          "type": "string",
          "description": "Value for playlist description as displayed in Spotify Clients and in the Web API."
        }
      },
      "required": [
        "playlist_id"
      ]
    }
  },
  {
    "name": "check_user_follows_artists_or_users",
    "description": "Check if the current user follows one or more artists or users.\n\nThis endpoint allows you to check the follow status of the current user for multiple artists or users. This is useful for displaying follow/unfollow buttons or understanding the user's music preferences and social connections.",
    "parameters": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the Spotify IDs for the artists or users. Maximum: 50 IDs.\nExamples: ['0TnOYISbd1XYRBk9myaseg', '3HqSLMAZ3g3d5poNaI7GOU'] for artists,\n['smuqPNFPXrJKcEt943KrY8', 'SLvTb0e3Rp3oLJ8YXl0dC5'] for users."
        },
        "type": {
          "type": "string",
          "description": "The type of items to check. Must be either \"artist\" or \"user\"."
        }
      },
      "required": [
        "ids",
        "type"
      ]
    }
  },
  {
    "name": "check_user_follows_playlist",
    "description": "Check to see if the one or more users are following a specified playlist.\n\nThis endpoint allows you to check the follow status of multiple users for a specific playlist. This is useful for displaying follow/unfollow buttons or understanding the social reach of a playlist.",
    "parameters": {
      "type": "object",
      "properties": {
        "playlist_id": {
          "type": "string",
          "description": "The Spotify ID for the playlist.\nExamples: 'playlist_1', '37i9dQZF1DXcBWIGoYBM5M'."
        },
        "user_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the Spotify IDs for the users. Maximum: 5 IDs.\nExamples: ['smuqPNFPXrJKcEt943KrY8', 'SLvTb0e3Rp3oLJ8YXl0dC5']."
        }
      },
      "required": [
        "playlist_id",
        "user_ids"
      ]
    }
  },
  {
    "name": "check_users_saved_albums",
    "description": "Check if one or more albums is already saved in the current Spotify user's 'Your Music' library.\n\nThis endpoint allows applications to check the saved status of albums without retrieving the full album data. This is useful for displaying save/unsave buttons or tracking user preferences.",
    "parameters": {
      "type": "object",
      "properties": {
        "album_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the Spotify IDs for the albums. Maximum: 50 IDs."
        }
      },
      "required": [
        "album_ids"
      ]
    }
  },
  {
    "name": "create_playlist",
    "description": "Create a new playlist for a user.\n\nThis endpoint creates a new playlist owned by the specified user. The playlist \nis added to the user's list of playlists and initialized with no tracks. \nThe response includes the full playlist object as stored in the database.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "description": "The user's Spotify ID. Example: 'smuqPNFPXrJKcEt943KrY8'."
        },
        "name": {
          "type": "string",
          "description": "The name of the playlist. Example: 'My Playlist'."
        },
        "public": {
          "type": "boolean",
          "description": "Whether the playlist is public. Default: True."
        },
        "collaborative": {
          "type": "boolean",
          "description": "Whether the playlist is collaborative. Default: False."
        },
        "description": {
          "type": "string",
          "description": "Playlist description. Default: None."
        }
      },
      "required": [
        "name",
        "user_id"
      ]
    }
  },
  {
    "name": "follow_artists_or_users",
    "description": "Add the current user as a follower of one or more artists or users.\n\nThis endpoint allows the current user to follow multiple artists or users at once. Following an artist will add their music to the user's recommendations and allow them to receive updates about the artist. Following a user will allow them to see the user's public playlists and activity.",
    "parameters": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the Spotify IDs for the artists or users. Maximum: 50 IDs.\nExamples: ['0TnOYISbd1XYRBk9myaseg', '3HqSLMAZ3g3d5poNaI7GOU'] for artists,\n['smuqPNFPXrJKcEt943KrY8', 'SLvTb0e3Rp3oLJ8YXl0dC5'] for users."
        },
        "type": {
          "type": "string",
          "description": "The type of items to follow. Must be either \"artist\" or \"user\"."
        }
      },
      "required": [
        "ids",
        "type"
      ]
    }
  },
  {
    "name": "follow_playlist",
    "description": "Add the current user as a follower of a playlist.\n\nThis endpoint allows the current user to follow a playlist, which will add it to their library and allow them to receive updates about the playlist. The playlist can be followed publicly or privately, and this setting can be changed later.",
    "parameters": {
      "type": "object",
      "properties": {
        "playlist_id": {
          "type": "string",
          "description": "The Spotify ID for the playlist.\nExamples: 'playlist_1', '37i9dQZF1DXcBWIGoYBM5M'."
        },
        "public": {
          "type": "boolean",
          "description": "Defaults to true. If true the playlist will be included in user's public playlists, if false it will remain private. To be able to follow playlists privately, the user must have granted the playlist-modify-private scope.\nExamples: True (public), False (private)."
        }
      },
      "required": [
        "playlist_id"
      ]
    }
  },
  {
    "name": "get_album",
    "description": "Get Spotify catalog information for a single album.\n\nThis endpoint retrieves detailed information about a specific album including its tracks, artists, release date, and metadata. This is essential for displaying album information, track listings, and album details in music applications.",
    "parameters": {
      "type": "object",
      "properties": {
        "album_id": {
          "type": "string",
          "description": "The Spotify ID for the album."
        },
        "market": {
          "type": "string",
          "description": "An ISO 3166-1 alpha-2 country code. If a market is not supplied, no market is applied."
        }
      },
      "required": [
        "album_id"
      ]
    }
  },
  {
    "name": "get_album_tracks",
    "description": "Get Spotify catalog information about an album's tracks.\n\nThis endpoint retrieves all tracks from a specific album with optional pagination and market filtering. This is useful for displaying track listings, creating playlists, or analyzing album content.",
    "parameters": {
      "type": "object",
      "properties": {
        "album_id": {
          "type": "string",
          "description": "The Spotify ID for the album."
        },
        "market": {
          "type": "string",
          "description": "An ISO 3166-1 alpha-2 country code. If a market is not supplied, no market is applied."
        },
        "limit": {
          "type": "integer",
          "description": "The maximum number of tracks to return. Default: 20. Minimum: 1. Maximum: 50."
        },
        "offset": {
          "type": "integer",
          "description": "The index of the first track to return. Default: 0 (the first object)."
        }
      },
      "required": [
        "album_id"
      ]
    }
  },
  {
    "name": "get_artist",
    "description": "Get Spotify catalog information for a single artist identified by their unique Spotify ID.\n\nThis endpoint retrieves comprehensive information about a specific artist including their profile, popularity metrics, genres, and follower count. This is essential for displaying artist pages, creating artist-based recommendations, or providing artist context in music applications.",
    "parameters": {
      "type": "object",
      "properties": {
        "artist_id": {
          "type": "string",
          "description": "The Spotify ID for the artist."
        }
      },
      "required": [
        "artist_id"
      ]
    }
  },
  {
    "name": "get_artists_albums",
    "description": "Get Spotify catalog information about an artist's albums.\n\nThis endpoint retrieves all albums released by a specific artist, with options to filter by album type (album, single, appears_on, compilation) and market availability. The response supports pagination for artists with extensive discographies, making it suitable for displaying artist discographies or creating artist-based playlists.",
    "parameters": {
      "type": "object",
      "properties": {
        "artist_id": {
          "type": "string",
          "description": "The Spotify ID for the artist."
        },
        "include_groups": {
          "type": "string",
          "description": "A comma-separated list of keywords that will be used to filter the response. If not supplied, all album types will be returned. Valid values are: 'album', 'single', 'appears_on', 'compilation'."
        },
        "market": {
          "type": "string",
          "description": "An ISO 3166-1 alpha-2 country code. If a market is not supplied, no market is applied."
        },
        "limit": {
          "type": "integer",
          "description": "The maximum number of albums to return. Default: 20. Minimum: 1. Maximum: 50."
        },
        "offset": {
          "type": "integer",
          "description": "The index of the first album to return. Default: 0 (the first object)."
        }
      },
      "required": [
        "artist_id"
      ]
    }
  },
  {
    "name": "get_artists_related_artists",
    "description": "Get Spotify catalog information about artists similar to a given artist.\n\nThis endpoint retrieves artists that are similar to the specified artist based on Spotify's similarity algorithm. This is useful for music discovery, creating artist radio stations, or suggesting similar artists to users.",
    "parameters": {
      "type": "object",
      "properties": {
        "artist_id": {
          "type": "string",
          "description": "The Spotify ID for the artist."
        }
      },
      "required": [
        "artist_id"
      ]
    }
  },
  {
    "name": "get_artists_top_tracks",
    "description": "Get Spotify catalog information about an artist's top tracks by country.\n\nThis endpoint retrieves the most popular tracks by a specific artist in a given market. The tracks are ranked by popularity and can be used to display an artist's most successful songs or create artist-specific playlists.",
    "parameters": {
      "type": "object",
      "properties": {
        "artist_id": {
          "type": "string",
          "description": "The Spotify ID for the artist."
        },
        "market": {
          "type": "string",
          "description": "An ISO 3166-1 alpha-2 country code. The country for which to get the top tracks."
        }
      },
      "required": [
        "artist_id",
        "market"
      ]
    }
  },
  {
    "name": "get_available_genre_seeds",
    "description": "Retrieve a list of available genres seed parameter values for recommendations.\n\nThis endpoint retrieves all available genre seeds that can be used as seed_genres in the get_recommendations endpoint. This is useful for building genre selection interfaces or understanding what genres are available for recommendations.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "get_categories",
    "description": "Get a list of categories used to tag items in Spotify (on, for example, the Spotify player's 'Browse' tab).\n\nThis endpoint retrieves all available categories that can be used to browse and discover content on Spotify. The response can be filtered by country and locale, and supports pagination for efficient data retrieval. This is essential for building browse interfaces and category-based navigation.",
    "parameters": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "description": "A country: an ISO 3166-1 alpha-2 country code. Provide this parameter if you want the list of returned items to be relevant to a particular country. If omitted, the returned items will be relevant to all countries.\nExamples: 'US', 'CA', 'GB', 'DE', 'FR'."
        },
        "locale": {
          "type": "string",
          "description": "The desired language, consisting of a lowercase ISO 639-1 language code and an uppercase ISO 3166-1 alpha-2 country code, joined by an underscore. For example: es_MX, meaning \"Spanish (Mexico)\".\nExamples: 'en_US', 'es_MX', 'fr_FR'."
        },
        "limit": {
          "type": "integer",
          "description": "The maximum number of categories to return. Default: 20. Minimum: 1. Maximum: 50.\nExamples: 10 (small selection), 20 (default), 50 (maximum)."
        },
        "offset": {
          "type": "integer",
          "description": "The index of the first category to return. Default: 0 (the first object).\nExamples: 0 (start from beginning), 20 (skip first 20 categories)."
        }
      }
    }
  },
  {
    "name": "get_category",
    "description": "Get a single category used to tag items in Spotify (on, for example, the Spotify player's 'Browse' tab).\n\nThis endpoint retrieves detailed information about a specific category, including its name, icons, and other metadata. This is useful for displaying category information or building category-based navigation interfaces.",
    "parameters": {
      "type": "object",
      "properties": {
        "category_id": {
          "type": "string",
          "description": "The Spotify category ID for the category.\nExamples: 'category_1', '0JQ5DAqbMKFQ00XGBls6ym'."
        },
        "country": {
          "type": "string",
          "description": "A country: an ISO 3166-1 alpha-2 country code. Provide this parameter if you want the list of returned items to be relevant to a particular country. If omitted, the returned items will be relevant to all countries.\nExamples: 'US', 'CA', 'GB', 'DE', 'FR'."
        },
        "locale": {
          "type": "string",
          "description": "The desired language, consisting of a lowercase ISO 639-1 language code and an uppercase ISO 3166-1 alpha-2 country code, joined by an underscore. For example: es_MX, meaning \"Spanish (Mexico)\".\nExamples: 'en_US', 'es_MX', 'fr_FR'."
        }
      },
      "required": [
        "category_id"
      ]
    }
  },
  {
    "name": "get_category_playlists",
    "description": "Get a list of Spotify playlists tagged with a particular category.\n\nThis endpoint retrieves playlists that are tagged with a specific category. The response can be filtered by country and supports pagination for efficient data retrieval. This is useful for displaying category-specific playlists or building category-based browsing interfaces.",
    "parameters": {
      "type": "object",
      "properties": {
        "category_id": {
          "type": "string",
          "description": "The Spotify category ID for the category.\nExamples: 'category_1', '0JQ5DAqbMKFQ00XGBls6ym'."
        },
        "country": {
          "type": "string",
          "description": "A country: an ISO 3166-1 alpha-2 country code. Provide this parameter if you want the list of returned items to be relevant to a particular country. If omitted, the returned items will be relevant to all countries.\nExamples: 'US', 'CA', 'GB', 'DE', 'FR'."
        },
        "limit": {
          "type": "integer",
          "description": "The maximum number of playlists to return. Default: 20. Minimum: 1. Maximum: 50.\nExamples: 10 (small selection), 20 (default), 50 (maximum)."
        },
        "offset": {
          "type": "integer",
          "description": "The index of the first playlist to return. Default: 0 (the first object).\nExamples: 0 (start from beginning), 20 (skip first 20 playlists)."
        }
      },
      "required": [
        "category_id"
      ]
    }
  },
  {
    "name": "get_current_user_profile",
    "description": "Get detailed profile information about the current user (including display name, Spotify URI, profile image, and follower count). Requires user authorization.\n\nThis endpoint retrieves comprehensive profile information for the currently authenticated user. The response includes personal details, account status, subscription information, and social metrics. This is essential for applications that need to display user information or customize the experience based on user preferences and account type.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "get_current_users_playlists",
    "description": "Get a list of the current user's playlists (owned or followed).\n\nThis endpoint retrieves all playlists that the current user owns or follows. The response \nincludes detailed playlist information and supports pagination for efficient data retrieval.",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "The maximum number of playlists to return. Default: 20. Minimum: 1. Maximum: 50.\nExamples: 10 (small selection), 20 (default), 50 (maximum)."
        },
        "offset": {
          "type": "integer",
          "description": "The index of the first playlist to return. Default: 0 (the first object).\nExamples: 0 (start from beginning), 20 (skip first 20 playlists)."
        }
      }
    }
  },
  {
    "name": "get_featured_playlists",
    "description": "Get a list of Spotify featured playlists (shown, for example, on a Spotify player's 'Browse' tab).\n\nThis endpoint retrieves playlists that are featured on Spotify, such as those shown on the Browse tab. The response can be filtered by country and locale, and supports pagination for efficient data retrieval. This is essential for music discovery and providing curated content to users.",
    "parameters": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "description": "A country: an ISO 3166-1 alpha-2 country code. Provide this parameter if you want the list of returned items to be relevant to a particular country. If omitted, the returned items will be relevant to all countries.\nExamples: 'US', 'CA', 'GB', 'DE', 'FR'."
        },
        "locale": {
          "type": "string",
          "description": "The desired language, consisting of a lowercase ISO 639-1 language code and an uppercase ISO 3166-1 alpha-2 country code, joined by an underscore. For example: es_MX, meaning \"Spanish (Mexico)\".\nExamples: 'en_US', 'es_MX', 'fr_FR'."
        },
        "limit": {
          "type": "integer",
          "description": "The maximum number of playlists to return. Default: 20. Minimum: 1. Maximum: 50.\nExamples: 10 (small selection), 20 (default), 50 (maximum)."
        },
        "offset": {
          "type": "integer",
          "description": "The index of the first playlist to return. Default: 0 (the first object).\nExamples: 0 (start from beginning), 20 (skip first 20 playlists)."
        },
        "timestamp": {
          "type": "string",
          "description": "A timestamp in ISO 8601 format: yyyy-MM-ddTHH:mm:ss. Use this parameter to specify the user's local time to get results tailored for that specific date and time in the day. If not provided, the response defaults to the current UTC time.\nExamples: '2014-10-23T09:00:00', '2023-12-31T23:59:59'."
        }
      }
    }
  },
  {
    "name": "get_followed_artists",
    "description": "Get the artists that the current user follows.\n\nThis endpoint retrieves all artists that the current user is following. The response includes detailed artist information and supports pagination for efficient data retrieval. This is essential for displaying the user's followed artists, creating artist-based recommendations, or managing user preferences.",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\nExamples: 10 (small selection), 20 (default), 50 (maximum)."
        },
        "after": {
          "type": "string",
          "description": "The last artist ID retrieved from the previous request. Used for pagination.\nExamples: '0TnOYISbd1XYRBk9myaseg', '3HqSLMAZ3g3d5poNaI7GOU'."
        }
      }
    }
  },
  {
    "name": "get_new_releases",
    "description": "Get a list of new album releases featured in Spotify.\n\nThis endpoint retrieves the latest album releases that are featured on Spotify. The response includes detailed album information and can be filtered by country and paginated for efficient data retrieval. This is essential for music discovery and keeping users updated with the latest releases.",
    "parameters": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "description": "A country: an ISO 3166-1 alpha-2 country code. Provide this parameter if you want the list of returned items to be relevant to a particular country. If omitted, the returned items will be relevant to all countries."
        },
        "limit": {
          "type": "integer",
          "description": "The maximum number of albums to return. Default: 20. Minimum: 1. Maximum: 50."
        },
        "offset": {
          "type": "integer",
          "description": "The index of the first album to return. Default: 0 (the first object)."
        }
      }
    }
  },
  {
    "name": "get_playlist",
    "description": "Get a playlist owned by a Spotify user.\n\nThis endpoint retrieves detailed information about a specific playlist including its tracks, metadata, and owner information. This is essential for displaying playlist information, track listings, and playlist details in music applications.",
    "parameters": {
      "type": "object",
      "properties": {
        "playlist_id": {
          "type": "string",
          "description": "The Spotify ID for the playlist."
        },
        "market": {
          "type": "string",
          "description": "An ISO 3166-1 alpha-2 country code. If a market is not supplied, no market is applied."
        },
        "fields": {
          "type": "string",
          "description": "Filters for the query: a comma-separated list of the fields to return. If omitted, all fields are returned."
        },
        "additional_types": {
          "type": "string",
          "description": "A comma-separated list of item types that your client supports besides the default track type. Valid types are: track and episode."
        }
      },
      "required": [
        "playlist_id"
      ]
    }
  },
  {
    "name": "get_playlist_cover_image",
    "description": "Get the current cover image(s) for a playlist.\n\nThis endpoint retrieves the cover image(s) for the specified playlist. The response is a list of image objects, each containing the image URL and its dimensions. If no cover image is set, an empty list is returned.",
    "parameters": {
      "type": "object",
      "properties": {
        "playlist_id": {
          "type": "string",
          "description": "The Spotify ID for the playlist. Example: 'QDyH69WryQ7dPRXVOFmy2V'."
        }
      },
      "required": [
        "playlist_id"
      ]
    }
  },
  {
    "name": "get_playlist_items",
    "description": "Get full details of the items of a playlist owned by a Spotify user.\n\nThis endpoint retrieves the tracks and episodes in a playlist, along with metadata about when they were added and by whom. This is essential for displaying playlist contents and managing playlist items.",
    "parameters": {
      "type": "object",
      "properties": {
        "playlist_id": {
          "type": "string",
          "description": "The Spotify ID for the playlist."
        },
        "market": {
          "type": "string",
          "description": "An ISO 3166-1 alpha-2 country code. If a market is not supplied, no market is applied."
        },
        "fields": {
          "type": "string",
          "description": "Filters for the query: a comma-separated list of the fields to return. If omitted, all fields are returned."
        },
        "limit": {
          "type": "integer",
          "description": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50."
        },
        "offset": {
          "type": "integer",
          "description": "The index of the first item to return. Default: 0 (the first item)."
        },
        "additional_types": {
          "type": "string",
          "description": "A comma-separated list of item types that your client supports besides the default track type. Valid types are: track and episode."
        }
      },
      "required": [
        "playlist_id"
      ]
    }
  },
  {
    "name": "get_recommendations",
    "description": "Get recommendations for one or more seed artists, genres, and/or tracks.\n\nThis endpoint creates a playlist of tracks based on the provided seeds and audio features. The response includes detailed track information and can be customized using various audio feature parameters. This is essential for music discovery and creating personalized listening experiences.",
    "parameters": {
      "type": "object",
      "properties": {
        "seed_artists": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of Spotify IDs for seed artists. Up to 5 seed values may be provided in any combination of seed_artists, seed_tracks and seed_genres.\nExamples: ['artist_1', 'artist_2'], ['0TnOYISbd1XYRBk9myaseg']."
        },
        "seed_genres": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of any genres in the set of available genre seeds. Up to 5 seed values may be provided in any combination of seed_artists, seed_tracks and seed_genres.\nExamples: ['rock', 'pop'], ['classical', 'jazz']."
        },
        "seed_tracks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of Spotify IDs for seed tracks. Up to 5 seed values may be provided in any combination of seed_artists, seed_tracks and seed_genres.\nExamples: ['track_1', 'track_2'], ['4iV5W9uYEdYUVa79Axb7Rh']."
        },
        "limit": {
          "type": "integer",
          "description": "The target size of the list of recommended tracks. For seeds with unusually small pools or when highly restrictive filtering is applied, it may be impossible to generate the requested number of recommended tracks. Debugging information for such cases is available in the response. Default: 20. Minimum: 1. Maximum: 100.\nExamples: 10 (small selection), 20 (default), 100 (maximum)."
        },
        "market": {
          "type": "string",
          "description": "An ISO 3166-1 alpha-2 country code. The country for which to get the top tracks.\nExamples: 'US', 'CA', 'GB', 'DE', 'FR'."
        }
      }
    }
  },
  {
    "name": "get_several_albums",
    "description": "Get Spotify catalog information for multiple albums.\n\nThis endpoint retrieves detailed information about multiple albums in a single request. This is useful for efficiently fetching data for multiple albums, such as when displaying album collections or batch processing.",
    "parameters": {
      "type": "object",
      "properties": {
        "album_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the Spotify IDs for the albums. Maximum: 20 IDs."
        },
        "market": {
          "type": "string",
          "description": "An ISO 3166-1 alpha-2 country code. If a market is not supplied, no market is applied."
        }
      },
      "required": [
        "album_ids"
      ]
    }
  },
  {
    "name": "get_several_artists",
    "description": "Get Spotify catalog information for several artists based on their Spotify IDs.\n\nThis endpoint allows you to retrieve information for multiple artists in a single request, which is more efficient than making individual requests for each artist. The response includes detailed information for each artist, making it ideal for bulk operations or displaying multiple artists in a user interface.",
    "parameters": {
      "type": "object",
      "properties": {
        "artist_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the Spotify IDs for the artists. Maximum: 50 IDs."
        }
      },
      "required": [
        "artist_ids"
      ]
    }
  },
  {
    "name": "get_user_playlists",
    "description": "Get a list of a user's playlists (owned or followed).\n\nThis endpoint retrieves all playlists that the specified user owns or follows. The response includes detailed playlist information and supports pagination for efficient data retrieval.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "description": "The user's Spotify ID. Example: 'smuqPNFPXrJKcEt943KrY8'."
        },
        "limit": {
          "type": "integer",
          "description": "The maximum number of playlists to return. Default: 20. Minimum: 1. Maximum: 50.\nExamples: 10 (small selection), 20 (default), 50 (maximum)."
        },
        "offset": {
          "type": "integer",
          "description": "The index of the first playlist to return. Default: 0 (the first object).\nExamples: 0 (start from beginning), 20 (skip first 20 playlists)."
        }
      },
      "required": [
        "user_id"
      ]
    }
  },
  {
    "name": "get_user_profile",
    "description": "Get public profile information about a Spotify user.\n\nThis endpoint retrieves public profile information for any Spotify user by their user ID. The response includes basic profile information such as display name, profile images, and follower count. This is useful for displaying user information in playlists, collaborative features, or social aspects of music applications.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "description": "The user's Spotify ID.\nExamples: 'smuqPNFPXrJKcEt943KrY8', 'SLvTb0e3Rp3oLJ8YXl0dC5'."
        }
      },
      "required": [
        "user_id"
      ]
    }
  },
  {
    "name": "get_user_top_artists_and_tracks",
    "description": "Get the current user's top artists or tracks based on their listening history. This can be used for personalized recommendations or statistics.\n\nThis endpoint provides access to the user's most listened to artists or tracks over different time periods. The data is based on the user's listening history and can be filtered by time range (short term, medium term, or long term). This is particularly useful for creating personalized experiences, generating recommendations, or displaying user statistics.",
    "parameters": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of entity to return. Valid values: 'artists' or 'tracks'.\nExamples: 'artists' (for top artists), 'tracks' (for top tracks)."
        },
        "limit": {
          "type": "integer",
          "description": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50.\nExamples: 10 (small selection), 20 (default), 50 (maximum)."
        },
        "offset": {
          "type": "integer",
          "description": "The index of the first item to return. Default: 0 (the first object).\nExamples: 0 (start from beginning), 20 (skip first 20 items)."
        },
        "time_range": {
          "type": "string",
          "description": "Over what time frame the affinities are computed. Valid values: 'long_term', 'medium_term', 'short_term'. Default: 'medium_term'.\nExamples: 'short_term' (last 4 weeks), 'medium_term' (last 6 months), 'long_term' (calculated from several years)."
        }
      },
      "required": [
        "type"
      ]
    }
  },
  {
    "name": "get_users_saved_albums",
    "description": "Get a list of the albums saved in the current Spotify user's 'Your Music' library.\n\nThis endpoint retrieves all albums that the current user has saved to their library. The response includes detailed album information and can be filtered by market and paginated for efficient data retrieval.",
    "parameters": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "integer",
          "description": "The maximum number of albums to return. Default: 20. Minimum: 1. Maximum: 50."
        },
        "offset": {
          "type": "integer",
          "description": "The index of the first album to return. Default: 0 (the first object)."
        },
        "market": {
          "type": "string",
          "description": "An ISO 3166-1 alpha-2 country code. If a market is not supplied, no market is applied."
        }
      }
    }
  },
  {
    "name": "remove_albums_for_user",
    "description": "Remove one or more albums from the current user's 'Your Music' library.\n\nThis endpoint allows users to remove albums from their personal library. The albums will no longer appear in the user's 'Your Music' section.",
    "parameters": {
      "type": "object",
      "properties": {
        "album_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the Spotify IDs for the albums. Maximum: 50 IDs."
        }
      },
      "required": [
        "album_ids"
      ]
    }
  },
  {
    "name": "remove_playlist_items",
    "description": "Remove one or more items (tracks or episodes) from a user's playlist.\n\nThis endpoint removes all occurrences of the specified tracks or episodes from the playlist.\nYou can optionally provide a snapshot_id to ensure you are modifying the correct playlist version.\nThe function validates input, updates the playlist's track list, and generates a new snapshot ID.",
    "parameters": {
      "type": "object",
      "properties": {
        "playlist_id": {
          "type": "string",
          "description": "The Spotify ID for the playlist. Example: 'QDyH69WryQ7dPRXVOFmy2V'."
        },
        "tracks": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {}
          },
          "description": "List of dicts, each with a 'uri' key for the track or \nepisode to remove. Each must be a valid URI of the form \n'spotify:track:<id>' or 'spotify:episode:<id>'. Maximum \n100 items per request. \nExample: [{'uri': 'spotify:track:4iV5W9uYEdYUVa79Axb7Rh'}]"
        },
        "snapshot_id": {
          "type": "string",
          "description": "The playlist's snapshot ID to validate against (optional)."
        }
      },
      "required": [
        "playlist_id",
        "tracks"
      ]
    }
  },
  {
    "name": "save_albums_for_user",
    "description": "Save one or more albums to the current user's 'Your Music' library.\n\nThis endpoint allows users to save albums to their personal library for easy access and offline listening. The albums will appear in the user's 'Your Music' section and can be accessed across all their devices.",
    "parameters": {
      "type": "object",
      "properties": {
        "album_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the Spotify IDs for the albums. Maximum: 50 IDs."
        }
      },
      "required": [
        "album_ids"
      ]
    }
  },
  {
    "name": "search_for_item",
    "description": "Get Spotify catalog information about artists, albums, tracks, playlists, shows, episodes, or audiobooks that match a keyword string.\n\nThis endpoint allows you to search Spotify's catalog for various types of content using keywords. The search is powered by Spotify's search engine and supports various filters and parameters. This is essential for music discovery, content browsing, and user search functionality.",
    "parameters": {
      "type": "object",
      "properties": {
        "q": {
          "type": "string",
          "description": "Your search query. You can use wildcards and field filters."
        },
        "type": {
          "type": "string",
          "description": "A comma-separated list of item types to search across. Valid types are: 'album', 'artist', 'playlist', 'track', 'show', 'episode', 'audiobook'."
        },
        "market": {
          "type": "string",
          "description": "An ISO 3166-1 alpha-2 country code. If a market is not supplied, no market is applied."
        },
        "limit": {
          "type": "integer",
          "description": "The maximum number of items to return. Default: 20. Minimum: 1. Maximum: 50."
        },
        "offset": {
          "type": "integer",
          "description": "The index of the first item to return. Default: 0 (the first object)."
        },
        "include_external": {
          "type": "string",
          "description": "If 'audio', the response will include any relevant audio content that is hosted externally."
        }
      },
      "required": [
        "q",
        "type"
      ]
    }
  },
  {
    "name": "unfollow_artists_or_users",
    "description": "Remove the current user as a follower of one or more artists or users.\n\nThis endpoint allows the current user to unfollow multiple artists or users at once. Unfollowing an artist will remove their music from the user's recommendations and stop receiving updates about the artist. Unfollowing a user will stop seeing their public playlists and activity.",
    "parameters": {
      "type": "object",
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of the Spotify IDs for the artists or users. Maximum: 50 IDs.\nExamples: ['0TnOYISbd1XYRBk9myaseg', '3HqSLMAZ3g3d5poNaI7GOU'] for artists,\n['smuqPNFPXrJKcEt943KrY8', 'SLvTb0e3Rp3oLJ8YXl0dC5'] for users."
        },
        "type": {
          "type": "string",
          "description": "The type of items to unfollow. Must be either \"artist\" or \"user\"."
        }
      },
      "required": [
        "ids",
        "type"
      ]
    }
  },
  {
    "name": "unfollow_playlist",
    "description": "Remove the current user as a follower of a playlist.\n\nThis endpoint allows the current user to unfollow a playlist, which will remove it from their library and stop receiving updates about the playlist.",
    "parameters": {
      "type": "object",
      "properties": {
        "playlist_id": {
          "type": "string",
          "description": "The Spotify ID for the playlist.\nExamples: 'playlist_1', '37i9dQZF1DXcBWIGoYBM5M'."
        }
      },
      "required": [
        "playlist_id"
      ]
    }
  },
  {
    "name": "update_playlist_items",
    "description": "Either reorder or replace a playlist's items depending on the request's parameters.\n\nThis endpoint allows users to modify the contents of their playlists by either reordering existing tracks or replacing them entirely. This is essential for playlist management functionality.",
    "parameters": {
      "type": "object",
      "properties": {
        "playlist_id": {
          "type": "string",
          "description": "The Spotify ID for the playlist."
        },
        "uris": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of Spotify URIs to set, can be track or episode URIs. A maximum of 100 items can be set in one request."
        },
        "range_start": {
          "type": "integer",
          "description": "The position of the first item to be reordered."
        },
        "insert_before": {
          "type": "integer",
          "description": "The position where the items should be inserted."
        },
        "range_length": {
          "type": "integer",
          "description": "The amount of items to be reordered. Defaults to 1 if not set."
        },
        "snapshot_id": {
          "type": "string",
          "description": "The playlist's snapshot ID against which you want to make the changes."
        }
      },
      "required": [
        "playlist_id"
      ]
    }
  }
]