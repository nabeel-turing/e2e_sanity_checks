# This file is automatically generated by the MutationBuilder

def register_new_organization(
    company_legal_name,
    business_sector=None,
    main_office_location=None,
    associated_web_domains=None,
    external_system_ref_id=None,
    primary_support_group_id=None,
    internal_company_notes=None,
    public_company_profile=None,
    enable_inter_org_ticket_sharing=None,
    allow_cross_user_ticket_comments=None,
    organization_classifier_tags=None,
    custom_organization_data_fields=None
):
    """
    Creates a new organization.

    Adds a new organization to the database if the provided ID does not already exist.

    Args:
        company_legal_name (str): The name of the organization.
        business_sector (Optional[str]): The industry of the organization. Defaults to None.
        main_office_location (Optional[str]): The location of the organization. Defaults to None.
        associated_web_domains (Optional[List[str]]): A list of domain names associated with the organization.
            Defaults to empty list.
        external_system_ref_id (Optional[str]): A unique external identifier for the organization. Defaults to None.
        primary_support_group_id (Optional[int]): The ID of the group that the organization belongs to. Defaults to None.
        internal_company_notes (Optional[str]): Notes about the organization. Defaults to None.
        public_company_profile (Optional[str]): Any details about the organization, such as the address. Defaults to None.
        enable_inter_org_ticket_sharing (Optional[bool]): Whether tickets from this organization are shared with other organizations. Defaults to None.
        allow_cross_user_ticket_comments (Optional[bool]): Whether end users in this organization can comment on each other's tickets. Defaults to None.
        organization_classifier_tags (Optional[List[str]]): A list of tags associated with the organization. Defaults to empty list.
        custom_organization_data_fields (Optional[Dict[str, Any]]): Custom fields for this organization. Defaults to None.

    Returns:
        Dict[str, Any]: A dictionary indicating the success status and organization details.
            - 'success' (bool): True,
            - 'organization' (Dict[str, Any]): A dictionary containing the organization details.
                - 'id' (int): The unique identifier for the organization.
                - 'name' (str): The name of the organization.
                - 'industry' (Optional[str]): The industry of the organization. The value is `None` if not provided on creation.
                - 'location' (Optional[str]): The location of the organization. The value is `None` if not provided on creation.
                - 'domain_names' (List[str]): A list of domain names associated with the organization.
                - 'external_id' (Optional[str]): A unique external identifier for the organization.
                - 'group_id' (Optional[int]): The ID of the group that the organization belongs to.
                - 'notes' (Optional[str]): Notes about the organization.
                - 'shared_tickets' (Optional[bool]): Whether tickets from this organization are shared with other organizations.
                - 'tags' (List[str]): A list of tags associated with the organization.

    Raises:
        ValidationError: If the input data is invalid.
        OrganizationAlreadyExistsError: If an organization with the given ID already exists.
    """
    from zendesk.Organizations import create_organization
    return create_organization(
        name=company_legal_name,
        industry=business_sector,
        location=main_office_location,
        domain_names=associated_web_domains,
        external_id=external_system_ref_id,
        group_id=primary_support_group_id,
        notes=internal_company_notes,
        details=public_company_profile,
        shared_tickets=enable_inter_org_ticket_sharing,
        shared_comments=allow_cross_user_ticket_comments,
        tags=organization_classifier_tags,
        organization_fields=custom_organization_data_fields
    )


def get_all_organizations():
    """
    Lists all organizations in the database.

    Returns a list of all organizations in the database.

    Returns:
        List[Dict[str, Any]]: A list of dictionaries containing organization details.
            Each dictionary can include the following keys:
            - 'id' (int): The unique identifier for the organization.
            - 'name' (str): The name of the organization.
            - 'industry' (Optional[str]): The industry of the organization.
            - 'location' (Optional[str]): The location of the organization.
            - 'domain_names' (Optional[List[str]]): A list of domain names associated with the organization.
            - 'external_id' (Optional[str]): A unique external identifier for the organization.
            - 'group_id' (Optional[int]): The ID of the group that the organization belongs to.
            - 'notes' (Optional[str]): Notes about the organization.
            - 'details' (Optional[str]): Any details about the organization, such as the address.
            - 'shared_tickets' (Optional[bool]): Whether tickets from this organization are shared with other organizations.
            - 'shared_comments' (Optional[bool]): Whether end users in this organization can comment on each other's tickets.
            - 'tags' (Optional[List[str]]): A list of tags associated with the organization.
            - 'organization_fields' (Optional[Dict[str, Any]]): Custom fields for this organization.
            - 'created_at' (str): The time the organization was created.
            - 'updated_at' (str): The time of the last update of the organization.
            - 'url' (str): The API url of this organization.
    """
    from zendesk.Organizations import list_organizations
    return list_organizations()


def fetch_organization_by_id(target_org_id):
    """
    Shows details of a specific organization.

    Returns the details of an organization based on its unique identifier.

    Args:
        target_org_id (int): The unique identifier for the organization.

    Returns:
        Dict[str, Any]: A dictionary containing the organization details which can include the following keys:
            - 'id' (int): The unique identifier for the organization.
            - 'name' (str): The name of the organization.
            - 'industry' (Optional[str]): The industry of the organization.
            - 'location' (Optional[str]): The location of the organization.
            - 'domain_names' (Optional[List[str]]): A list of domain names associated with the organization.
            - 'external_id' (Optional[str]): A unique external identifier for the organization.
            - 'group_id' (Optional[int]): The ID of the group that the organization belongs to.
            - 'notes' (Optional[str]): Notes about the organization.
            - 'details' (Optional[str]): Any details about the organization, such as the address.
            - 'shared_tickets' (Optional[bool]): Whether tickets from this organization are shared with other organizations.
            - 'shared_comments' (Optional[bool]): Whether end users in this organization can comment on each other's tickets.
            - 'tags' (Optional[List[str]]): A list of tags associated with the organization.
            - 'organization_fields' (Optional[Dict[str, Any]]): Custom fields for this organization.
            - 'created_at' (str): The time the organization was created.
            - 'updated_at' (str): The time of the last update of the organization.
            - 'url' (str): The API url of this organization.
    Raises:
        TypeError: If the organization ID is not an integer.
        OrganizationNotFoundError: If the organization ID does not exist.
    """
    from zendesk.Organizations import show_organization
    return show_organization(organization_id=target_org_id)


def modify_organization_details(
    target_organization_identifier,
    updated_company_name=None,
    revised_domain_list=None,
    new_external_reference_id=None,
    updated_support_group_id=None,
    revised_internal_notes=None,
    updated_public_profile=None,
    new_ticket_sharing_policy=None,
    new_comment_sharing_policy=None,
    updated_organization_tags=None,
    modified_custom_data_fields=None
):
    """
    Updates an existing organization.

    Updates the details of an organization based on its unique identifier.

    Args:
        target_organization_identifier (int): The unique identifier for the organization.
        updated_company_name (Optional[str]): The new name of the organization. Defaults to None.
        revised_domain_list (Optional[List[str]]): A list of domain names associated with the organization. Defaults to None.
        new_external_reference_id (Optional[str]): A unique external identifier for the organization. Defaults to None.
        updated_support_group_id (Optional[int]): The ID of the group that the organization belongs to. Defaults to None.
        revised_internal_notes (Optional[str]): Notes about the organization. Defaults to None.
        updated_public_profile (Optional[str]): Any details about the organization, such as the address. Defaults to None.
        new_ticket_sharing_policy (Optional[bool]): Whether tickets from this organization are shared with other organizations. Defaults to None.
        new_comment_sharing_policy (Optional[bool]): Whether end users in this organization can comment on each other's tickets. Defaults to None.
        updated_organization_tags (Optional[List[str]]): A list of tags associated with the organization. Defaults to None.
        modified_custom_data_fields (Optional[Dict[str, Any]]): Custom fields for this organization. Defaults to None.

    Returns:
        Dict[str, Any]: A dictionary indicating the success status and organization details.
            - 'success' (bool): True
            - 'organization' (Dict[str, Any]): The updated organization details.
                - 'id' (int): The unique identifier for the organization.
                - 'name' (str): The name of the organization.
                - 'industry' (str): The industry of the organization.
                - 'location' (str): The location of the organization.
                - 'domain_names' (List[str]): A list of domain names associated with the organization.
                - 'external_id' (Optional[str]): A unique external identifier for the organization.
                - 'group_id' (Optional[int]): The ID of the group that the organization belongs to.
                - 'notes' (Optional[str]): Notes about the organization.
                - 'shared_tickets' (Optional[bool]): Whether tickets from this organization are shared with other organizations.
                - 'tags' (List[str]): A list of tags associated with the organization.
    Raises:
        OrganizationNotFoundError: If the organization ID does not exist.
        TypeError: If the updated_company_name is not a string or the domain names are not a list of strings.
    """
    from zendesk.Organizations import update_organization
    return update_organization(
        organization_id=target_organization_identifier,
        name=updated_company_name,
        domain_names=revised_domain_list,
        external_id=new_external_reference_id,
        group_id=updated_support_group_id,
        notes=revised_internal_notes,
        details=updated_public_profile,
        shared_tickets=new_ticket_sharing_policy,
        shared_comments=new_comment_sharing_policy,
        tags=updated_organization_tags,
        organization_fields=modified_custom_data_fields
    )


def remove_organization_record(organization_id_to_delete):
    """
    Deletes an existing organization.

    Deletes an organization based on its unique identifier.

    Args:
        organization_id_to_delete (int): The unique identifier for the organization.

    Returns:
        Dict[str, Any]: A dictionary containing deleted organization
            - 'id' (int): The unique identifier for the organization.
            - 'name' (str): The name of the organization.
            - 'industry' (Optional[str]): The industry of the organization.
            - 'location' (Optional[str]): The location of the organization.
            - 'domain_names' (Optional[List[str]]): A list of domain names associated with the organization.
            - 'external_id' (Optional[str]): A unique external identifier for the organization.
            - 'group_id' (Optional[int]): The ID of the group that the organization belongs to.
            - 'notes' (Optional[str]): Notes about the organization.
            - 'shared_tickets' (Optional[bool]): Whether tickets from this organization are shared with other organizations.
            - 'tags' (Optional[List[str]]): A list of tags associated with the organization.
    Raises:
        TypeError: If the organization ID is not an integer.
        OrganizationNotFoundError: If the organization ID does not exist.
    """
    from zendesk.Organizations import delete_organization
    return delete_organization(organization_id=organization_id_to_delete)
