# This file is automatically generated by the MutationBuilder

def add_payment_transaction_to_order(target_order_id, new_transaction_details):
    """
    This function creates a new transaction for a specified order. This can be used to record
    payments (such as 'sale' or 'capture') or authorizations. The details of the transaction,
    including its kind, amount, and optionally the gateway, are provided within the `transaction`
    dictionary.

    The function performs comprehensive financial validation including: validates capture amounts 
    against authorization limits, prevents over-refunding by checking transaction history, enforces 
    proper transaction state transitions (e.g., can't void captured authorizations), automatically 
    updates order financial status based on transaction outcomes, and manages customer gift card 
    balance updates for manual gateway refunds (gift card refunds automatically credit the customer's 
    gift card balance).

    Args:
        target_order_id (str): The ID of the order for which to create a transaction. This is a path parameter.
        new_transaction_details (Dict[str, Any]): The transaction object to be created. This dictionary can include
            various fields as defined by the Shopify Transaction API. Key fields include:
            amount (str): The amount of the transaction. (Required)
            kind (str): The kind of transaction: 'authorization', 'capture', 'sale', 'void', or 'refund'. (Required)
            gateway (Optional[str]): (Optional for some kinds like capture/void if parent_id is used)
                The payment gateway used. For manual payments, can be 'manual'.
            parent_id (Optional[str]): (Optional) The ID of an existing transaction to explicitly
                void or capture.
            currency (Optional[str]): (Optional) The currency (ISO 4217 format) of the transaction.
                Defaults to order currency.
            test (Optional[bool]): (Optional) Whether this is a test transaction. Default: false.
            authorization (Optional[str]): (Optional) The authorization code, for external gateways
                when kind is 'sale' or 'authorization'.
            target_payment_method_id (Optional[str]): (Optional) The ID of the target payment method for cross-payment method refunds.
            Additional properties as per Shopify Transaction API documentation are allowed.

    Returns:
        Dict[str, Any]: A dictionary representing the newly created transaction. It contains the
            following keys:
            id (str): The unique identifier for the transaction.
            order_id (str): The ID of the order this transaction belongs to.
            kind (str): The kind of transaction (e.g., "capture", "sale", "authorization", "void", "refund").
            gateway (str): The payment gateway used.
            status (str): The status of the transaction (e.g., "success", "failure", "pending", "error").
            message (Optional[str]): A message from the payment gateway, if any.
            created_at (str): The ISO 8601 timestamp of creation.
            test (bool): Indicates if this was a test transaction.
            authorization (Optional[str]): The authorization code from the payment gateway.
            amount (str): The amount of the transaction.
            currency (str): The currency of the transaction.
            processed_at (Optional[str]): The ISO 8601 timestamp when the transaction was processed.
            receipt (Optional[Dict[str, Any]]): Receipt details from the gateway. If present, its
                fields are:
                transaction_id (Optional[str]): Gateway-specific transaction ID.
                card_type (Optional[str]): Type of card used (e.g. Visa, Mastercard).
                card_last_four (Optional[str]): Last four digits of the credit card.
                error_code (Optional[str]): Gateway error code if the transaction failed.
                source_name (str): Source of the transaction (e.g., "web", "pos", "api").

    Raises:
        ShopifyNotFoundError: If the 'target_order_id' does not exist.
        ShopifyInvalidInputError: If the 'new_transaction_details' data is invalid (e.g., missing required
            fields like 'kind' or 'amount', or invalid 'kind').
        ShopifyPaymentError: If processing the new_transaction_details with the payment gateway fails (e.g.,
            insufficient funds, card declined).
        ValidationError: If input arguments fail validation.
    """
    from shopify.transactions import shopify_create_an_order_transaction
    return shopify_create_an_order_transaction(
        order_id=target_order_id,
        transaction=new_transaction_details
    )
