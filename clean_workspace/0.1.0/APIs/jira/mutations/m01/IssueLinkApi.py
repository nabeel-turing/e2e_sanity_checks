# This file is automatically generated by the MutationBuilder

def establish_ticket_relationship(relationship_type, source_ticket, destination_ticket):
    """
    Create a new issue link in Jira.
    This method creates a new issue link between two issues. The link will be
    assigned a unique ID and stored in the system. Both issues must exist in
    the database for the link to be created successfully.

    Args:
        relationship_type (str): The type of issue link to create. Must be a non-empty string.
        source_ticket (Dict[str, Any]): The inward issue reference containing:
            - key (str): The key of the inward issue. Must be a non-empty string.
        destination_ticket (Dict[str, Any]): The outward issue reference containing:
            - key (str): The key of the outward issue. Must be a non-empty string.
    Returns:
        Dict[str, Any]: A dictionary containing the created issue link:
            - created (bool): Always True for successful creation
            - issueLink (Dict[str, Any]): The created issue link containing:
                - id (str): The unique ID of the issue link
                - type (str): The type of issue link
                - inwardIssue (Dict[str, Any]): The inward issue reference
                    - key (str): The key of the inward issue
                - outwardIssue (Dict[str, Any]): The outward issue reference
                    - key (str): The key of the outward issue
    Raises:
        ValidationError: If the input data structure is invalid according to the Pydantic model.
        IssueNotFoundError: If either the inward or outward issue does not exist in the database.
    """
    from jira.IssueLinkApi import create_issue_link
    return create_issue_link(
        type=relationship_type,
        inwardIssue=source_ticket,
        outwardIssue=destination_ticket
    )
