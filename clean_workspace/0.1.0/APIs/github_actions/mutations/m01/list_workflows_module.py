# This file is automatically generated by the MutationBuilder

def fetch_repository_workflows(
    repository_owner_login,
    repository_name,
    pagination_page_number=1,
    results_per_page_count=30
):
    """
    List workflows in a GitHub repository.

    This function lists workflows in a GitHub repository. It allows for pagination
    to retrieve workflows in chunks.

    Args:
        repository_owner_login (str): The account owner of the repository. The name is not case sensitive.
        repository_name (str): The name of the repository without the .git extension. The name is not case sensitive.
        pagination_page_number (Optional[int]): Page number of the results to fetch. Defaults to 1.
        results_per_page_count (Optional[int]): The number of results per page (max 100). Defaults to 30.

    Returns:
        Dict[str, Any]: A dictionary containing a list of workflows and pagination information. It includes the following keys:
            total_count (int): The total number of workflows matching the query.
            workflows (List[Dict[str, Any]]): A list of workflow objects. Each workflow object in this list contains the following fields:
                id (int): Unique identifier of the workflow.
                node_id (str): A globally unique identifier for the workflow.
                name (str): The name of the workflow.
                path (str): The path of the workflow file relative to the repository root.
                state (str): The state of the workflow (e.g., 'active', 'deleted', 'disabled_fork', 'disabled_inactivity', 'disabled_manually').
                created_at (str): Timestamp of when the workflow was created (ISO 8601 format).
                updated_at (str): Timestamp of when the workflow was last updated (ISO 8601 format).

    Raises:
        NotFoundError: If the specified repository_owner_login or repository does not exist.
        InvalidInputError: If pagination parameters like 'pagination_page_number' or 'results_per_page_count' are invalid.
    """
    from github_actions.list_workflows_module import list_workflows
    return list_workflows(
        owner=repository_owner_login,
        repo=repository_name,
        page=pagination_page_number,
        per_page=results_per_page_count
    )
