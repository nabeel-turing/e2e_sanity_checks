# This file is automatically generated by the MutationBuilder

def retrieve_workflow_details(repo_account_holder, target_repository_name, workflow_identifier):
    """
    Get details of a specific workflow.

    Gets details of a specific workflow.

    Args:
        repo_account_holder (str): The owner of the repository.
        target_repository_name (str): The name of the repository.
        workflow_identifier (str): The identifier of the workflow.
                             This can be the workflow's integer ID (as a string)
                             or its filename (e.g., "main.yml" or ".github/workflows/main.yml").

    Returns:
        Dict[str, Any]: A dictionary containing details of the workflow with the following keys:
            id (int): Unique identifier of the workflow.
            node_id (str): A globally unique identifier for the workflow.
            name (str): The name of the workflow.
            path (str): The path of the workflow file relative to the repository root.
            state (str): The state of the workflow (e.g., 'active', 'deleted', 'disabled_fork', 'disabled_inactivity', 'disabled_manually').
            created_at (str): Timestamp of when the workflow was created (ISO 8601 format).
            updated_at (str): Timestamp of when the workflow was last updated (ISO 8601 format).

    Raises:
        InvalidInputError: If repo_account_holder, target_repository_name, or workflow_identifier is empty or consists only of whitespace.
        NotFoundError: If the specified repo_account_holder, repository, or workflow ID does not exist.
    """
    from github_actions.get_workflow_module import get_workflow
    return get_workflow(
        owner=repo_account_holder,
        repo=target_repository_name,
        workflow_id=workflow_identifier
    )
