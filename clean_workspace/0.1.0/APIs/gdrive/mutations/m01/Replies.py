# This file is automatically generated by the MutationBuilder

def add_reply_to_comment(file_id_of_target_comment, parent_comment_id, reply_content_and_author):
    """
    Creates a reply to a comment.

    Args:
        file_id_of_target_comment (str): The ID of the file.
        parent_comment_id (str): The ID of the comment.
        reply_content_and_author (Dict[str, Any]): Dictionary containing the reply details with keys:
            - 'content' (str): The content of the reply.
            - 'author' Optional[Dict[str, str]]: Information about the author with keys:
                - 'displayName' (str): The author's display name.
                - 'emailAddress' (str): The author's email address.
                - 'photoLink' (str): A link to the author's profile photo.

    Returns:
        Dict[str, Any]: Dictionary containing the created reply with keys:
            - 'kind' (str): Resource type identifier (e.g., 'drive#reply').
            - 'id' (str): The ID of the reply.
            - 'fileId' (str): The ID of the file.
            - 'commentId' (str): The ID of the comment.
            - 'content' (str): The content of the reply.
            - 'createdTime' (str): The time the reply was created.
            - 'modifiedTime' (str): The time the reply was last modified.
            - 'author' (Dict[str, str]): Information about the author with keys:
                - 'displayName' (str): The author's display name.
                - 'emailAddress' (str): The author's email address.
                - 'photoLink' (str): A link to the author's profile photo.
            - 'deleted' (bool): Whether the reply has been deleted.

    Raises:
        TypeError: If 'file_id_of_target_comment' or 'parent_comment_id' are not strings, or if 'reply_content_and_author' is provided and is not a dictionary.
        ValidationError: If 'reply_content_and_author' is provided and does not conform to the expected structure
                                  (e.g., missing 'content' or 'author', or 'author' has incorrect format).
        ValueError: If 'reply_content_and_author' is None.
    """
    from gdrive.Replies import create
    return create(
        fileId=file_id_of_target_comment,
        commentId=parent_comment_id,
        body=reply_content_and_author
    )


def remove_reply_from_comment(file_id_with_reply, comment_id_with_reply, reply_id_to_delete):
    """
    Deletes a reply.

    Args:
        file_id_with_reply (str): The ID of the file.
        comment_id_with_reply (str): The ID of the comment.
        reply_id_to_delete (str): The ID of the reply to delete.
    """
    from gdrive.Replies import delete
    return delete(
        fileId=file_id_with_reply,
        commentId=comment_id_with_reply,
        replyId=reply_id_to_delete
    )


def fetch_comment_reply_by_id(
    target_file_of_reply_id,
    target_comment_of_reply_id,
    reply_identifier_to_fetch,
    show_deleted_reply=False
):
    """
    Gets a reply by ID from a comment on a file.

    This function retrieves a specific reply to a comment on a Google Drive file.
    Deleted replies are excluded by default unless explicitly requested.

    Args:
        target_file_of_reply_id (str): The ID of the file.
        target_comment_of_reply_id (str): The ID of the comment.
        reply_identifier_to_fetch (str): The ID of the reply to retrieve.
        show_deleted_reply (bool): Whether to include deleted replies in the response.
            Defaults to False. When False, deleted replies return None.

    Returns:
        Optional[Dict[str, Any]]: Dictionary containing the reply details with keys:
            - 'kind' (str): Resource type identifier ('drive#reply').
            - 'id' (str): The ID of the reply.
            - 'fileId' (str): The ID of the file.
            - 'commentId' (str): The ID of the comment.
            - 'content' (str): The content of the reply.
            - 'createdTime' (str): The time the reply was created (RFC3339 format).
            - 'modifiedTime' (str): The time the reply was last modified (RFC3339 format).
            - 'author' (Dict[str, str]): Information about the author with keys:
                - 'displayName' (str): The author's display name.
                - 'emailAddress' (str): The author's email address.
                - 'photoLink' (str): A link to the author's profile photo.
            - 'deleted' (bool): Whether the reply has been deleted.
        Returns None if the reply doesn't exist or is deleted and includeDeleted is False.

    Raises:
        TypeError: If target_file_of_reply_id, target_comment_of_reply_id, or reply_identifier_to_fetch are not strings, or if show_deleted_reply is not a boolean.
        ValidationError: If target_file_of_reply_id, target_comment_of_reply_id, or reply_identifier_to_fetch are empty strings.
    """
    from gdrive.Replies import get
    return get(
        fileId=target_file_of_reply_id,
        commentId=target_comment_of_reply_id,
        replyId=reply_identifier_to_fetch,
        includeDeleted=show_deleted_reply
    )


def enumerate_comment_replies(
    file_id_for_reply_listing,
    comment_id_for_reply_listing,
    include_deleted_replies_in_list=False,
    replies_per_page=20,
    reply_list_page_cursor=''
):
    """
    Lists a comment's replies.

    Args:
        file_id_for_reply_listing (str): The ID of the file. Must not be empty.
        comment_id_for_reply_listing (str): The ID of the comment. Must not be empty.
        include_deleted_replies_in_list (Optional[bool]): Whether to include deleted replies. Defaults to False.
        replies_per_page (Optional[int]): Maximum number of replies to return per page. Must be positive. Defaults to 20.
        reply_list_page_cursor (Optional[str]): Token for the next page of results. Defaults to an empty string.

    Returns:
        Dict[str, Any]: Dictionary containing the list of replies with keys:
            - kind (str): Resource type identifier (e.g., 'drive#replyList').
            - replies (List[Dict[str, Any]]): List of reply objects with keys:
                - kind (str): Resource type identifier (e.g., 'drive#reply').
                - id (str): The ID of the reply.
                - fileId (str): The ID of the file.
                - commentId (str): The ID of the comment.
                - content (str): The content of the reply.
                - createdTime (str): The time the reply was created.
                - modifiedTime (str): The time the reply was last modified.
                - author (Dict[str, str]): Information about the author with keys:
                    - displayName (str): The author's display name.
                    - emailAddress (str): The author's email address.
                    - photoLink (str): A link to the author's profile photo.
                    - kind (str): Resource type identifier (e.g., 'drive#user').
                    - me (bool): Whether the author is the current user.
                    - permissionId (str): The ID of the permission associated with the author.
                - deleted (bool): Whether the reply has been deleted.
                - htmlContent (str): The content of the reply with HTML formatting.
                - action (str): The action the reply performed to the parent comment.
            - nextPageToken (str): Token for the next page of results.

    Raises:
        TypeError: If any input is not of the correct type.
        ValidationError: If any input is given invalid values.
    """
    from gdrive.Replies import list
    return list(
        fileId=file_id_for_reply_listing,
        commentId=comment_id_for_reply_listing,
        includeDeleted=include_deleted_replies_in_list,
        pageSize=replies_per_page,
        pageToken=reply_list_page_cursor
    )


def edit_comment_reply(reply_file_id, reply_comment_id, reply_id_to_update, updated_reply_data=None):
    """
    Updates a reply.

    Args:
        reply_file_id (str): The ID of the file.
        reply_comment_id (str): The ID of the comment.
        reply_id_to_update (str): The ID of the reply to update.
        updated_reply_data (Optional[Dict[str, Any]]): Dictionary containing the updated reply details with keys:
            - 'content' (str): The updated content of the reply.
            - 'author' (Dict[str, str]): Updated information about the author with keys:
                - 'displayName' (str): The author's display name.
                - 'emailAddress' (str): The author's email address.
                - 'photoLink' (str): A link to the author's profile photo.

    Returns:
        Optional[Dict[str, Any]]: Dictionary containing the updated reply with keys:
            - 'kind' (str): Resource type identifier (e.g., 'drive#reply').
            - 'id' (str): The ID of the reply.
            - 'fileId' (str): The ID of the file.
            - 'commentId' (str): The ID of the comment.
            - 'content' (str): The content of the reply.
            - 'createdTime' (str): The time the reply was created.
            - 'modifiedTime' (str): The time the reply was last modified.
            - 'author' (Dict[str, str]): Information about the author with keys:
                - 'displayName' (str): The author's display name.
                - 'emailAddress' (str): The author's email address.
                - 'photoLink' (str): A link to the author's profile photo.
            - 'deleted' (bool): Whether the reply has been deleted.
    """
    from gdrive.Replies import update
    return update(
        fileId=reply_file_id,
        commentId=reply_comment_id,
        replyId=reply_id_to_update,
        body=updated_reply_data
    )
