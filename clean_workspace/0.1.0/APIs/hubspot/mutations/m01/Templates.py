# This file is automatically generated by the MutationBuilder

def list_all_design_templates(
    max_results_per_page=20,
    starting_page_offset=0,
    filter_by_deletion_timestamp=None,
    filter_by_unique_template_id=None,
    filter_by_content_availability=None,
    filter_by_template_display_name=None,
    filter_by_template_file_path=None
):
    """
    Get all templates. Supports paging and filtering.

    Args:
        max_results_per_page (Optional[int]): The maximum number of templates to return. Default is 20.
        starting_page_offset (Optional[int]): The offset of the first template to return. Default is 0.
        filter_by_deletion_timestamp (Optional[str]): Filter by deletion timestamp in milliseconds since epoch.
        filter_by_unique_template_id (Optional[str]): Filter by template ID.
        filter_by_content_availability (Optional[str]): Filter by availability for new content.
        filter_by_template_display_name (Optional[str]): Filter by template label.
        filter_by_template_file_path (Optional[str]): Filter by template path.

    Returns:
        List[Dict[str, Any]]: A list of template dictionaries. Each template has the following structure:
            - id (str): Unique identifier for the template.
            - category_id (int): Category type (0: Unmapped, 1: Landing Pages, 2: Email, 3: Blog Post, 4: Site Page).
            - folder (str): The folder where the template is saved.
            - template_type (int): Type of template (2: Email, 4: Page, 11: Error, etc.).
            - source (str): The source code of the template.
            - path (str): The path where the template is saved.
            - created (str): Creation timestamp in milliseconds since epoch.
            - deleted_at (str, optional): Deletion timestamp in milliseconds since epoch.
            - is_available_for_new_content (bool): Whether the template is available for new content.
            - archived (bool): Whether the template is archived.
            - versions (List[Dict[str, str]]): List of template versions.
                - source (str): The source code of this version.
                - version_id (str): The version identifier.
    """
    from hubspot.Templates import get_templates
    return get_templates(
        limit=max_results_per_page,
        offset=starting_page_offset,
        deleted_at=filter_by_deletion_timestamp,
        id=filter_by_unique_template_id,
        is_available_for_new_content=filter_by_content_availability,
        label=filter_by_template_display_name,
        path=filter_by_template_file_path
    )


def add_new_coded_template(
    template_html_source,
    custom_creation_timestamp=None,
    design_template_kind=2,
    template_content_category=2,
    destination_storage_folder='/templates/',
    new_template_file_path='/home/templates/',
    mark_as_available_for_new_content=False
):
    """
    Create a new coded template object in Design Manager.

    Args:
        template_html_source (str): The source code of the template.
        custom_creation_timestamp (Optional[str]): The creation date in milliseconds since epoch. Defaults to current time.
        design_template_kind (Optional[int]): The type of template to create. Defaults to 2 (Email template).
            Valid values:
            - 2: Email template
            - 4: Page template
            - 11: Error template
            - 12: Subscription preferences template
            - 13: Backup unsubscribe page template
            - 14: Subscriptions update confirmation template
            - 19: Password prompt page template
            - 27: Search results template
            - 29: Membership login template
            - 30: Membership registration template
            - 31: Membership reset password confirmation template
            - 32: Membership reset password request template
        template_content_category (Optional[int]): The category type. Defaults to 2 (Email).
            Valid values:
            - 0: Unmapped
            - 1: Landing Pages
            - 2: Email
            - 3: Blog Post
            - 4: Site Page
        destination_storage_folder (Optional[str]): The folder to save the template. Defaults to '/templates/'.
        new_template_file_path (Optional[str]): The path to save the template. Defaults to '/home/templates/'.
        mark_as_available_for_new_content (Optional[bool]): Whether the template should be available for new content. Defaults to False.

    Returns:
        Dict[str, Any]: The created template with the following structure:
            - id (str): Unique identifier for the template.
            - category_id (int): Category type.
            - folder (str): The folder where the template is saved.
            - template_type (int): Type of template.
            - source (str): The source code of the template.
            - path (str): The path where the template is saved.
            - created (str): Creation timestamp in milliseconds since epoch.
            - deleted_at (str, optional): Deletion timestamp in milliseconds since epoch.
            - is_available_for_new_content (bool): Whether the template is available for new content.
            - archived (bool): Whether the template is archived.
            - versions (List[Dict[str, str]]): List of template versions.
                - source (str): The source code of this version.
                - version_id (str): The version identifier.
    """
    from hubspot.Templates import create_template
    return create_template(
        source=template_html_source,
        created=custom_creation_timestamp,
        template_type=design_template_kind,
        category_id=template_content_category,
        folder=destination_storage_folder,
        path=new_template_file_path,
        is_available_for_new_content=mark_as_available_for_new_content
    )


def fetch_template_by_identifier(specific_template_id):
    """
    Get a specific template by ID.

    Args:
        specific_template_id (str): The unique identifier of the template.

    Returns:
        Dict[str, Any]: The template with the following structure:
            - id (str): Unique identifier for the template.
            - category_id (int): Category type.
            - folder (str): The folder where the template is saved.
            - template_type (int): Type of template.
            - source (str): The source code of the template.
            - path (str): The path where the template is saved.
            - created (str): Creation timestamp in milliseconds since epoch.
            - deleted_at (str, optional): Deletion timestamp in milliseconds since epoch.
            - is_available_for_new_content (bool): Whether the template is available for new content.
            - archived (bool): Whether the template is archived.
            - versions (List[Dict[str, str]]): List of template versions.
                - source (str): The source code of this version.
                - version_id (str): The version identifier.
    """
    from hubspot.Templates import get_template_by_id
    return get_template_by_id(template_id=specific_template_id)


def modify_template_by_identifier(
    template_identifier_for_update,
    new_template_category_id=None,
    new_template_folder=None,
    new_design_template_type=None,
    updated_template_source_code=None,
    revised_template_file_path=None,
    updated_creation_time=None,
    new_deletion_timestamp=None,
    updated_content_availability_status=None,
    new_archived_status=None,
    new_template_version_list=None
):
    """
    Updates a template. If not all the fields are included in the body, we will only update the included fields.

    Args:
        template_identifier_for_update (str): Unique identifier for the template.
        new_template_category_id (Optional[int]): Category type (0: Unmapped, 1: Landing Pages, 2: Email, 3: Blog Post, 4: Site Page).
        new_template_folder (Optional[str]): The folder where the template is saved.
        new_design_template_type (Optional[int]): Type of template (2: Email, 4: Page, 11: Error, etc.).
        updated_template_source_code (Optional[str]): The source code of the template.
        revised_template_file_path (Optional[str]): The path where the template is saved.
        updated_creation_time (Optional[str]): Creation timestamp in milliseconds since epoch.
        new_deletion_timestamp (Optional[str]): Deletion timestamp in milliseconds since epoch.
        updated_content_availability_status (Optional[bool]): Whether the template is available for new content.
        new_archived_status (Optional[bool]): Whether the template is archived.
        new_template_version_list (Optional[List[Dict[str, str]]]): List of template versions.
            Each version should have:
            - source (str): The source code of this version.
            - version_id (str): The version identifier.

    Returns:
        Dict[str, Any]: The updated template with the following structure:
            - id (str): Unique identifier for the template.
            - category_id (int): Category type.
            - folder (str): The folder where the template is saved.
            - template_type (int): Type of template.
            - source (str): The source code of the template.
            - path (str): The path where the template is saved.
            - created (str): Creation timestamp in milliseconds since epoch.
            - deleted_at (str, optional): Deletion timestamp in milliseconds since epoch.
            - is_available_for_new_content (bool): Whether the template is available for new content.
            - archived (bool): Whether the template is archived.
            - versions (List[Dict[str, str]]): List of template versions.
                - source (str): The source code of this version.
                - version_id (str): The version identifier.

        If template is not found, returns:
            - error (str): Error message.
    """
    from hubspot.Templates import update_template_by_id
    return update_template_by_id(
        template_id=template_identifier_for_update,
        category_id=new_template_category_id,
        folder=new_template_folder,
        template_type=new_design_template_type,
        source=updated_template_source_code,
        path=revised_template_file_path,
        created=updated_creation_time,
        deleted_at=new_deletion_timestamp,
        is_available_for_new_content=updated_content_availability_status,
        archived=new_archived_status,
        versions=new_template_version_list
    )


def mark_template_as_deleted(template_id_for_deletion, specified_deletion_timestamp=None):
    """
    Marks the selected Template as deleted. The Template can be restored later via a POST to the restore-deleted endpoint.

    Args:
        template_id_for_deletion (str): Unique identifier for the template.
        specified_deletion_timestamp (Optional[str]): Timestamp in milliseconds since epoch of when the template was deleted.
            If not provided, current timestamp will be used.

    Returns:
        None
    """
    from hubspot.Templates import delete_template_by_id
    return delete_template_by_id(
        template_id=template_id_for_deletion,
        deleted_at=specified_deletion_timestamp
    )


def recover_archived_template(deleted_template_id_for_restore):
    """
    Restores a previously deleted Template.

    Args:
        deleted_template_id_for_restore (str): Unique identifier for the template.

    Returns:
        Dict[str, Any]: The restored template with the following structure:
            - id (str): Unique identifier for the template.
            - category_id (int): Category type.
            - folder (str): The folder where the template is saved.
            - template_type (int): Type of template.
            - source (str): The source code of the template.
            - path (str): The path where the template is saved.
            - created (str): Creation timestamp in milliseconds since epoch.
            - deleted_at (str, optional): Set to None after restoration.
            - is_available_for_new_content (bool): Whether the template is available for new content.
            - archived (bool): Whether the template is archived.
            - versions (List[Dict[str, str]]): List of template versions.
                - source (str): The source code of this version.
                - version_id (str): The version identifier.

        If template is not found, returns:
            - error (str): Error message.
    """
    from hubspot.Templates import restore_deleted_template
    return restore_deleted_template(template_id=deleted_template_id_for_restore)
