# This file is automatically generated by the MutationBuilder

def compose_new_promotional_email(
    internal_email_title,
    email_recipient_subject_line=None,
    email_body_html_content=None,
    mark_as_transactional_email=False,
    initial_email_sending_status=None,
    promotional_discount_code=None,
    offer_validity_date=None,
    product_announcement_date=None,
    special_offer_end_date=None,
    customer_loyalty_points=None,
    exclusive_offer_access_code=None
):
    """
    Creates a new marketing email.

    Args:
        internal_email_title(str): The internal name of the email (required).
        email_recipient_subject_line(Optional[str]): The email subject line. Default is None.
        email_body_html_content(Optional[str]): The HTML body of the email. Default is None.
        mark_as_transactional_email(Optional[bool]): Whether this is a transactional email. Default is False.
        initial_email_sending_status(Optional[str]): The status of the email (e.g. 'scheduled', 'sent'). Default is None.
        promotional_discount_code(Optional[str]): Discount code for promotional emails. Default is None.
        offer_validity_date(Optional[str]): Expiration date for time-limited offers. Default is None.
        product_announcement_date(Optional[str]): Launch date for product announcements. Default is None.
        special_offer_end_date(Optional[str]): End date for sales promotions. Default is None.
        customer_loyalty_points(Optional[int]): Number of reward points for loyalty program emails. Default is None.
        exclusive_offer_access_code(Optional[str]): Access code for VIP or exclusive offers. Default is None.

    Returns:
        Dict[str, Any]: A dictionary containing the new email's ID and a success message, or an error message.
        - email_id(str): The unique ID of the marketing email.
        - success(bool): Whether the email was created successfully.
        - message(str): A message indicating the success or failure of the email creation.
    """
    from hubspot.MarketingEmails import create
    return create(
        name=internal_email_title,
        subject=email_recipient_subject_line,
        htmlBody=email_body_html_content,
        isTransactional=mark_as_transactional_email,
        status=initial_email_sending_status,
        discount_code=promotional_discount_code,
        expiration=offer_validity_date,
        launch_date=product_announcement_date,
        sale_end_date=special_offer_end_date,
        reward_points=customer_loyalty_points,
        access_code=exclusive_offer_access_code
    )


def retrieve_promotional_email_by_id(marketing_email_unique_id):
    """
    Retrieves a marketing email by its ID.
    Args:
        marketing_email_unique_id(str): The unique ID of the marketing email (required).

    Returns:
        Optional[Dict[str, Any]]: The marketing email object if found, or None if not found.
            - email_id(str): The unique ID of the marketing email.
            - name(str): The internal name of the email.
            - subject(str): The email subject line.
            - htmlBody(str): The HTML body of the email.
            - isTransactional(bool): Whether the email is transactional.
            - status(str): The status of the email (e.g. 'scheduled', 'sent').
            - discount_code(str): Discount code for promotional emails.
            - expiration(str): Expiration date for time-limited offers.
            - launch_date(str): Launch date for product announcements.
            - sale_end_date(str): End date for sales promotions.
            - reward_points(int): Number of reward points for loyalty program emails.
            - access_code(str): Access code for VIP or exclusive offers.
        None: If the email is not found.
    """
    from hubspot.MarketingEmails import getById
    return getById(email_id=marketing_email_unique_id)


def modify_promotional_email_content(
    email_identifier_to_update,
    new_internal_email_name=None,
    new_email_subject=None,
    new_email_html_body=None,
    new_transactional_status=None,
    new_email_delivery_status=None,
    new_promotional_code=None,
    new_offer_expiration_date=None,
    new_product_launch_date=None,
    new_sale_end_date=None,
    new_customer_reward_points=None,
    new_exclusive_access_code=None
):
    """
    Updates an existing marketing email.

    Args:
        email_identifier_to_update(str): The unique ID of the marketing email to update (required).
        new_internal_email_name(Optional[str]): The internal name of the email.
        new_email_subject(Optional[str]): The email subject line.
        new_email_html_body(Optional[str]): The HTML body of the email.
        new_transactional_status(Optional[bool]): Whether this is a transactional email.
        new_email_delivery_status(Optional[str]): The status of the email (e.g. 'scheduled', 'sent').
        new_promotional_code(Optional[str]): Discount code for promotional emails.
        new_offer_expiration_date(Optional[str]): Expiration date for time-limited offers.
        new_product_launch_date(Optional[str]): Launch date for product announcements.
        new_sale_end_date(Optional[str]): End date for sales promotions.
        new_customer_reward_points(Optional[int]): Number of reward points for loyalty program emails.
        new_exclusive_access_code(Optional[str]): Access code for VIP or exclusive offers.

    Returns:
        Dict[str, Any]: A dictionary indicating success or failure and a message.
        - success(bool): Whether the email was updated successfully.
        - message(str): A message indicating the success or failure of the email update.
    """
    from hubspot.MarketingEmails import update
    return update(
        email_id=email_identifier_to_update,
        name=new_internal_email_name,
        subject=new_email_subject,
        htmlBody=new_email_html_body,
        isTransactional=new_transactional_status,
        status=new_email_delivery_status,
        discount_code=new_promotional_code,
        expiration=new_offer_expiration_date,
        launch_date=new_product_launch_date,
        sale_end_date=new_sale_end_date,
        reward_points=new_customer_reward_points,
        access_code=new_exclusive_access_code
    )


def erase_promotional_email(email_identifier_to_delete):
    """
    Deletes a marketing email.

    Args:
        email_identifier_to_delete(str): The unique ID of the marketing email to delete (required).

    Returns:
        Dict[str, Any]: A dictionary indicating success or failure and a message.
            - success(bool): Whether the email was deleted successfully.
            - message(str): A message indicating the success or failure of the email deletion.
    """
    from hubspot.MarketingEmails import delete
    return delete(email_id=email_identifier_to_delete)


def duplicate_promotional_email(source_email_identifier, new_cloned_email_internal_name):
    """
    Clones an existing marketing email.

    Args:
        source_email_identifier(str): The ID of the marketing email to clone (required).
        new_cloned_email_internal_name(str): The name for the new, cloned email (required).

    Returns:
        Dict[str, Any]: A dictionary containing the new email's ID and a success message, or an error message.
            - email_id(str): The unique ID of the marketing email.
            - success(bool): Whether the email was cloned successfully.
            - message(str): A message indicating the success or failure of the email cloning.
    """
    from hubspot.MarketingEmails import clone
    return clone(email_id=source_email_identifier, name=new_cloned_email_internal_name)
