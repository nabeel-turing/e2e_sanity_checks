# This file is automatically generated by the MutationBuilder

def find_conversations(
    search_filter=None,
    max_chats_to_return=20,
    current_page_number=0,
    with_last_message_preview=True,
    sort_order_key='last_active'
):
    """
    Get WhatsApp chats matching specified criteria.

    This function retrieves WhatsApp chats based on specified criteria.
    These criteria include an optional search term to filter chats by name or
    JID, a limit on the maximum number of chats to return, a page number
    for pagination, an option to include the last message in each chat,
    and a field to sort results by (either "last_active" or "name").

    Args:
        search_filter (Optional[str]): Optional search term to filter chats by name or JID.
                               Defaults to None.
        max_chats_to_return (int): Maximum number of chats to return. Defaults to 20.
        current_page_number (int): Page number for pagination. Defaults to 0.
        with_last_message_preview (bool): Whether to include the last message in each chat.
                                     Defaults to True.
        sort_order_key (str): Field to sort results by, either "last_active" or "name".
                       Defaults to "last_active".

    Returns:
        Dict[str, Any]: A dictionary containing the list of chats and pagination
                        information. It has the following keys:
            chats (List[Dict[str, Any]]): A list of chat objects. Each chat object contains:
                chat_jid (str): The JID of the chat.
                name (Optional[str]): The name of the chat (e.g., contact name or group subject).
                is_group (bool): True if the chat is a group chat, false otherwise.
                last_active_timestamp (Optional[str]): ISO-8601 formatted timestamp of the last
                                                       activity in the chat.
                unread_count (Optional[int]): Number of unread messages in the chat for the
                                              current user.
                is_archived (bool): True if the chat is archived by the current user.
                is_pinned (bool): True if the chat is pinned by the current user.
                last_message_preview (Optional[Dict[str, Any]]): A preview of the last message
                                                                  in the chat, if `include_last_message`
                                                                  is true. Contains:
                    message_id (str): ID of the last message.
                    text_snippet (Optional[str]): A short snippet of the last message's text
                                                  content or a placeholder for media (e.g.,
                                                  "Photo", "Video").
                    sender_name (Optional[str]): Name of the sender of the last message.
                    timestamp (str): ISO-8601 formatted timestamp of the last message.
                    is_outgoing (bool): True if the last message was sent by the current user.
            total_chats (int): Total number of chats matching the criteria.
            page (int): Current page number.
            limit (int): Number of chats per page.

    Raises:
        InvalidSortByError: If the `sort_order_key` parameter is not one of the allowed values
                            (e.g., 'last_active', 'name').
        PaginationError: If the requested current_page_number number is out of the valid range for the search_filter.
        InvalidInputError: If input arguments fail validation.
    """
    from whatsapp.chats import list_chats
    return list_chats(
        query=search_filter,
        limit=max_chats_to_return,
        page=current_page_number,
        include_last_message=with_last_message_preview,
        sort_by=sort_order_key
    )


def get_conversation_details(conversation_identifier, retrieve_last_message_data=True):
    """
    Get WhatsApp chat metadata by JID.

    This function retrieves metadata for a WhatsApp chat identified by its
    Jabber Identifier (JID). It can also include the last message of the
    chat if specified.

    Args:
        conversation_identifier (str): The JID of the chat to retrieve.
        retrieve_last_message_data (bool): Whether to include the last message (default True).

    Returns:
        Dict[str, Any]: A dictionary containing detailed information about the
            specified chat. The dictionary includes the following keys:
            chat_jid (str): The JID of the chat.
            name (Optional[str]): The name of the chat (e.g., contact name or group subject).
            is_group (bool): True if the chat is a group chat, false otherwise.
            group_metadata (Optional[Dict[str, Any]]): Metadata specific to group chats,
                present if 'is_group' is true. If present, this dictionary contains
                the following keys:
                group_description (Optional[str]): The description of the group.
                creation_timestamp (Optional[str]): ISO-8601 formatted timestamp of
                    when the group was created.
                owner_jid (Optional[str]): JID of the group owner/creator.
                participants_count (int): Number of participants in the group.
                participants (List[Dict[str, Any]]): List of group participants.
                    Each dictionary in this list represents a participant and
                    contains the following keys:
                    jid (str): JID of the participant.
                    name_in_address_book (Optional[str]): Participant's name as
                        saved in the user's address book.
                    profile_name (Optional[str]): Participant's WhatsApp profile name.
                    is_admin (bool): True if the participant is a group admin.
            unread_count (Optional[int]): Number of unread messages in the chat
                for the current user.
            is_archived (bool): True if the chat is archived by the current user.
            is_muted_until (Optional[str]): ISO-8601 timestamp until which the chat
                is muted, or 'indefinitely' if muted permanently. Null if not muted.
            last_message (Optional[Dict[str, Any]]): The full last message in the
                chat, if 'include_last_message' is true. The structure of this
                dictionary is that of a standard message object.

    Raises:
        ChatNotFoundError: If no chat is found with the given `conversation_identifier`.
        InvalidJIDError: If the provided `conversation_identifier` is not in a valid JID format.
        InvalidInputError: If input arguments fail validation.
    """
    from whatsapp.chats import get_chat
    return get_chat(
        chat_jid=conversation_identifier,
        include_last_message=retrieve_last_message_data
    )


def fetch_direct_message_thread(user_phone_number):
    """
    Get WhatsApp chat metadata by sender phone number.

    This function retrieves metadata for a direct WhatsApp chat associated with a
    specific sender's phone number.

    Args:
        user_phone_number (str): The phone number to search for.

    Returns:
        Dict[str, Any]: A dictionary containing metadata for the direct chat. Fields include:
            chat_jid (str): The JID (Jabber ID) of the direct chat, typically in the format `sender_phone_number@s.whatsapp.net`.
            contact_jid (str): The JID of the contact in the chat.
            name (Optional[str]): The display name of the contact, as known by the current user (e.g., from address book or WhatsApp profile name).
            is_group (bool): Always `false` for direct chats, indicating it is not a group conversation.
            unread_count (Optional[int]): The number of unread messages in this chat for the authenticated user. Null if not applicable or no unread messages.
            is_archived (bool): `true` if the chat is currently archived by the authenticated user, `false` otherwise.
            is_muted_until (Optional[str]): An ISO-8601 formatted timestamp string indicating when the mute on this chat expires. Can be 'indefinitely' for permanent mutes. Null if the chat is not muted.
            last_message (Optional[Dict[str, Any]]): A dictionary representing the last message in the chat. Null if the chat is empty. The dictionary structure includes:
                message_id (str): Unique identifier for the message.
                chat_jid (str): JID of the chat this message belongs to.
                sender_jid (str): JID of the message sender.
                sender_name (Optional[str]): Display name of the sender.
                timestamp (str): ISO-8601 formatted timestamp of the message.
                text_content (Optional[str]): The textual content of the message.
                is_outgoing (bool): `true` if the message was sent by the authenticated user.
                media_info (Optional[Dict[str, Any]]): Metadata for any attached media. Fields include `media_type` (e.g., "image", "video"), `file_name`, and `caption`.
                quoted_message_info (Optional[Dict[str, Any]]): Metadata for a quoted message if this is a reply. Fields include `quoted_message_id`, `quoted_sender_jid`, and `quoted_text_preview`.
                reaction (Optional[str]): The emoji reaction on the message.
                status (Optional[str]): Delivery status of the message (e.g., 'sent', 'delivered', 'read').
                forwarded (Optional[bool]): `true` if the message was forwarded.
    Raises:
        ContactNotFoundError: If no contact or direct chat is found for the given `user_phone_number`.
        InvalidPhoneNumberError: If the provided `user_phone_number` is not a valid phone number format or does not belong to a WhatsApp user.
        InternalSimulationError: If there is an internal data consistency issue, such as when data fetched from the simulation's database fails validation against the expected data model.
    """
    from whatsapp.chats import get_direct_chat_by_contact
    return get_direct_chat_by_contact(sender_phone_number=user_phone_number)


def get_latest_message_with_contact(contact_jabber_identifier):
    """
    Gets the most recent WhatsApp message involving the contact.

    This function gets the most recent WhatsApp message that was either sent to
    or received from the contact specified by the JID.

    Args:
        contact_jabber_identifier (str): The JID of the contact to search for.

    Returns:
        Optional[Dict[str, Any]]: A dictionary containing details of the most recent
            message either sent to or received from the specified contact, or `None`
            if no interaction exists. If a message is found, the dictionary
            includes the following keys:
            message_id (str): The unique ID of the message.
            chat_jid (str): The JID of the chat this message belongs to.
            sender_jid (str): The JID of the message sender.
            sender_name (Optional[str]): The display name of the sender.
            timestamp (str): ISO-8601 formatted timestamp of when the message
                was sent or received.
            text_content (Optional[str]): The text content of the message, if any.
            is_outgoing (bool): True if the message was sent by the current user
                to the contact; false if received from the contact.
            media_info (Optional[Dict[str, Any]]): Details of attached media.
                Refer to the `media_info` structure defined in the
                `list_messages` method for its detailed fields.
            quoted_message_info (Optional[Dict[str, Any]]): Information about the
                quoted message. Refer to the `quoted_message_info` structure
                defined in the `list_messages` method for its detailed fields.

    Raises:
        ContactNotFoundError: If no contact is found with the given `contact_jabber_identifier`.
        InvalidJIDError: If the provided `contact_jabber_identifier` is not a valid JID format.
        InvalidParameterError: If input arguments fail validation.
        InternalSimulationError: If the data from the DB fails validation.
    """
    from whatsapp.chats import get_last_interaction
    return get_last_interaction(jid=contact_jabber_identifier)
