# This file is automatically generated by the MutationBuilder

def swap_items_from_completed_shipment(
    delivered_purchase_id,
    item_identifiers_for_exchange,
    new_item_identifiers_for_swap,
    payment_id_for_cost_adjustment
):
    """
    Exchange items in a delivered order to new items of the same product type.

    For a delivered order, return or exchange can be only done once by the agent.
    The agent needs to explain the exchange detail and ask for explicit user
    confirmation (yes/no) to proceed.

    Args:
        delivered_purchase_id (str): The order id, such as '#W0000000'. Be careful there is a '#'
            symbol at the beginning of the order id.
        item_identifiers_for_exchange (List[str]): The item ids to be exchanged, each such as '1008292230'.
            There could be duplicate items in the list.
        new_item_identifiers_for_swap (List[str]): The item ids to be exchanged for, each such as
            '1008292230'. There could be duplicate items in the list. Each new
            item id should match the item id in the same position and be of the
            same product.
        payment_id_for_cost_adjustment (str): The payment method id to pay or receive refund for
            the item price difference, such as 'gift_card_0000000' or
            'credit_card_0000000'. These can be looked up from the user or
            order details.

    Returns:
        Dict[str, Any]: A dictionary representing the updated order with the following fields:
            - order_id (str): The ID of the order.
            - user_id (str): The ID of the user who placed the order.
            - address (Dict[str, str]): The shipping address for the order.
                - address1 (str): The first line of the address.
                - address2 (str): The second line of the address.
                - city (str): The city of the address.
                - country (str): The country of the address.
                - state (str): The state of the address.
                - zip (str): The zip code of the address.
            - items (List[Dict[str, Any]]): A list of items in the order.
                - name (str): The name of the item.
                - product_id (str): The ID of the product.
                - item_id (str): The ID of the item.
                - price (float): The price of the item.
                - options (Dict[str, str]): The options for the item.
            - fulfillments (List[Dict[str, List[str]]]): A list of fulfillments for the order.
                - tracking_id (List[str]): A list of tracking IDs for the fulfillment.
                - item_ids (List[str]): A list of item IDs in the fulfillment.
            - status (str): The status of the order.
            - payment_history (List[Dict[str, Any]]): A list of payment transactions for the order.
                - transaction_type (str): The type of transaction.
                - amount (float): The amount of the transaction.
                - payment_method_id (str): The ID of the payment method.
            - exchange_items (Optional[List[str]]): A list of the exchanged item IDs.
            - exchange_new_items (Optional[List[str]]): A list of the new item IDs.
            - exchange_payment_method_id (Optional[str]): The payment method ID used for the exchange.
            - exchange_price_difference (Optional[float]): The price difference of the exchange.

    Raises:
        OrderNotFoundError: If the order is not found.
        NonDeliveredOrderError: If the order is not in a 'delivered' state.
        ItemNotFoundError: If an item to be exchanged is not found in the order.
        ItemMismatchError: If the number of items to be exchanged does not match the number of new items.
        ItemNotAvailableError: If a new item is not available.
        PaymentMethodNotFoundError: If the payment method is not found.
        InsufficientGiftCardBalanceError: If the gift card balance is insufficient.
        InvalidInputError: If the input is invalid.
    """
    from retail.exchange_delivered_order_items_tool import exchange_delivered_order_items
    return exchange_delivered_order_items(
        order_id=delivered_purchase_id,
        item_ids=item_identifiers_for_exchange,
        new_item_ids=new_item_identifiers_for_swap,
        payment_method_id=payment_id_for_cost_adjustment
    )
