# This file is automatically generated by the MutationBuilder

def fetch_subscription_cosmosdb_accounts(
    subscription_for_cosmos_acct_list,
    auth_method_for_cosmos_acct_list=None,
    tenant_for_cosmos_acct_list=None,
    max_retries_for_cosmos_acct_list=None,
    delay_for_cosmos_acct_list_retry=None,
    max_delay_for_cosmos_acct_list_retry=None,
    mode_for_cosmos_acct_list_retry=None,
    timeout_for_cosmos_acct_list_net=None
):
    """
    List all Cosmos DB accounts in a subscription.
    This command retrieves and displays all Cosmos DB accounts available in the specified subscription. Results include account names and are returned as a JSON array.
    Args:
        subscription_for_cosmos_acct_list (str): The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use.
        auth_method_for_cosmos_acct_list (Optional[str]): Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'. (not implemented)
        tenant_for_cosmos_acct_list (Optional[str]): The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant. (not implemented)
        max_retries_for_cosmos_acct_list (Optional[str]): Maximum number of retry attempts for failed operations before giving up.(not implemented)
        delay_for_cosmos_acct_list_retry (Optional[str]): Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base. (not implemented)    
        max_delay_for_cosmos_acct_list_retry (Optional[str]): Maximum delay in seconds between retries, regardless of the retry strategy. (not implemented)
        mode_for_cosmos_acct_list_retry (Optional[str]): Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts. (not implemented)
        timeout_for_cosmos_acct_list_net (Optional[str]): Network operation timeout in seconds. Operations taking longer than this will be cancelled. (not implemented)
    Returns:
        List[Dict[str, Any]]: A list of Cosmos DB accounts.
        Each dictionary in the list represents an account and contains the following keys:
            name (str): The name of the Cosmos DB account.
            id (str): The resource ID of the Cosmos DB account.
            location (str): The Azure region where the account is located.
            kind (str): The kind of Cosmos DB account (e.g., GlobalDocumentDB, MongoDB, Cassandra).
    Raises:
        SubscriptionNotFoundError: If the specified subscription_for_cosmos_acct_list ID is not found.
        ValidationError: If input arguments fail validation.
    """
    from azure.cosmos import azmcp_cosmos_account_list
    return azmcp_cosmos_account_list(
        subscription=subscription_for_cosmos_acct_list,
        auth_method=auth_method_for_cosmos_acct_list,
        tenant=tenant_for_cosmos_acct_list,
        retry_max_retries=max_retries_for_cosmos_acct_list,
        retry_delay=delay_for_cosmos_acct_list_retry,
        retry_max_delay=max_delay_for_cosmos_acct_list_retry,
        retry_mode=mode_for_cosmos_acct_list_retry,
        retry_network_timeout=timeout_for_cosmos_acct_list_net
    )


def enumerate_cosmos_account_databases(
    subscription_for_cosmos_db_list,
    account_name_for_cosmos_db_list,
    auth_method_for_cosmos_db_list=None,
    tenant_for_cosmos_db_list=None,
    max_retries_for_cosmos_db_list=None,
    delay_for_cosmos_db_list_retry=None,
    max_delay_for_cosmos_db_list_retry=None,
    mode_for_cosmos_db_list_retry=None,
    timeout_for_cosmos_db_list_net=None
):
    """
    List all databases in a Cosmos DB account.

    This function retrieves and displays all databases available in the specified Cosmos DB account.
    Results include database names and are returned as a list of dictionaries, where each dictionary
    represents a database resource.

    Args:
        subscription_for_cosmos_db_list (str): The Azure subscription ID or name. This can be either the GUID
            identifier or the display name of the Azure subscription to use.
        account_name_for_cosmos_db_list (str): The name of the Cosmos DB account to query (e.g., my-cosmos-account).
        auth_method_for_cosmos_db_list (Optional[str]): Authentication method to use. Options: 'credential'
            (Azure CLI/managed identity), 'key' (access key), or 'connectionString'.
            Defaults to None. (not implemented)
        tenant_for_cosmos_db_list (Optional[str]): The Azure Active Directory tenant ID or name. This can be
            either the GUID identifier or the display name of your Azure AD tenant.
            Defaults to None. (not implemented)
        max_retries_for_cosmos_db_list (Optional[str]): Maximum number of retry attempts for failed
            operations before giving up. Defaults to None. (not implemented)
        delay_for_cosmos_db_list_retry (Optional[str]): Initial delay in seconds between retry attempts.
            For exponential backoff, this value is used as the base. Defaults to None. (not implemented)
        max_delay_for_cosmos_db_list_retry (Optional[str]): Maximum delay in seconds between retries,
            regardless of the retry strategy. Defaults to None. (not implemented)
        mode_for_cosmos_db_list_retry (Optional[str]): Retry strategy to use. 'fixed' uses consistent delays,
            'exponential' increases delay between attempts. Defaults to None. (not implemented)
        timeout_for_cosmos_db_list_net (Optional[str]): Network operation timeout in seconds.
            Operations taking longer than this will be cancelled. Defaults to None. (not implemented)

    Returns:
        List[Dict[str, Any]]: A list of database resources in the specified Cosmos DB account.
        Each dictionary in the list represents a database and contains the following keys:
            name (str): The user-defined name of the database.
            id (str): The unique resource ID of the database.

    Raises:
        ResourceNotFoundError: If the specified Azure subscription_for_cosmos_db_list or Cosmos DB account does not exist.
        InvalidInputError: If required input parameters (e.g., 'subscription_id', 'account_name_for_cosmos_db_list')
            are missing, or if any parameter is malformed or contains an invalid value.
    """
    from azure.cosmos import azmcp_cosmos_database_list
    return azmcp_cosmos_database_list(
        subscription=subscription_for_cosmos_db_list,
        account_name=account_name_for_cosmos_db_list,
        auth_method=auth_method_for_cosmos_db_list,
        tenant=tenant_for_cosmos_db_list,
        retry_max_retries=max_retries_for_cosmos_db_list,
        retry_delay=delay_for_cosmos_db_list_retry,
        retry_max_delay=max_delay_for_cosmos_db_list_retry,
        retry_mode=mode_for_cosmos_db_list_retry,
        retry_network_timeout=timeout_for_cosmos_db_list_net
    )


def get_cosmos_database_containers(
    subscription_for_cosmos_container_list,
    account_name_for_cosmos_container_list,
    db_name_for_cosmos_container_list,
    auth_method_for_cosmos_container_list=None,
    delay_for_cosmos_container_list_retry=None,
    max_delay_for_cosmos_container_list_retry=None,
    max_retries_for_cosmos_container_list=None,
    mode_for_cosmos_container_list_retry=None,
    timeout_for_cosmos_container_list_net=None,
    tenant_for_cosmos_container_list=None
):
    """
    List all containers in a Cosmos DB database.
    This function retrieves and displays all containers within the specified database and Cosmos DB account.
    Results include container names and are returned as a JSON array. Both an account name and a
    database name must be specified.
    Args:
        subscription_for_cosmos_container_list (str): The Azure subscription ID or name. This can be either the GUID
            identifier or the display name of the Azure subscription to use.
        account_name_for_cosmos_container_list (str): The name of the Cosmos DB account to query (e.g., my-cosmos-account).
        db_name_for_cosmos_container_list (str): The name of the database to query (e.g., my-database).
        auth_method_for_cosmos_container_list (Optional[str]): Authentication method to use. Options: 'credential'
            (Azure CLI/managed identity), 'key' (access key), or 'connectionString'. (not implemented)
        delay_for_cosmos_container_list_retry (Optional[str]): Initial delay in seconds between retry attempts. For
            exponential backoff, this value is used as the base. (not implemented)
        max_delay_for_cosmos_container_list_retry (Optional[str]): Maximum delay in seconds between retries, regardless
            of the retry strategy. (not implemented)
        max_retries_for_cosmos_container_list (Optional[str]): Maximum number of retry attempts for failed
            operations before giving up. (not implemented)
        mode_for_cosmos_container_list_retry (Optional[str]): Retry strategy to use. 'fixed' uses consistent delays,
            'exponential' increases delay between attempts. (not implemented)
        timeout_for_cosmos_container_list_net (Optional[str]): Network operation timeout in seconds. Operations
            taking longer than this will be cancelled. (not implemented)
        tenant_for_cosmos_container_list (Optional[str]): The Azure Active Directory tenant ID or name. This can be
            either the GUID identifier or the display name of your Azure AD tenant. (not implemented)
    Returns:
        List[Dict[str, Any]]: A list of containers in the database. Each dictionary in the list
            represents a container and includes the following keys:
            name (str): The name of the container.
            id (str): The resource ID of the container.
    Raises:
        ResourceNotFoundError: If the specified Cosmos DB account or database does not exist.
        InvalidInputError: If required parameters like account_name_for_cosmos_container_list or db_name_for_cosmos_container_list are missing.
        SubscriptionNotFoundError: If the specified Azure subscription_for_cosmos_container_list is not found.
        ValidationError: If input arguments fail validation.
    """
    from azure.cosmos import azmcp_cosmos_database_container_list
    return azmcp_cosmos_database_container_list(
        subscription=subscription_for_cosmos_container_list,
        account_name=account_name_for_cosmos_container_list,
        database_name=db_name_for_cosmos_container_list,
        auth_method=auth_method_for_cosmos_container_list,
        retry_delay=delay_for_cosmos_container_list_retry,
        retry_max_delay=max_delay_for_cosmos_container_list_retry,
        retry_max_retries=max_retries_for_cosmos_container_list,
        retry_mode=mode_for_cosmos_container_list_retry,
        retry_network_timeout=timeout_for_cosmos_container_list_net,
        tenant=tenant_for_cosmos_container_list
    )


def provision_cosmosdb_service_instance(
    target_subscription_context,
    designated_resource_group,
    new_cosmosdb_account_label,
    azure_geographical_region,
    cosmos_api_model='GlobalDocumentDB',
    connection_authentication_method=None,
    azure_active_directory_tenant=None,
    resilience_retry_limit=None,
    initial_retry_interval_seconds=None,
    maximum_retry_backoff_seconds=None,
    retry_timing_strategy=None,
    request_cancellation_timeout_seconds=None
):
    """
    Create a new Cosmos DB account in Azure.

    This function creates a new Cosmos DB account with the specified parameters in the given
    resource group and subscription. The account will be created with the specified kind
    (GlobalDocumentDB, MongoDB, or Parse) and location.

    Args:
        target_subscription_context (str): The Azure subscription ID or name. This can be either the GUID
            identifier or the display name of the Azure subscription to use.
        designated_resource_group (str): The name of the resource group where the Cosmos DB account
            will be created.
        new_cosmosdb_account_label (str): The name of the Cosmos DB account to create. Must be globally
            unique across all Azure subscriptions.
        azure_geographical_region (str): The Azure region where the Cosmos DB account will be created
            (e.g., "eastus", "westus2", "northeurope").
        cosmos_api_model (Optional[str]): The kind of Cosmos DB account to create. Options:
            'GlobalDocumentDB' (default), 'MongoDB', 'Parse'. Defaults to "GlobalDocumentDB".
        connection_authentication_method (Optional[str]): Authentication method to use. Options: 'credential'
            (Azure CLI/managed identity), 'key' (access key), or 'connectionString'.
            Defaults to None. (not implemented)
        azure_active_directory_tenant (Optional[str]): The Azure Active Directory tenant ID or name. This can be
            either the GUID identifier or the display name of your Azure AD tenant.
            Defaults to None. (not implemented)
        resilience_retry_limit (Optional[str]): Maximum number of retry attempts for failed
            operations before giving up. Defaults to None. (not implemented)
        initial_retry_interval_seconds (Optional[str]): Initial delay in seconds between retry attempts.
            For exponential backoff, this value is used as the base. Defaults to None. (not implemented)
        maximum_retry_backoff_seconds (Optional[str]): Maximum delay in seconds between retries,
            regardless of the retry strategy. Defaults to None. (not implemented)
        retry_timing_strategy (Optional[str]): Retry strategy to use. 'fixed' uses consistent delays,
            'exponential' increases delay between attempts. Defaults to None. (not implemented)
        request_cancellation_timeout_seconds (Optional[str]): Network operation timeout in seconds.
            Operations taking longer than this will be cancelled. Defaults to None. (not implemented)

    Returns:
        Dict[str, Any]: Details of the created Cosmos DB account. Contains the following keys:
            name (str): The name of the created Cosmos DB account.
            id (str): The resource ID of the created Cosmos DB account.
            location (str): The Azure region where the account is located.
            kind (str): The kind of Cosmos DB account (e.g., GlobalDocumentDB, MongoDB).
            resource_group_name (str): The name of the resource group containing the account.
            subscription_id (str): The subscription ID where the account was created.
            provisioning_state (str): The provisioning state of the account (e.g., "Succeeded").
            databases (List[Dict]): A list of database resources in the specified Cosmos DB account.
                Each dictionary in the list represents a database and contains the following keys:
                    name (str): The user-defined name of the database.
                    id (str): The unique resource ID of the database.

    Raises:
        ResourceNotFoundError: If the specified Azure target_subscription_context or resource group does not exist.
        InvalidInputError: If required input parameters are missing, or if any parameter is
            malformed or contains an invalid value.
        ConflictError: If a Cosmos DB account with the same name already exists in the specified resource group.
        ValidationError: If input arguments fail validation.
    """
    from azure.cosmos import azmcp_cosmos_account_create
    return azmcp_cosmos_account_create(
        subscription=target_subscription_context,
        resource_group=designated_resource_group,
        account_name=new_cosmosdb_account_label,
        location=azure_geographical_region,
        kind=cosmos_api_model,
        auth_method=connection_authentication_method,
        tenant=azure_active_directory_tenant,
        retry_max_retries=resilience_retry_limit,
        retry_delay=initial_retry_interval_seconds,
        retry_max_delay=maximum_retry_backoff_seconds,
        retry_mode=retry_timing_strategy,
        retry_network_timeout=request_cancellation_timeout_seconds
    )
