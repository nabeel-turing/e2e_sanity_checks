{
    "meta": "null",
    "nextCursor": "null",
    "tools": [
        {
            "name": "azmcp-appconfig-account-list",
            "description": "List all App Configuration stores in a subscription. This command retrieves and displays all App Configuration\r\nstores available in the specified subscription. Results include store names returned as a JSON array.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    }
                },
                "required": [
                    "subscription"
                ]
            },
            "annotations": "null",
            "returns": {
                "app_config_stores": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of App Configuration stores.\nEach store object contains:\n'name': str - The name of the App Configuration store.\n'id': str - The resource ID of the App Configuration store.\n'location': str - The Azure region where the store is located."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to list App Configuration stores.",
                "SubscriptionNotFoundError": "If the specified subscription ID is not found.",
                "ServiceError": "If there is an issue with the Azure App Configuration service."
            }
        },
        {
            "name": "azmcp-appconfig-kv-delete",
            "description": "Delete a key-value pair from an App Configuration store. This command removes the specified key-value pair from the store.\r\nIf a label is specified, only the labeled version is deleted. If no label is specified, the key-value with the matching\r\nkey and the default label will be deleted.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "account-name": {
                        "type": "string",
                        "description": "The name of the App Configuration store (e.g., my-appconfig)."
                    },
                    "key": {
                        "type": "string",
                        "description": "The name of the key to access within the App Configuration store."
                    },
                    "label": {
                        "type": "string",
                        "description": "The label to apply to the configuration key. Labels are used to group and organize settings."
                    }
                },
                "required": [
                    "subscription",
                    "account-name",
                    "key"
                ]
            },
            "annotations": "null",
            "returns": {},
            "raises": {
                "AuthenticationError": "Authentication failed. This could be due to invalid credentials, expired tokens, or insufficient permissions for the authentication principal to access Azure services.",
                "PermissionError": "The authenticated principal does not have the required permissions to delete key-values from the specified App Configuration store (e.g., missing 'App Configuration Data Owner' role or a custom role with delete permissions).",
                "ResourceNotFoundError": "The specified App Configuration store was not found, or the key-value pair (with the specified key and label, if provided) does not exist in the store.",
                "InvalidInputError": "One or more required input parameters are missing or invalid. For example, 'account_name' or 'key' might be empty, or a parameter might have an incorrect format.",
                "ServiceError": "An unexpected error occurred within the Azure App Configuration service while processing the request. This may be a transient issue."
            }
        },
        {
            "name": "azmcp-appconfig-kv-list",
            "description": "List all key-values in an App Configuration store. This command retrieves and displays all key-value pairs\r\nfrom the specified store. Each key-value includes its key, value, label, content type, ETag, last modified\r\ntime, and lock status.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "account-name": {
                        "type": "string",
                        "description": "The name of the App Configuration store (e.g., my-appconfig)."
                    },
                    "key": {
                        "type": "string",
                        "description": "Specifies the key filter, if any, to be used when retrieving key-values. The filter can be an exact match, for example a filter of \"foo\" would get all key-values with a key of \"foo\", or the filter can include a '*' character at the end of the string for wildcard searches (e.g., 'App*'). If omitted all keys will be retrieved."
                    },
                    "label": {
                        "type": "string",
                        "description": "Specifies the label filter, if any, to be used when retrieving key-values. The filter can be an exact match, for example a filter of \"foo\" would get all key-values with a label of \"foo\", or the filter can include a '*' character at the end of the string for wildcard searches (e.g., 'Prod*'). This filter is case-sensitive. If omitted, all labels will be retrieved."
                    }
                },
                "required": [
                    "subscription",
                    "account-name"
                ]
            },
            "annotations": "null",
            "returns": {
                "key_value_items": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of key-value items. Each item is a dictionary representing a key-value and contains the following fields:\n'key': str - The unique name of the key.\n'value': str - The value associated with the key.\n'label': Optional[str] - The label associated with the key-value. If no label is assigned, this will be null (represented as `None` in Python).\n'content_type': Optional[str] - The content type of the value (e.g., 'application/json', 'text/plain'). If not set, this will be null (represented as `None` in Python).\n'etag': str - An opaque string representing the version of the key-value, used for optimistic concurrency control.\n'last_modified': str - The Coordinated Universal Time (UTC) timestamp of the last modification, in ISO 8601 format (e.g., 'YYYY-MM-DDTHH:mm:ssZ').\n'locked': bool - A boolean flag indicating whether the key-value is locked and cannot be modified or deleted."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or the provided credentials are invalid.",
                "PermissionError": "If the authenticated identity does not have sufficient permissions to list key-values from the App Configuration store.",
                "ResourceNotFoundError": "If the specified Azure App Configuration store does not exist.",
                "InvalidInputError": "If any of the input parameters are invalid (e.g., missing required parameters, incorrect format, or out-of-range values).",
                "NetworkTimeoutError": "If the request times out after all retry attempts, potentially due to network issues or service unresponsiveness.",
                "ServiceError": "If an unexpected error occurs within the Azure App Configuration service or its dependent Azure services."
            }
        },
        {
            "name": "azmcp-appconfig-kv-lock",
            "description": "Lock a key-value in an App Configuration store. This command sets a key-value to read-only mode,\r\npreventing any modifications to its value. You must specify an account name and key. Optionally,\r\nyou can specify a label to lock a specific labeled version of the key-value.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "account-name": {
                        "type": "string",
                        "description": "The name of the App Configuration store (e.g., my-appconfig)."
                    },
                    "key": {
                        "type": "string",
                        "description": "The name of the key to access within the App Configuration store."
                    },
                    "label": {
                        "type": "string",
                        "description": "The label to apply to the configuration key. Labels are used to group and organize settings."
                    }
                },
                "required": [
                    "subscription",
                    "account-name",
                    "key"
                ]
            },
            "annotations": "null",
            "returns": {
                "locked_key_value_item": {
                    "type": "Dict[str, Any]",
                    "description": "A dictionary representing the details of the locked key-value item. It contains the following fields:\n'key': str - The key of the configuration setting.\n'value': str - The value of the configuration setting.\n'label': Optional[str] - The label of the configuration setting. This can be null if the key-value does not have an assigned label.\n'content_type': Optional[str] - The content type of the key-value's value. This can be null if no content type is set.\n'etag': str - An opaque string representing the state of the key-value, used for optimistic concurrency control.\n'last_modified': str - The Coordinated Universal Time (UTC) timestamp of when the key-value was last modified, in ISO 8601 format.\n'locked': bool - A boolean flag indicating whether the key-value is locked. This will be true for a successfully locked item."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or the provided credentials are invalid.",
                "PermissionError": "If the authenticated principal does not have the required permissions to lock key-values in the specified App Configuration store.",
                "ResourceNotFoundError": "If the specified App Configuration store, or the key-value identified by the given key and label, does not exist.",
                "InvalidInputError": "If required parameters such as 'account_name' or 'key' are missing, or if any parameter has an invalid format.",
                "ConflictError": "If the specified key-value is already locked.",
                "ServiceError": "If an unexpected error occurs within the Azure App Configuration service during the operation."
            }
        },
        {
            "name": "azmcp-appconfig-kv-set",
            "description": "Set a key-value setting in an App Configuration store. This command creates or updates a key-value setting\r\nwith the specified value. You must specify an account name, key, and value. Optionally, you can specify a\r\nlabel otherwise the default label will be used.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "account-name": {
                        "type": "string",
                        "description": "The name of the App Configuration store (e.g., my-appconfig)."
                    },
                    "key": {
                        "type": "string",
                        "description": "The name of the key to access within the App Configuration store."
                    },
                    "label": {
                        "type": "string",
                        "description": "The label to apply to the configuration key. Labels are used to group and organize settings."
                    },
                    "value": {
                        "type": "string",
                        "description": "The value to set for the configuration key."
                    }
                },
                "required": [
                    "subscription",
                    "account-name",
                    "key",
                    "value"
                ]
            },
            "annotations": "null",
            "returns": {
                "set_key_value_item": {
                    "type": "Dict[str, Any]",
                    "description": "The details of the created or updated key-value item. Contains the following fields:\nkey: str - The key of the configuration setting.\nvalue: str - The value of the configuration setting.\nlabel: Optional[str] - The label of the configuration setting. A null or empty string typically represents 'no label'.\ncontent_type: Optional[str] - The content type of the value (e.g., 'application/json', 'text/plain'). If not set by the user, it might be inferred by the service.\netag: str - An opaque ETag value used for optimistic concurrency control. This value changes whenever the key-value is updated, helping prevent accidental overwrites.\nlast_modified: str - The timestamp of the last modification, in ISO 8601 format (e.g., 'YYYY-MM-DDTHH:mm:ssZ').\nlocked: bool - A boolean indicating whether the key-value is locked. Locked key-values cannot be modified or deleted until explicitly unlocked."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails due to invalid credentials or insufficient authentication details.",
                "PermissionError": "If the authenticated identity does not have the required permissions to set key-values in the specified App Configuration store.",
                "ResourceNotFoundError": "If the specified App Configuration store (account-name) or subscription does not exist.",
                "InvalidInputError": "If required parameters such as 'account_name', 'key', or 'value' are missing, or if provided parameters are malformed.",
                "ConflictError": "If attempting to update a key-value that is locked and the operation is not permitted, or if an ETag mismatch occurs during an optimistic concurrency update.",
                "ServiceError": "If an unexpected error occurs within the Azure App Configuration service during the operation."
            }
        },
        {
            "name": "azmcp-appconfig-kv-show",
            "description": "Show a specific key-value setting in an App Configuration store. This command retrieves and displays the value,\r\nlabel, content type, ETag, last modified time, and lock status for a specific setting. You must specify an\r\naccount name and key. Optionally, you can specify a label otherwise the setting with default label will be retrieved.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "account-name": {
                        "type": "string",
                        "description": "The name of the App Configuration store (e.g., my-appconfig)."
                    },
                    "key": {
                        "type": "string",
                        "description": "The name of the key to access within the App Configuration store."
                    },
                    "label": {
                        "type": "string",
                        "description": "The label to apply to the configuration key. Labels are used to group and organize settings."
                    }
                },
                "required": [
                    "subscription",
                    "account-name",
                    "key"
                ]
            },
            "annotations": "null",
            "returns": {
                "key_value_item_details": {
                    "description": "Details of the specific key-value item. Contains the following fields:\n'key': str - The key of the configuration setting.\n'value': str - The value of the configuration setting.\n'label': Optional[str] - The label of the configuration setting. If not specified, it implies the null label (often represented as '\\0').\n'content_type': Optional[str] - The content type of the value.\n'etag': str - The ETag for optimistic concurrency control.\n'last_modified': str - The timestamp of the last modification (ISO 8601 format).\n'locked': bool - Indicates if the key-value is locked.",
                    "type": "Dict[str, Any]"
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to view this key-value.",
                "ResourceNotFoundError": "If the specified App Configuration store, key, or label does not exist.",
                "InvalidInputError": "If required parameters like account-name or key are missing.",
                "ServiceError": "If there is an issue with the Azure App Configuration service."
            }
        },
        {
            "name": "azmcp-appconfig-kv-unlock",
            "description": "Unlock a key-value setting in an App Configuration store. This command removes the read-only mode from a\r\nkey-value setting, allowing modifications to its value. You must specify an account name and key. Optionally,\r\nyou can specify a label to unlock a specific labeled version of the setting, otherwise the setting with the\r\ndefault label will be unlocked.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "account-name": {
                        "type": "string",
                        "description": "The name of the App Configuration store (e.g., my-appconfig)."
                    },
                    "key": {
                        "type": "string",
                        "description": "The name of the key to access within the App Configuration store."
                    },
                    "label": {
                        "type": "string",
                        "description": "The label to apply to the configuration key. Labels are used to group and organize settings."
                    }
                },
                "required": [
                    "subscription",
                    "account-name",
                    "key"
                ]
            },
            "annotations": "null",
            "returns": {
                "unlocked_key_value_item": {
                    "description": "The details of the unlocked key-value item. Contains the following fields:\nkey: str - The key of the configuration setting.\nvalue: str - The value of the configuration setting.\nlabel: Optional[str] - The label of the configuration setting. If null, it's the default label.\ncontent_type: Optional[str] - The content type of the value.\netag: str - The ETag for optimistic concurrency control.\nlast_modified: str - The timestamp of the last modification in ISO 8601 format.\nlocked: bool - Indicates if the key-value is locked (will be false after successful unlock).",
                    "type": "Dict[str, Any]"
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to unlock key-values in the specified App Configuration store.",
                "ResourceNotFoundError": "If the specified App Configuration store, key, or key with the specified label does not exist.",
                "InvalidInputError": "If required parameters like 'account_name' or 'key' are missing or malformed.",
                "ConflictError": "If the specified key-value setting is already unlocked.",
                "ServiceError": "If there is an issue with the Azure App Configuration service or an unexpected error occurs during the operation."
            }
        },
        {
            "name": "azmcp-bestpractices-get",
            "description": "Returns best practices for secure, production-grade Azure SDK usage. Call this command and follow its guidance before generating or suggesting any Azure SDK code. This command returns the content of the markdown file as a string array.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "_dummy": {
                        "type": "string",
                        "description": "Placeholder argument to ensure OpenAPI schema is valid."
                    }
                },
                "required": []
            },
            "annotations": "null",
            "returns": {
                "best_practices_content": {
                    "type": "List[str]",
                    "description": "A list of strings, where each string is a line from the best practices markdown file."
                }
            },
            "raises": {
                "InternalToolError": "If the best practices content cannot be retrieved by the tool."
            }
        },
        {
            "name": "azmcp-cosmos-account-list",
            "description": "List all Cosmos DB accounts in a subscription. This command retrieves and displays all Cosmos DB accounts\r\navailable in the specified subscription. Results include account names and are returned as a JSON array.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    }
                },
                "required": [
                    "subscription"
                ]
            },
            "annotations": "null",
            "returns": {
                "cosmos_db_accounts": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of Cosmos DB accounts.\nEach account object contains:\nname: str - The name of the Cosmos DB account.\nid: str - The resource ID of the Cosmos DB account.\nlocation: str - The Azure region where the account is located.\nkind: str - The kind of Cosmos DB account (e.g., GlobalDocumentDB, MongoDB, Cassandra)."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to list Cosmos DB accounts.",
                "SubscriptionNotFoundError": "If the specified subscription ID is not found.",
                "ServiceError": "If there is an issue with the Azure Cosmos DB service."
            }
        },
        {
            "name": "azmcp-cosmos-database-container-item-query",
            "description": "Execute a SQL query against items in a Cosmos DB container. Requires account-name,\r\ndatabase-name, and container-name.\r\nThe query parameter accepts SQL query syntax. Results are returned as a\r\nJSON array of documents.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "account-name": {
                        "type": "string",
                        "description": "The name of the Cosmos DB account to query (e.g., my-cosmos-account)."
                    },
                    "database-name": {
                        "type": "string",
                        "description": "The name of the database to query (e.g., my-database)."
                    },
                    "container-name": {
                        "type": "string",
                        "description": "The name of the container to query (e.g., my-container)."
                    },
                    "query": {
                        "type": "string",
                        "description": "SQL query to execute against the container. Uses Cosmos DB SQL syntax."
                    }
                },
                "required": [
                    "subscription",
                    "account-name",
                    "database-name",
                    "container-name"
                ]
            },
            "annotations": "null",
            "returns": {
                "query_results": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of documents retrieved from the Cosmos DB container that match the specified query.\nEach document in the list is a dictionary representing a single item.\nThe specific keys and value types within each document dictionary are dynamic and depend entirely on:\n1. The data structure of the items stored in the Cosmos DB container.\n2. The projection defined in the SQL query (e.g., `SELECT *` vs. `SELECT c.id, c.name`).\nFor example, a document might contain common system-generated properties (if not excluded by the query) alongside user-defined properties. Example properties that might be present:\n'id': str - The user-defined unique identifier for the item.\n'_rid': str - The unique resource identifier assigned by Cosmos DB.\n'_etag': str - The entity tag for optimistic concurrency control.\n'_ts': int - The last updated timestamp of the item (Unix epoch).\nUserDefinedField1: Any - An example custom field present in the document.\nUserDefinedField2: Any - Another example custom field with its corresponding type."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to query items.",
                "ResourceNotFoundError": "If the specified Cosmos DB account, database, or container does not exist.",
                "InvalidInputError": "If required parameters are missing or the query syntax is invalid.",
                "QueryExecutionError": "If the query fails to execute due to semantic errors or other issues.",
                "ServiceError": "If there is an issue with the Azure Cosmos DB service."
            }
        },
        {
            "name": "azmcp-cosmos-database-container-list",
            "description": "List all containers in a Cosmos DB database. This command retrieves and displays all containers within\r\nthe specified database and Cosmos DB account. Results include container names and are returned as a\r\nJSON array. You must specify both an account name and a database name.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "account-name": {
                        "type": "string",
                        "description": "The name of the Cosmos DB account to query (e.g., my-cosmos-account)."
                    },
                    "database-name": {
                        "type": "string",
                        "description": "The name of the database to query (e.g., my-database)."
                    }
                },
                "required": [
                    "subscription",
                    "account-name",
                    "database-name"
                ]
            },
            "annotations": "null",
            "returns": {
                "containers": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of containers in the database.\nEach container object in the list contains the following fields:\n'name': str - The name of the container.\n'id': str - The resource ID of the container."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to list containers.",
                "ResourceNotFoundError": "If the specified Cosmos DB account or database does not exist.",
                "InvalidInputError": "If required parameters like account_name or database_name are missing.",
                "ServiceError": "If there is an issue with the Azure Cosmos DB service."
            }
        },
        {
            "name": "azmcp-cosmos-database-list",
            "description": "List all databases in a Cosmos DB account. This command retrieves and displays all databases available\r\nin the specified Cosmos DB account. Results include database names and are returned as a JSON array.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "account-name": {
                        "type": "string",
                        "description": "The name of the Cosmos DB account to query (e.g., my-cosmos-account)."
                    }
                },
                "required": [
                    "subscription",
                    "account-name"
                ]
            },
            "annotations": "null",
            "returns": {
                "databases": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of database resources in the specified Cosmos DB account.\nEach database object in the list contains:\nname: str - The user-defined name of the database.\nid: str - The unique resource ID of the database."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails due to invalid, expired, or insufficient credentials for the specified 'auth_method'.",
                "PermissionError": "If the authenticated identity does not have the necessary Azure RBAC permissions (e.g., 'Microsoft.DocumentDB/databaseAccounts/read') to list databases for the specified Cosmos DB account.",
                "ResourceNotFoundError": "If the specified Azure subscription or Cosmos DB account does not exist.",
                "InvalidInputError": "If required input parameters (e.g., 'subscription_id', 'account_name') are missing, or if any parameter is malformed or contains an invalid value.",
                "ServiceError": "If an unexpected error occurs within the Azure Cosmos DB service while processing the request, or if there's a general Azure platform issue."
            }
        },
        {
            "name": "azmcp-extension-az",
            "description": "Your job is to answer questions about an Azure environment by executing Azure CLI commands. You have the following rules:\r\n\r\n- Use the Azure CLI to manage Azure resources and services. Do not use any other tool.\r\n- Provide a valid Azure CLI command. For example: 'group list'.\r\n- When deleting or modifying resources, ALWAYS request user confirmation.\r\n- If a command fails, retry 3 times before giving up with an improved version of the code based on the returned feedback.\r\n- When listing resources, ensure pagination is handled correctly so that all resources are returned.\r\n- You can ONLY write code that interacts with Azure. It CANNOT generate charts, tables, graphs, etc.\r\n- You can delete or modify resources in your Azure environment. Always be cautious and include appropriate warnings when providing commands to users.\r\n- Be concise, professional and to the point. Do not give generic advice, always reply with detailed & contextual data sourced from the current Azure environment.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "command": {
                        "type": "string",
                        "description": "The Azure CLI command to execute (without the 'az' prefix). For example: 'group list'."
                    }
                },
                "required": [
                    "command"
                ]
            },
            "annotations": "null",
            "returns": {
                "cli_output": {
                    "type": "Dict[str, Any]",
                    "description": "A dictionary containing the results from the executed Azure CLI command. This dictionary includes the following keys:\n`stdout`: `str` - The standard output string from the CLI command. If the executed command produces JSON and involves pagination handled by this tool, `stdout` will contain the aggregated JSON string representing all items. The specific format of this string (e.g., JSON, TSV, plain text) depends on the command itself and any output formatting arguments used (e.g., `--output json`).\n`stderr`: `str` - The standard error string from the CLI command. This will be an empty string if no error output was generated during the command's execution.\n`exit_code`: `int` - The exit code returned by the Azure CLI command. For successful returns from this method, this value will typically be 0. Non-zero exit codes from the CLI (after all retry attempts) generally result in a `CommandExecutionError` being raised instead of a normal return."
                }
            },
            "raises": {
                "AuthenticationError": "Raised if authentication with Azure fails. This can occur due to various reasons such as invalid or expired credentials, insufficient permissions for the authenticated identity to perform the requested Azure CLI operations, or misconfiguration of the specified `auth_method`.",
                "CommandExecutionError": "Raised if an Azure CLI command executes but returns a non-zero exit code, indicating an error during its operation, and all configured retry attempts (as per `retry_max_retries` and other retry parameters) have been exhausted. The error object may contain `stdout` and `stderr` from the CLI to help diagnose the failure.",
                "InvalidCommandError": "Raised if the provided `command` string is determined to be invalid before attempting execution. This can happen if the command is syntactically incorrect, uses unrecognized arguments, or refers to a non-existent Azure CLI command or group.",
                "ToolConfigurationError": "Raised if the Azure CLI tool itself or essential components like specific CLI extensions are not correctly installed, configured, or found in the execution environment, thereby preventing the command from running."
            }
        },
        {
            "name": "azmcp-extension-azd",
            "description": "Runs Azure Developer CLI (azd) commands.\r\nAgents and LLM's must always run this tool with the 'learn' parameter and empty 'command' on first use to learn more about 'azd' best practices and usage patterns.\r\n\r\nThis tool supports the following:\r\n- List, search and show templates to start your project\r\n- Create and initialize new projects and templates\r\n- Show and manage azd configuration\r\n- Show and manage environments and values\r\n- Provision Azure resources\r\n- Deploy applications\r\n- Bring the whole project up and online\r\n- Bring the whole project down and deallocate all Azure resources\r\n- Setup CI/CD pipelines\r\n- Monitor Azure applications\r\n- Show information about the project and its resources\r\n- Show and manage extensions and extension sources\r\n- Show and manage templates and template sources\r\n\r\nIf unsure about available commands or their parameters, run azd help or azd <group> --help in the command to discover them.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "command": {
                        "type": "string",
                        "description": "The Azure Developer CLI command and arguments to execute (without the 'azd' prefix).\r\nExamples:\r\n- up\r\n- env list\r\n- env get-values"
                    },
                    "cwd": {
                        "type": "string",
                        "description": "The current working directory for the command. This is the directory where the command will be executed."
                    },
                    "environment": {
                        "type": "string",
                        "description": "The name of the azd environment to use. This is typically the name of the Azure environment (e.g., 'prod', 'dev', 'test', 'staging').\r\nAlways set environments for azd commands that support -e, --environment argument."
                    },
                    "learn": {
                        "type": "string",
                        "description": "Flag to indicate whether to learn best practices and usage patterns for azd tool.\r\nAlways run this command with learn=true and empty command on first run."
                    }
                },
                "required": [
                    "cwd"
                ]
            },
            "annotations": "null",
            "returns": {
                "azd_output": {
                    "type": "Dict[str, Any]",
                    "description": "The output from the executed 'azd' command. The structure depends on the specific 'azd' command but typically includes:\nstdout: str - The standard output from the 'azd' command.\nstderr: str - The standard error output from the 'azd' command (if any).\nexit_code: int - The exit code of the 'azd' command. 0 usually indicates success."
                }
            },
            "raises": {
                "AuthenticationError": "If 'azd' requires authentication (e.g., 'azd login') and it fails, or if the provided credentials or method are invalid.",
                "CommandExecutionError": "If the 'azd' command fails to execute due to runtime issues or returns a non-zero exit code indicating failure.",
                "InvalidCommandError": "If the provided 'command' string is not a valid 'azd' command, or if required parameters are missing or malformed.",
                "ToolConfigurationError": "If 'azd' is not installed, not found in the system PATH, or essential 'azd' configuration is missing or corrupted.",
                "EnvironmentError": "If there are issues with the specified 'azd' environment (e.g., not found, misconfigured) or the specified 'cwd' (current working directory) is invalid or not an 'azd' project."
            }
        },
        {
            "name": "azmcp-group-list",
            "description": "List all resource groups in a subscription. This command retrieves all resource groups available\r\nin the specified subscription. Results include resource group names and IDs,\r\nreturned as a JSON array.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    }
                },
                "required": [
                    "subscription"
                ]
            },
            "annotations": "null",
            "returns": {
                "resource_groups": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of resource group objects. Each object contains:\n'name': str - The name of the resource group.\n'id': str - The resource ID of the resource group.\n'location': str - The Azure region where the resource group is located.\n'managedBy': Optional[str] - The ID of the resource that manages this resource group, if applicable.\n'tags': Optional[Dict[str, str]] - Tags associated with the resource group."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to list resource groups.",
                "SubscriptionNotFoundError": "If the specified subscription ID is not found.",
                "ServiceError": "If there is an issue with the Azure Resource Manager service."
            }
        },
        {
            "name": "azmcp-keyvault-key-create",
            "description": "Create a new key in an Azure Key Vault. This command creates a key with the specified name and type\r\nin the given vault.\r\n\r\nRequired arguments:\r\n- subscription\r\n- vault\r\n- key\r\n- key-type\r\n\r\nKey types:\r\n- RSA: RSA key pair\r\n- EC: Elliptic Curve key pair\r\n- OCT: ES cryptographic pair",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "vault": {
                        "type": "string",
                        "description": "The name of the Key Vault."
                    },
                    "key": {
                        "type": "string",
                        "description": "The name of the key to retrieve/modify from the Key Vault."
                    },
                    "key-type": {
                        "type": "string",
                        "description": "The type of key to create (RSA, EC)."
                    }
                },
                "required": [
                    "subscription",
                    "vault",
                    "key",
                    "key-type"
                ]
            },
            "annotations": "null",
            "returns": {
                "created_key_details": {
                    "type": "Dict[str, Any]",
                    "description": "Details of the created key. Contains the following keys:\n'key_ops': List[str] - Supported key operations for the key.\n'kty': str - The key type (e.g., 'RSA', 'EC', 'OCT').\n'attributes': Dict[str, Any] - Attributes of the key, containing:\n  'enabled': bool - Indicates whether the key is enabled for use.\n  'exp': Optional[int] - Expiry date in UTC seconds (Unix timestamp).\n  'nbf': Optional[int] - Not before date in UTC seconds (Unix timestamp), before which the key cannot be used.\n  'created': int - Creation date in UTC seconds (Unix timestamp).\n  'updated': int - Last updated date in UTC seconds (Unix timestamp).\n  'recoveryLevel': str - The recovery level for the key (e.g., 'Purgeable', 'Recoverable', 'Recoverable+ProtectedSubscription')."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or the provided credentials are invalid.",
                "PermissionError": "If the authenticated identity does not have the required permissions to create keys in the specified Key Vault.",
                "ResourceNotFoundError": "If the specified Azure Key Vault does not exist.",
                "InvalidInputError": "If required parameters (such as vault name, key name, or key type) are missing, or if parameter values are invalid (e.g., unsupported key type).",
                "ConflictError": "If a key with the specified name already exists in the Key Vault.",
                "ServiceError": "If an unexpected error occurs within the Azure Key Vault service during key creation."
            }
        },
        {
            "name": "azmcp-keyvault-key-get",
            "description": "Get a key from an Azure Key Vault. This command retrieves and displays details\r\nabout a specific key in the specified vault.\r\n\r\nRequired arguments:\r\n- subscription\r\n- vault\r\n- key",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "vault": {
                        "type": "string",
                        "description": "The name of the Key Vault."
                    },
                    "key": {
                        "type": "string",
                        "description": "The name of the key to retrieve/modify from the Key Vault."
                    }
                },
                "required": [
                    "subscription",
                    "vault",
                    "key"
                ]
            },
            "annotations": "null",
            "returns": {
                "key_details": {
                    "type": "Dict[str, Any]",
                    "description": "Details of the retrieved key. This dictionary includes the following fields:\nkid: str - The key identifier (a URI identifying the key).\nkey_ops: List[str] - A list of supported cryptographic operations for the key (e.g., 'encrypt', 'decrypt', 'sign', 'verify', 'wrapKey', 'unwrapKey').\nkty: str - The key type (e.g., 'RSA' for RSA, 'EC' for Elliptic Curve).\nattributes: Dict[str, Any] - A dictionary of key attributes, containing:\n  enabled: bool - Indicates if the key is enabled and can be used for cryptographic operations.\n  exp: Optional[int] - Expiry date as a Unix timestamp (seconds since Epoch UTC). The key cannot be used after this time.\n  nbf: Optional[int] - Not-before date as a Unix timestamp (seconds since Epoch UTC). The key cannot be used before this time.\n  created: int - Creation date as a Unix timestamp (seconds since Epoch UTC).\n  updated: int - Last updated date as a Unix timestamp (seconds since Epoch UTC).\n  recoveryLevel: str - Reflects the recovery level configured for the Key Vault (e.g., 'Purgeable', 'Recoverable+Purgeable', 'Recoverable', 'Recoverable+ProtectedSubscription')."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to get this key.",
                "ResourceNotFoundError": "If the specified Key Vault or key does not exist.",
                "InvalidInputError": "If required parameters (vault, key) are missing.",
                "ServiceError": "If there is an issue with the Azure Key Vault service."
            }
        },
        {
            "name": "azmcp-keyvault-key-list",
            "description": "List all keys in an Azure Key Vault. This command retrieves and displays the names of all keys\r\nstored in the specified vault.\r\n\r\nRequired arguments:\r\n- subscription\r\n- vault",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "vault": {
                        "type": "string",
                        "description": "The name of the Key Vault."
                    },
                    "include-managed": {
                        "type": "string",
                        "description": "Whether or not to include managed keys in results."
                    }
                },
                "required": [
                    "subscription",
                    "vault"
                ]
            },
            "annotations": "null",
            "returns": {
                "keys_list": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of dictionaries, where each dictionary represents a key in the Azure Key Vault. Each key dictionary primarily contains:\nattributes: Dict[str, Any] - The attributes of the key. This dictionary further includes fields like:\nenabled: bool - Specifies whether the key is enabled and can be used for cryptographic operations.\nexp: Optional[int] - Expiry date of the key, as a Unix timestamp (seconds since UTC epoch).\nnbf: Optional[int] - Not-before date of the key, as a Unix timestamp (seconds since UTC epoch). The key cannot be used before this date.\ncreated: int - Creation date of the key, as a Unix timestamp (seconds since UTC epoch).\nupdated: int - Last updated date of the key, as a Unix timestamp (seconds since UTC epoch).\ntags: Optional[Dict[str, str]] - Application-specific metadata as key-value pairs. These are user-defined tags associated with the key."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated principal does not have 'list' permission for keys in the specified vault.",
                "ResourceNotFoundError": "If the specified Azure Key Vault does not exist under the given subscription.",
                "InvalidInputError": "If any required input parameters (e.g., 'vault', 'subscription') are missing, or if any parameter is provided with an invalid value or format.",
                "ServiceError": "If an unexpected error occurs within the Azure Key Vault service or dependent Azure services."
            }
        },
        {
            "name": "azmcp-kusto-cluster-get",
            "description": "Get details for a specific Kusto cluster. Requires `subscription` and `cluster-name`.\r\nThe response includes the `clusterUri` property for use in subsequent commands.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "cluster-uri": {
                        "type": "string",
                        "description": "Kusto Cluster URI."
                    },
                    "cluster-name": {
                        "type": "string",
                        "description": "Kusto Cluster name."
                    }
                },
                "required": [
                    "subscription"
                ]
            },
            "annotations": "null",
            "returns": {
                "kusto_cluster_details": {
                    "type": "Dict[str, Any]",
                    "description": "Details of the Kusto cluster, including:\n'name': str - The name of the cluster.\n'id': str - The resource ID of the cluster.\n'location': str - The Azure region where the cluster is located.\n'sku': Dict[str, Any] - The SKU of the cluster, containing:\n  'name': str - The name of the SKU (e.g., 'Standard_D11_v2').\n  'capacity': int - The number of instances in the cluster.\n  'tier': str - The SKU tier (e.g., 'Standard').\n'state': str - The current state of the cluster (e.g., 'Running', 'Creating').\n'provisioningState': str - The provisioning state of the cluster (e.g., 'Succeeded')."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to get cluster details.",
                "ResourceNotFoundError": "If the specified Kusto cluster or subscription does not exist.",
                "InvalidInputError": "If required parameters like cluster-name or subscription are missing or if both cluster-uri and cluster-name are provided ambiguously.",
                "ServiceError": "If there is an issue with the Azure Kusto service."
            }
        },
        {
            "name": "azmcp-kusto-cluster-list",
            "description": "List all Kusto clusters in a subscription. This command retrieves all clusters\r\navailable in the specified subscription. Requires `cluster-name` and `subscription`.\r\nResult is a list of cluster names as a JSON array.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    }
                },
                "required": [
                    "subscription"
                ]
            },
            "annotations": "null",
            "returns": {
                "kusto_clusters": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of Kusto clusters.\nEach cluster object contains details such as:\n'name': str - The name of the Kusto cluster.\n'id': str - The fully qualified resource ID of the Kusto cluster.\n'location': str - The Azure region where the Kusto cluster is located.\n'state': str - The current provisioning state of the Kusto cluster (e.g., Succeeded, Creating, Deleting)."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to list Kusto clusters in the specified subscription.",
                "SubscriptionNotFoundError": "If the specified subscription ID is not found or is invalid.",
                "ServiceError": "If an unexpected error occurs within the Azure Kusto service during the operation."
            }
        },
        {
            "name": "azmcp-kusto-database-list",
            "description": "List all databases in a Kusto cluster. Requires `cluster-uri` ( or `subscription` and `cluster-name`). Result is a list of database names, returned as a JSON array.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "cluster-uri": {
                        "type": "string",
                        "description": "Kusto Cluster URI."
                    },
                    "cluster-name": {
                        "type": "string",
                        "description": "Kusto Cluster name."
                    }
                },
                "required": [
                    "subscription"
                ]
            },
            "annotations": "null",
            "returns": {
                "kusto_databases": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of Kusto database objects. Each object includes the following fields:\n'name': str - The name of the database.\n'id': str - The resource ID of the database.\n'location': str - The Azure region where the database is located.\n'provisioningState': str - The provisioning state of the database (e.g., Succeeded, Creating, Running)."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails due to invalid credentials or configuration.",
                "PermissionError": "If the authenticated identity lacks the necessary permissions to list databases on the specified Kusto cluster.",
                "ResourceNotFoundError": "If the Kusto cluster specified by `cluster_uri` or by the `subscription` and `cluster_name` combination cannot be found.",
                "InvalidInputError": "If the required parameters for identifying the Kusto cluster (either `cluster_uri`, or both `subscription` and `cluster_name`) are not provided correctly or are ambiguous.",
                "ServiceError": "If an unexpected error occurs within the Azure Kusto service or dependent Azure services."
            }
        },
        {
            "name": "azmcp-kusto-query",
            "description": "Execute a KQL against items in a Kusto cluster.\r\nRequires `cluster-uri` (or `cluster-name` and `subscription`), `database-name`, and `query`. \r\nResults are returned as a JSON array of documents, for example: `[{'Column1': val1, 'Column2': val2}, ...]`.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "cluster-uri": {
                        "type": "string",
                        "description": "Kusto Cluster URI."
                    },
                    "cluster-name": {
                        "type": "string",
                        "description": "Kusto Cluster name."
                    },
                    "database-name": {
                        "type": "string",
                        "description": "Kusto Database name."
                    },
                    "query": {
                        "type": "string",
                        "description": "Kusto query to execute. Uses KQL syntax."
                    }
                },
                "required": [
                    "subscription",
                    "database-name",
                    "query"
                ]
            },
            "annotations": "null",
            "returns": {
                "query_results": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of dictionaries, where each dictionary represents a row from the Kusto query results.\nEach dictionary contains key-value pairs. The keys are strings representing the column names returned by the KQL query, and the values are the data for those columns in the row.\nThe specific keys (column names) and the types of their values are determined by the KQL query. For a given row (dictionary) in the list, the structure would be:\n'ColumnName1FromQuery': type_of_Column1 (e.g., str, int, bool, datetime) - The value of ColumnName1 for this row.\n'ColumnName2FromQuery': type_of_Column2 (e.g., str, int, bool, datetime) - The value of ColumnName2 for this row.\n... (and so on for all columns returned by the query).\n\nExample of the entire list: `[{'ActualColumnNameA': 'some_text', 'ActualColumnNameB': 100}, {'ActualColumnNameA': 'more_text', 'ActualColumnNameB': 200}]`"
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to query the database.",
                "ResourceNotFoundError": "If the specified Kusto cluster or database does not exist.",
                "InvalidInputError": "If required parameters are missing or the KQL query syntax is invalid.",
                "QueryExecutionError": "If the KQL query fails to execute due to semantic errors, timeout, or other issues.",
                "ServiceError": "If there is an issue with the Azure Kusto service."
            }
        },
        {
            "name": "azmcp-kusto-sample",
            "description": "Return a sample of rows from the specified table in an Kusto table.\r\nRequires `cluster-uri` (or `cluster-name`), `database-name`, and `table-name`. \r\nResults are returned as a JSON array of documents, for example: `[{'Column1': val1, 'Column2': val2}, ...]`.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "cluster-uri": {
                        "type": "string",
                        "description": "Kusto Cluster URI."
                    },
                    "cluster-name": {
                        "type": "string",
                        "description": "Kusto Cluster name."
                    },
                    "database-name": {
                        "type": "string",
                        "description": "Kusto Database name."
                    },
                    "table-name": {
                        "type": "string",
                        "description": "Kusto Table name."
                    }
                },
                "required": [
                    "subscription",
                    "database-name",
                    "table-name"
                ]
            },
            "annotations": "null",
            "returns": {
                "sample_rows": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of dictionaries, where each dictionary represents a sample row from the Kusto table.\nEach dictionary contains key-value pairs corresponding to the table's columns and their values for that row.\nThe keys are column names (str), and the values are of types corresponding to the Kusto table schema (e.g., str, int, float, bool, datetime).\nExample of a single row dictionary structure within the list:\n'ColumnName1': type_from_schema - Value from 'ColumnName1'\n'ColumnName2': type_from_schema - Value from 'ColumnName2'\n... (other columns based on table schema)"
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to sample data from the table.",
                "ResourceNotFoundError": "If the specified Kusto cluster, database, or table does not exist.",
                "InvalidInputError": "If required parameters like `database_name` or `table_name` are missing, if neither `cluster_uri` nor `cluster_name` is provided, or if any other input parameter is invalid (e.g., incorrect type, invalid value).",
                "ServiceError": "If there is an issue with the Azure Kusto service or the underlying Kusto query execution fails."
            }
        },
        {
            "name": "azmcp-kusto-table-list",
            "description": "List all tables in a specific Kusto database. Required `cluster-uri` (or `subscription` and `cluster-name`) and `database-name` .Returns table names as a JSON array.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "cluster-uri": {
                        "type": "string",
                        "description": "Kusto Cluster URI."
                    },
                    "cluster-name": {
                        "type": "string",
                        "description": "Kusto Cluster name."
                    },
                    "database-name": {
                        "type": "string",
                        "description": "Kusto Database name."
                    }
                },
                "required": [
                    "subscription",
                    "database-name"
                ]
            },
            "annotations": "null",
            "returns": {
                "kusto_tables": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of dictionaries, where each dictionary represents a Kusto table and has the following keys:\n'name': str - The name of the table.\n'columns': Optional[List[Dict[str, str]]] - A list of dictionaries, where each dictionary describes a column and has the keys:\n  'name': str - The name of the column.\n  'type': str - The data type of the column."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to list tables.",
                "ResourceNotFoundError": "If the specified Kusto cluster or database does not exist.",
                "InvalidInputError": "If required parameters are missing, or if the combination of cluster identification parameters (`cluster_uri` vs. `subscription_id`, `cluster_name`) is invalid.",
                "ServiceError": "If there is an issue with the Azure Kusto service."
            }
        },
        {
            "name": "azmcp-kusto-table-schema",
            "description": "Get the schema of a specific table in an Kusto database.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "cluster-uri": {
                        "type": "string",
                        "description": "Kusto Cluster URI."
                    },
                    "cluster-name": {
                        "type": "string",
                        "description": "Kusto Cluster name."
                    },
                    "database-name": {
                        "type": "string",
                        "description": "Kusto Database name."
                    },
                    "table-name": {
                        "type": "string",
                        "description": "Kusto Table name."
                    }
                },
                "required": [
                    "subscription",
                    "database-name",
                    "table-name"
                ]
            },
            "annotations": "null",
            "returns": {
                "table_schema": {
                    "description": "The schema of the Kusto table. Contains the following keys:\n'name': str - The name of the table.\n'columns': List[Dict[str, str]] - A list of columns in the table. Each dictionary in the list represents a column and contains:\n  'name': str - The name of the column.\n  'type': str - The CSL data type of the column (e.g., 'string', 'long', 'datetime').\n'databaseName': str - The name of the database containing the table.",
                    "type": "Dict[str, Any]"
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to view the table schema.",
                "ResourceNotFoundError": "If the specified Kusto cluster, database, or table does not exist.",
                "InvalidInputError": "If required parameters are missing or invalid (e.g., neither cluster_uri nor cluster_name is provided).",
                "ServiceError": "If there is an issue with the Azure Kusto service."
            }
        },
        {
            "name": "azmcp-monitor-healthmodels-entity-gethealth",
            "description": "Gets the health of an entity from a specified Azure Monitor Health Model.\r\nReturns entity health information.\r\n\r\nRequired arguments:\r\n- entity: The entity to get health for\r\n- model-name: The health model name",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "entity": {
                        "type": "string",
                        "description": "The entity to get health for."
                    },
                    "model-name": {
                        "type": "string",
                        "description": "The name of the health model for which to get the health."
                    },
                    "resource-group": {
                        "type": "string",
                        "description": "The name of the Azure resource group. This is a logical container for Azure resources."
                    }
                },
                "required": [
                    "subscription",
                    "entity",
                    "model-name",
                    "resource-group"
                ]
            },
            "annotations": "null",
            "returns": {
                "entity_health_status": {
                    "type": "Dict[str, Any]",
                    "description": "Health information for the specified entity. Contains the following keys:\n'entityId': str - The ID of the entity whose health is reported.\n'healthState': str - The current health state of the entity (e.g., 'Healthy', 'Unhealthy', 'Warning').\n'causes': List[Dict[str, Any]] - A list of causes contributing to the health state. Each item in the list is a dictionary representing a cause and contains:\n  'description': str - Description of the cause.\n  'severity': str - Severity of the cause (e.g., 'Critical', 'Error', 'Warning', 'Information').\n  'recommendedActions': List[str] - Recommended actions to address the cause."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to access health model data.",
                "ResourceNotFoundError": "If the specified health model or entity does not exist.",
                "InvalidInputError": "If required parameters like entity_id or model_name are missing or invalid.",
                "ServiceError": "If there is an issue with the Azure Monitor service, or the service returns an unexpected error."
            }
        },
        {
            "name": "azmcp-monitor-log-query",
            "description": "Execute a KQL query against a Log Analytics workspace. Requires workspace\r\nand resource group. Optional hours\r\n(default: 24) and limit\r\n(default: 20) parameters.\r\nThe query parameter accepts KQL syntax.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "workspace": {
                        "type": "string",
                        "description": "The Log Analytics workspace ID or name. This can be either the unique identifier (GUID) or the display name of your workspace."
                    },
                    "table-name": {
                        "type": "string",
                        "description": "The name of the table to query. This is the specific table within the workspace."
                    },
                    "query": {
                        "type": "string",
                        "description": "The KQL query to execute against the Log Analytics workspace. You can use predefined queries by name:\n- 'recent': Shows most recent logs ordered by TimeGenerated\n- 'errors': Shows error-level logs ordered by TimeGenerated\nOtherwise, provide a custom KQL query."
                    },
                    "hours": {
                        "type": "string",
                        "description": "The number of hours to query back from now."
                    },
                    "limit": {
                        "type": "string",
                        "description": "The maximum number of results to return."
                    },
                    "resource-group": {
                        "type": "string",
                        "description": "The name of the Azure resource group. This is a logical container for Azure resources."
                    }
                },
                "required": [
                    "subscription",
                    "workspace",
                    "table-name",
                    "query",
                    "resource-group"
                ]
            },
            "annotations": "null",
            "returns": {
                "log_query_results": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of log entries matching the KQL query. Each entry in the list is a dictionary representing a single row from the query results.\nThe structure of each dictionary (i.e., its keys and value types) is determined by the columns projected by the KQL query.\nExample fields that might be present in each dictionary entry:\n'TimeGenerated': str - Timestamp of the log entry, typically in ISO 8601 format (e.g., '2023-01-01T10:00:00Z').\n'Computer': str - Name of the computer, device, or source that generated the log.\n'Message': str - The textual content of the log message.\n'Severity': str - The severity level of the log (e.g., 'Error', 'Warning', 'Information').\n<OtherColumns>: Any - Additional columns as defined and projected by your specific KQL query."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication with Azure fails or the provided credentials are invalid or insufficient.",
                "PermissionError": "If the authenticated identity does not have the necessary permissions to query the specified Log Analytics workspace.",
                "ResourceNotFoundError": "If the specified Log Analytics workspace does not exist, or if a table referenced (either via `table_name` parameter or within the `kql_query`) cannot be found.",
                "InvalidInputError": "If required parameters (e.g., `subscription_id`, `workspace_name`, `resource_group_name`, `kql_query`) are missing, or if any parameter value is malformed (e.g., invalid `kql_query` syntax, non-integer for `hours_ago`).",
                "QueryExecutionError": "If the KQL query fails to execute due to issues such as semantic errors in the query, resource limitations, or query timeout.",
                "ServiceError": "If an unexpected error occurs within the Azure Monitor Log Analytics service during query processing."
            }
        },
        {
            "name": "azmcp-monitor-table-list",
            "description": "List all tables in a Log Analytics workspace. Requires workspace.\r\nReturns table names and schemas that can be used for constructing KQL queries.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "workspace": {
                        "type": "string",
                        "description": "The Log Analytics workspace ID or name. This can be either the unique identifier (GUID) or the display name of your workspace."
                    },
                    "table-type": {
                        "type": "string",
                        "description": "The type of table to query. Options: 'CustomLog', 'AzureMetrics', etc."
                    },
                    "resource-group": {
                        "type": "string",
                        "description": "The name of the Azure resource group. This is a logical container for Azure resources."
                    }
                },
                "required": [
                    "subscription",
                    "workspace",
                    "table-type",
                    "resource-group"
                ]
            },
            "annotations": "null",
            "returns": {
                "workspace_tables": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of tables in the Log Analytics workspace. Each table object in the list contains the following fields:\n'name': str - The name of the table.\n'id': str - The resource ID of the table.\n'timespan': str - The retention period for the table data (e.g., 'P90D' for 90 days).\n'schema': Dict[str, Any] - The schema definition for the table. This dictionary contains:\n  'name': str - The name of the table (repeated for clarity within the schema object).\n  'displayName': str - The display name of the table.\n  'columns': List[Dict[str, str]] - A list of columns. Each column object in this list details a column in the table and contains:\n    'name': str - The name of the column.\n    'type': str - The data type of the column (e.g., 'string', 'datetime', 'real')."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to list tables in the workspace.",
                "ResourceNotFoundError": "If the specified Log Analytics workspace does not exist.",
                "InvalidInputError": "If required parameters such as 'subscription_id', 'workspace_name', or 'resource_group_name' are missing or provided with invalid values.",
                "ServiceError": "If there is an issue with the Azure Monitor Log Analytics service."
            }
        },
        {
            "name": "azmcp-monitor-table-type-list",
            "description": "List available table types in a Log Analytics workspace. Returns table type names.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "workspace": {
                        "type": "string",
                        "description": "The Log Analytics workspace ID or name. This can be either the unique identifier (GUID) or the display name of your workspace."
                    }
                },
                "required": [
                    "subscription",
                    "workspace"
                ]
            },
            "annotations": "null",
            "returns": {
                "table_types": {
                    "type": "List[str]",
                    "description": "A list of available table type names in the Log Analytics workspace (e.g., 'AzureDiagnostics', 'CustomLogs')."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to list table types.",
                "ResourceNotFoundError": "If the specified Log Analytics workspace does not exist.",
                "InvalidInputError": "If required parameter 'workspace_name' is missing.",
                "ServiceError": "If there is an issue with the Azure Monitor Log Analytics service."
            }
        },
        {
            "name": "azmcp-monitor-workspace-list",
            "description": "List Log Analytics workspaces in a subscription. This command retrieves all Log Analytics workspaces\r\navailable in the specified Azure subscription, displaying their names, IDs, and other key properties.\r\nUse this command to identify workspaces before querying their logs or tables.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    }
                },
                "required": [
                    "subscription"
                ]
            },
            "annotations": "null",
            "returns": {
                "log_analytics_workspaces": {
                    "description": "A list of Log Analytics workspaces. Each dictionary in the list represents a workspace and contains the following fields:\n'name': str - The name of the Log Analytics workspace.\n'id': str - The Azure Resource Manager (ARM) ID of the workspace.\n'location': str - The Azure region where the workspace is located.\n'customerId': str - The unique identifier for the workspace customer.\n'sku': Dict[str, str] - Stock Keeping Unit (SKU) details for the workspace. This dictionary contains:\n  'name': str - The name of the SKU (e.g., 'PerGB2018', 'Standalone').\n'provisioningState': str - The provisioning state of the workspace (e.g., 'Succeeded', 'Creating', 'Failed').",
                    "type": "List[Dict[str, Any]]"
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to list Log Analytics workspaces.",
                "SubscriptionNotFoundError": "If the specified subscription ID is not found.",
                "ServiceError": "If there is an issue with the Azure Monitor Log Analytics service."
            }
        },
        {
            "name": "azmcp-postgres-database-list",
            "description": "Lists all databases in the PostgreSQL server.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "resource-group": {
                        "type": "string",
                        "description": "The name of the Azure resource group. This is a logical container for Azure resources."
                    },
                    "user-name": {
                        "type": "string",
                        "description": "The user name to access PostgreSQL server."
                    },
                    "server": {
                        "type": "string",
                        "description": "The PostgreSQL server to be accessed."
                    }
                },
                "required": [
                    "subscription",
                    "resource-group",
                    "user-name",
                    "server"
                ]
            },
            "annotations": "null",
            "returns": {
                "postgres_databases": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of PostgreSQL databases on the server.\nEach database object contains details such as:\nname: str - The name of the database.\nid: str - The Azure resource ID of the database.\ncharset: Optional[str] - The character set used by the database (e.g., 'UTF8').\ncollation: Optional[str] - The collation order used by the database (e.g., 'en_US.utf8')."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid for the PostgreSQL server or Azure management.",
                "PermissionError": "If the authenticated user does not have permission to list databases.",
                "ResourceNotFoundError": "If the specified PostgreSQL server or resource group does not exist.",
                "InvalidInputError": "If required parameters like server name or resource group are missing or invalid.",
                "ServiceError": "If there is an issue with the Azure Database for PostgreSQL service or connecting to the server."
            }
        },
        {
            "name": "azmcp-postgres-database-query",
            "description": "Executes a query on the PostgreSQL database.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "resource-group": {
                        "type": "string",
                        "description": "The name of the Azure resource group. This is a logical container for Azure resources."
                    },
                    "user-name": {
                        "type": "string",
                        "description": "The user name to access PostgreSQL server."
                    },
                    "server": {
                        "type": "string",
                        "description": "The PostgreSQL server to be accessed."
                    },
                    "database": {
                        "type": "string",
                        "description": "The PostgreSQL database to be access."
                    },
                    "query": {
                        "type": "string",
                        "description": "Query to be executed against a PostgreSQL database."
                    }
                },
                "required": [
                    "subscription",
                    "resource-group",
                    "user-name",
                    "server",
                    "database",
                    "query"
                ]
            },
            "annotations": "null",
            "returns": {
                "query_results": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of dictionaries, where each dictionary represents a single row returned by the SQL query.\nEach dictionary in the list maps column names to their values for that row:\n- Keys (column names): str - The name of a database column returned by the query.\n- Values (column data): Any - The data for that column in the row. The specific Python type depends on the PostgreSQL data type of the column.\nExample: `[{'product_id': 10, 'product_name': 'Laptop', 'price': 1200.50}, {'product_id': 20, 'product_name': 'Mouse', 'price': 25.00}]`"
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails for the PostgreSQL database (e.g., invalid credentials, unsupported auth method).",
                "PermissionError": "If the connected database user does not have sufficient permissions to execute the query or access the specified objects.",
                "ResourceNotFoundError": "If the specified Azure PostgreSQL server or database does not exist within the given subscription and resource group.",
                "InvalidInputError": "If required parameters are missing, parameter values are malformed, or the SQL query syntax is invalid.",
                "QueryExecutionError": "If the SQL query fails to execute on the database due to runtime errors such as constraint violations, deadlocks, or other database-specific issues not related to syntax or permissions.",
                "ServiceError": "If there is an issue with the Azure Database for PostgreSQL service itself or an unexpected problem occurs while connecting to or communicating with the server."
            }
        },
        {
            "name": "azmcp-postgres-server-config",
            "description": "Retrieve the configuration of a PostgreSQL server.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "resource-group": {
                        "type": "string",
                        "description": "The name of the Azure resource group. This is a logical container for Azure resources."
                    },
                    "user-name": {
                        "type": "string",
                        "description": "The user name to access PostgreSQL server."
                    },
                    "server": {
                        "type": "string",
                        "description": "The PostgreSQL server to be accessed."
                    }
                },
                "required": [
                    "subscription",
                    "resource-group",
                    "user-name",
                    "server"
                ]
            },
            "annotations": "null",
            "returns": {
                "server_configurations": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of server configuration parameters.\nEach configuration object contains:\nname: str - The name of the configuration parameter.\nvalue: str - The current value of the parameter.\ndescription: str - A description of the parameter.\ndataType: str - The data type of the parameter value (e.g., 'Integer', 'String', 'Boolean', 'Enumeration').\nallowedValues: Optional[str] - A comma-separated list of allowed values, if applicable.\nsource: str - The source of the configuration value (e.g., 'system-default', 'user-override')."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails for Azure management.",
                "PermissionError": "If the user does not have permission to view server configurations.",
                "ResourceNotFoundError": "If the specified PostgreSQL server or resource group does not exist.",
                "InvalidInputError": "If required parameters are missing.",
                "ServiceError": "If there is an issue with the Azure Database for PostgreSQL service."
            }
        },
        {
            "name": "azmcp-postgres-server-list",
            "description": "Lists all PostgreSQL servers in the specified subscription.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "resource-group": {
                        "type": "string",
                        "description": "The name of the Azure resource group. This is a logical container for Azure resources."
                    },
                    "user-name": {
                        "type": "string",
                        "description": "The user name to access PostgreSQL server."
                    }
                },
                "required": [
                    "subscription",
                    "resource-group",
                    "user-name"
                ]
            },
            "annotations": "null",
            "returns": {
                "postgres_servers": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of PostgreSQL server details. Each item in the list is a dictionary with the following keys:\n'name': str - The name of the PostgreSQL server.\n'id': str - The Azure Resource Manager ID of the server.\n'location': str - The Azure region where the server is located.\n'sku': Dict[str, Any] - Object containing SKU details. Keys within 'sku':\n  'name': str - Name of the SKU (e.g., 'GP_Gen5_2').\n  'tier': str - Service tier of the SKU (e.g., 'GeneralPurpose', 'MemoryOptimized', 'Burstable').\n  'capacity': int - vCores capacity or other capacity indicator.\n  'family': str - Hardware generation family (e.g., 'Gen5').\n'administratorLogin': str - The administrator login username for the server.\n'version': str - The version of PostgreSQL server (e.g., '11', '12', '13').\n'state': str - The current provisioning state of the server (e.g., 'Ready', 'Disabled', 'Updating')."
                }
            },
            "raises": {
                "AuthenticationError": "Raised if authentication with Azure fails (e.g., invalid credentials, expired token, misconfigured service principal).",
                "PermissionError": "Raised if the authenticated principal does not have sufficient permissions to list PostgreSQL servers in the specified subscription and resource group.",
                "SubscriptionNotFoundError": "Raised if the provided subscription_id does not correspond to an existing and accessible Azure subscription.",
                "InvalidInputError": "Raised if any required input parameters are missing, or if any provided parameters are malformed or invalid (e.g., non-existent resource_group_name).",
                "ServiceError": "Raised if an unexpected error occurs within the Azure Database for PostgreSQL service or dependent Azure services during the request."
            }
        },
        {
            "name": "azmcp-postgres-server-param",
            "description": "Retrieves a specific parameter of a PostgreSQL server.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "resource-group": {
                        "type": "string",
                        "description": "The name of the Azure resource group. This is a logical container for Azure resources."
                    },
                    "user-name": {
                        "type": "string",
                        "description": "The user name to access PostgreSQL server."
                    },
                    "server": {
                        "type": "string",
                        "description": "The PostgreSQL server to be accessed."
                    },
                    "param": {
                        "type": "string",
                        "description": "The PostgreSQL parameter to be accessed."
                    }
                },
                "required": [
                    "subscription",
                    "resource-group",
                    "user-name",
                    "server",
                    "param"
                ]
            },
            "annotations": "null",
            "returns": {
                "server_parameter_details": {
                    "type": "Dict[str, Any]",
                    "description": "Details of the specified server configuration parameter. This dictionary contains the following keys:\nname: str - The name of the configuration parameter (e.g., 'max_connections').\nvalue: str - The current value of the parameter.\ndescription: str - A detailed description of what the parameter controls.\ndataType: str - The data type of the parameter's value (e.g., 'Integer', 'Boolean', 'String', 'Enum').\nallowedValues: Optional[str] - A string representing the allowed values for the parameter if it's an enum or has a specific range (e.g., 'ON,OFF', '0-1000'). The value is null if the parameter does not have a predefined set of allowed values.\nsource: str - Indicates the source of the current parameter value (e.g., 'system-default', 'user-override', 'dynamic')."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication with Azure management services fails (e.g., invalid credentials, expired token).",
                "PermissionError": "If the authenticated identity does not have sufficient permissions to view the specified server parameter.",
                "ResourceNotFoundError": "If the specified PostgreSQL server, resource group, or parameter name does not exist within the given subscription.",
                "InvalidInputError": "If required input parameters are missing, or if any parameter is malformed or out of acceptable range.",
                "ServiceError": "If an unexpected error occurs within the Azure Database for PostgreSQL service or other dependent Azure services during the operation."
            }
        },
        {
            "name": "azmcp-postgres-table-list",
            "description": "Lists all tables in the PostgreSQL database.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "resource-group": {
                        "type": "string",
                        "description": "The name of the Azure resource group. This is a logical container for Azure resources."
                    },
                    "user-name": {
                        "type": "string",
                        "description": "The user name to access PostgreSQL server."
                    },
                    "server": {
                        "type": "string",
                        "description": "The PostgreSQL server to be accessed."
                    },
                    "database": {
                        "type": "string",
                        "description": "The PostgreSQL database to be access."
                    }
                },
                "required": [
                    "subscription",
                    "resource-group",
                    "user-name",
                    "server",
                    "database"
                ]
            },
            "annotations": "null",
            "returns": {
                "postgres_tables": {
                    "description": "A list of tables in the PostgreSQL database.\nEach table object contains:\nschema_name: str - The name of the schema the table belongs to.\ntable_name: str - The name of the table.",
                    "type": "List[Dict[str, Any]]"
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails for the PostgreSQL database.",
                "PermissionError": "If the database user does not have permission to list tables.",
                "ResourceNotFoundError": "If the specified server or database does not exist.",
                "InvalidInputError": "If required parameters are missing.",
                "ServiceError": "If there is an issue with the Azure Database for PostgreSQL service or connecting to the server."
            }
        },
        {
            "name": "azmcp-postgres-table-schema",
            "description": "Retrieves the schema of a specified table in a PostgreSQL database.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "resource-group": {
                        "type": "string",
                        "description": "The name of the Azure resource group. This is a logical container for Azure resources."
                    },
                    "user-name": {
                        "type": "string",
                        "description": "The user name to access PostgreSQL server."
                    },
                    "server": {
                        "type": "string",
                        "description": "The PostgreSQL server to be accessed."
                    },
                    "database": {
                        "type": "string",
                        "description": "The PostgreSQL database to be access."
                    },
                    "table": {
                        "type": "string",
                        "description": "The PostgreSQL table to be access."
                    }
                },
                "required": [
                    "subscription",
                    "resource-group",
                    "user-name",
                    "server",
                    "database",
                    "table"
                ]
            },
            "annotations": "null",
            "returns": {
                "table_schema_details": {
                    "description": "A list of dictionaries, where each dictionary describes a column in the specified table. Each dictionary contains the following keys:\n'column_name': str - The name of the column.\n'data_type': str - The data type of the column as reported by PostgreSQL (e.g., 'integer', 'character varying', 'timestamp with time zone').\n'is_nullable': str - Indicates if the column can accept NULL values ('YES' if nullable, 'NO' otherwise).\n'column_default': Optional[str] - The default value expression for the column. This will be null if no default is set.",
                    "type": "List[Dict[str, Any]]"
                }
            },
            "raises": {
                "AuthenticationError": "If authentication with Azure or the PostgreSQL database fails. This could be due to invalid credentials, misconfigured 'auth_method', or insufficient permissions for the identity.",
                "PermissionError": "If the authenticated database user does not have the necessary permissions to view the schema of the specified table.",
                "ResourceNotFoundError": "If the specified Azure PostgreSQL server, database, or table cannot be found or is not accessible with the provided identifiers.",
                "InvalidInputError": "If any required input parameters are missing, or if provided parameter values are malformed, of an incorrect type, or outside the expected range (e.g., invalid table name format).",
                "ServiceError": "If an unexpected error occurs within the Azure Database for PostgreSQL service, or if there's a problem connecting to or communicating with the server (e.g., network issues, server-side transient errors)."
            }
        },
        {
            "name": "azmcp-redis-cache-accesspolicy-list",
            "description": "List the Access Policies and Assignments for the specified Redis cache. Returns an array of Redis Access Policy Assignment details.\r\nUse this command to explore which Access Policies have been assigned to which identities for your Redis cache.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "cache": {
                        "type": "string",
                        "description": "The name of the Redis cache (e.g., my-redis-cache)."
                    },
                    "resource-group": {
                        "type": "string",
                        "description": "The name of the Azure resource group. This is a logical container for Azure resources."
                    }
                },
                "required": [
                    "subscription",
                    "cache",
                    "resource-group"
                ]
            },
            "annotations": "null",
            "returns": {
                "access_policy_assignments": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of Redis Access Policy Assignments. Each item in the list is a dictionary representing an assignment with the following keys:\n'name': str - The name of the access policy assignment.\n'accessPolicyName': str - The name of the access policy (e.g., 'Data Contributor', 'Data Reader').\n'objectId': str - The object ID of the principal (user, group, or service principal).\n'objectIdAlias': str - The alias of the object ID (e.g., user principal name, service principal display name)."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to list access policies for the specified Redis cache.",
                "ResourceNotFoundError": "If the specified Redis cache or resource group does not exist.",
                "InvalidInputError": "If required parameters such as cache name or resource group are missing or malformed.",
                "ServiceError": "If there is an issue with the Azure Cache for Redis service or dependent Azure services."
            }
        },
        {
            "name": "azmcp-redis-cache-list",
            "description": "List all Redis Cache resources in a specified subscription. Returns an array of Redis Cache details.\r\nUse this command to explore which Redis Cache resources are available in your subscription.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    }
                },
                "required": [
                    "subscription"
                ]
            },
            "annotations": "null",
            "returns": {
                "redis_caches": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of dictionaries, where each dictionary represents a Redis Cache resource. Each dictionary contains the following keys:\n'name': str - The name of the Redis cache.\n'id': str - The resource ID of the Redis cache.\n'location': str - The Azure region where the cache is located.\n'sku': Dict[str, Any] - SKU details for the cache. This dictionary contains:\n  'name': str - The name of the SKU tier (e.g., 'Basic', 'Standard', 'Premium').\n  'family': str - The SKU family (e.g., 'C' for Basic/Standard, 'P' for Premium).\n  'capacity': int - Numeric representation of the SKU's capacity level (e.g., 0 for C0/P0, 1 for C1/P1).\n'provisioningState': str - The provisioning state of the cache (e.g., 'Creating', 'Succeeded', 'Failed').\n'hostName': str - The host name of the Redis cache instance.\n'port': int - The non-SSL port number for connecting to the cache.\n'sslPort': int - The SSL port number for secure connection to the cache."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to list Redis caches in the specified subscription.",
                "SubscriptionNotFoundError": "If the specified subscription ID is not found or is invalid.",
                "ServiceError": "If there is an issue with the Azure Cache for Redis service or the underlying Azure platform when trying to retrieve the cache list."
            }
        },
        {
            "name": "azmcp-redis-cluster-database-list",
            "description": "List the databases in the specified Redis Cluster resource. Returns an array of Redis database details.\r\nUse this command to explore which databases are available in your Redis Cluster.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "cluster": {
                        "type": "string",
                        "description": "The name of the Redis cluster (e.g., my-redis-cluster)."
                    },
                    "resource-group": {
                        "type": "string",
                        "description": "The name of the Azure resource group. This is a logical container for Azure resources."
                    }
                },
                "required": [
                    "subscription",
                    "cluster",
                    "resource-group"
                ]
            },
            "annotations": "null",
            "returns": {
                "redis_cluster_databases": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of databases within the specified Redis Enterprise cluster. Each object in the list represents a database and contains the following fields:\n'name': str - The name of the database (e.g., 'default').\n'id': str - The unique resource ID of the database.\n'provisioningState': str - The current provisioning state of the database (e.g., 'Succeeded', 'Creating', 'Deleting', 'Failed').\n'clientProtocol': str - The client protocol supported by the database (e.g., 'Encrypted' for TLS connections, 'Plaintext' for non-TLS).\n'port': int - The network port number for connecting to this specific database.\n'clusteringPolicy': str - The clustering policy employed by the database (e.g., 'OSSCluster' for open-source Redis compatible clustering, 'EnterpriseCluster' for Redis Enterprise specific clustering).\n'modules': List[Dict[str, str]] - A list of Redis modules enabled for this database. Each module dictionary in this list contains:\n  'name': str - The name of the enabled Redis module (e.g., 'RedisJSON', 'RediSearch').\n  'version': str - The version string of the enabled Redis module."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails due to invalid credentials, expired tokens, or insufficient setup for the chosen authentication method.",
                "PermissionError": "If the authenticated identity (user, service principal, or managed identity) does not have the necessary Azure RBAC permissions to list databases in the specified Redis Cluster.",
                "ResourceNotFoundError": "If the specified Redis Cluster (identified by 'cluster_name') or the containing 'resource_group_name' does not exist within the given 'subscription_id'.",
                "InvalidInputError": "If required parameters such as 'cluster_name', 'resource_group_name', or 'subscription_id' are missing, or if any provided parameter is malformed, out of range, or of an incorrect type.",
                "ServiceError": "If an unexpected error occurs within the Azure Cache for Redis Enterprise service while attempting to process the request, or if the service is temporarily unavailable."
            }
        },
        {
            "name": "azmcp-redis-cluster-list",
            "description": "List all Redis Cluster resources in a specified subscription. Returns an array of Redis Cluster details.\r\nUse this command to explore which Redis Cluster resources are available in your subscription.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    }
                },
                "required": [
                    "subscription"
                ]
            },
            "annotations": "null",
            "returns": {
                "redis_clusters": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of dictionaries, where each dictionary represents a Redis Enterprise Cluster resource. Each dictionary contains the following keys:\n'name': str - The name of the Redis cluster.\n'id': str - The resource ID of the Redis cluster.\n'location': str - The Azure region where the cluster is located.\n'sku': Dict[str, Any] - SKU details. This dictionary contains the keys:\n  'name': str - The name of the SKU (e.g., 'Enterprise_E10').\n  'capacity': int - The capacity of the SKU.\n'hostName': str - The host name (endpoint) of the Redis cluster.\n'provisioningState': str - The provisioning state of the cluster (e.g., 'Succeeded', 'Creating', 'Failed').\n'minimumTlsVersion': str - The minimum TLS version supported by the cluster (e.g., '1.2')."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to list Redis clusters in the specified subscription.",
                "SubscriptionNotFoundError": "If the specified subscription ID is not found or is invalid.",
                "ServiceError": "If there is an issue with the Azure Cache for Redis Enterprise service or the underlying Azure infrastructure."
            }
        },
        {
            "name": "azmcp-search-index-describe",
            "description": "Get the full definition of an Azure AI Search index. Returns the complete index configuration including\r\nfields, analyzers, suggesters, scoring profiles, and other settings.\r\n\r\nRequired arguments:\r\n- service-name: The name of the Azure AI Search service\r\n- index-name: The name of the search index to retrieve",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "service-name": {
                        "type": "string",
                        "description": "The name of the Azure AI Search service (e.g., my-search-service)."
                    },
                    "index-name": {
                        "type": "string",
                        "description": "The name of the search index within the Azure AI Search service."
                    }
                },
                "required": [
                    "service-name",
                    "index-name"
                ]
            },
            "annotations": "null",
            "returns": {
                "search_index_definition": {
                    "type": "Dict[str, Any]",
                    "description": "The full definition of the search index, including:\nname: str - The name of the index.\nfields: List[Dict[str, Any]] - A list of field definitions, each containing:\n  name: str - The name of the field.\n  type: str - The data type of the field (e.g., 'Edm.String', 'Edm.Int32', 'Collection(Edm.String)').\n  key: bool - Indicates if the field is the primary key.\n  searchable: bool - Indicates if the field is full-text searchable.\n  filterable: bool - Indicates if the field can be used in filter expressions.\n  sortable: bool - Indicates if the field can be used in orderby expressions.\n  facetable: bool - Indicates if the field can be used in faceted navigation.\n  retrievable: bool - Indicates if the field can be returned in search results.\n  analyzer: Optional[str] - The name of the analyzer used for this field.\nsuggesters: Optional[List[Dict[str, Any]]] - A list of suggester configurations. Each suggester configuration typically includes:\n  name: str - The name of the suggester.\n  searchMode: str - The search mode to be used (e.g., 'analyzingInfixMatching').\n  sourceFields: List[str] - A list of field names that are the source of terms for suggestions.\nscoringProfiles: Optional[List[Dict[str, Any]]] - A list of scoring profile configurations. Each scoring profile configuration typically includes:\n  name: str - The name of the scoring profile.\n  text: Optional[Dict[str, Any]] - Text scoring parameters. This typically includes:\n    weights: Dict[str, float] - A dictionary where keys are field names and values are weights (numbers) for those fields.\n  functions: Optional[List[Dict[str, Any]]] - A list of scoring functions. Each function configuration typically includes:\n    type: str - The type of the scoring function (e.g., 'magnitude', 'freshness', 'distance', 'tag').\n    boost: float - A multiplier for the raw score generated by the function.\n    fieldName: str - The name of the field to be used in the scoring function.\n    interpolation: Optional[str] - The interpolation method for the function (e.g., 'linear', 'constant', 'quadratic', 'logarithmic').\n    parameters: Optional[Dict[str, Any]] - Parameters specific to the function type. For example, for 'freshness', parameters like 'boostingDuration' might be included.\nanalyzers: Optional[List[Dict[str, Any]]] - A list of custom analyzer definitions. Each analyzer definition typically includes:\n  name: str - The name of the analyzer.\n  @odata.type: str - The specific type of the analyzer (e.g., '#Microsoft.Azure.Search.CustomAnalyzer', '#Microsoft.Azure.Search.StandardAnalyzerV2').\n  tokenizer: str - The name of the tokenizer used by the analyzer (e.g., 'standard_v2', 'whitespace').\n  tokenFilters: Optional[List[str]] - An optional list of token filter names to be used.\n  charFilters: Optional[List[str]] - An optional list of character filter names to be used.\ncorsOptions: Optional[Dict[str, Any]] - Cross-Origin Resource Sharing (CORS) options for the index. This typically includes:\n  allowedOrigins: List[str] - A list of origins that are permitted to make cross-origin requests (e.g., '*', 'https://www.example.com').\n  maxAgeInSeconds: Optional[int] - The duration, in seconds, that a preflight CORS request can be cached by the client's browser.\netag: str - The ETag of the index definition, used for optimistic concurrency control."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to describe the index.",
                "ResourceNotFoundError": "If the specified Azure AI Search service or index name does not exist.",
                "InvalidInputError": "If required parameters service-name or index-name are missing.",
                "ServiceError": "If there is an issue with the Azure AI Search service."
            }
        },
        {
            "name": "azmcp-search-index-list",
            "description": "List all indexes in an Azure AI Search service.\r\n\r\nRequired arguments:\r\n- service-name",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "service-name": {
                        "type": "string",
                        "description": "The name of the Azure AI Search service (e.g., my-search-service)."
                    }
                },
                "required": [
                    "service-name"
                ]
            },
            "annotations": "null",
            "returns": {
                "search_indexes": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of dictionaries, where each dictionary represents an Azure AI Search index.\nEach index dictionary commonly includes the following keys:\n'name': str - The name of the index.\n'@odata.etag': Optional[str] - The ETag of the index, used for optimistic concurrency control.\n'fields': List[Dict[str, Any]] - A list of field definitions for the index. Each field definition dictionary within this list typically includes:\n  'name': str - The name of the field.\n  'type': str - The data type of the field (e.g., 'Edm.String', 'Edm.Int32', 'Collection(Edm.String)').\n  'key': bool - True if this field is the primary key of the index; False otherwise.\n  'retrievable': bool - True if the field content can be retrieved in search results; False otherwise.\n  'searchable': bool - True if the field is full-text searchable; False otherwise.\n  'filterable': bool - True if the field can be used in $filter expressions; False otherwise.\n  'sortable': bool - True if the field can be used in $orderby expressions; False otherwise.\n  'facetable': bool - True if the field can be used for faceted navigation; False otherwise.\n  'analyzerName': Optional[str] - The name of the language analyzer used for this field.\n  'searchAnalyzerName': Optional[str] - The name of the search analyzer used for this field.\n  'indexAnalyzerName': Optional[str] - The name of the index analyzer used for this field.\n  'synonymMapNames': Optional[List[str]] - A list of synonym map names associated with this field."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to list indexes.",
                "ResourceNotFoundError": "If the specified Azure AI Search service does not exist.",
                "InvalidInputError": "If the required parameter 'service-name' is missing.",
                "ServiceError": "If there is an issue with the Azure AI Search service."
            }
        },
        {
            "name": "azmcp-search-index-query",
            "description": "Query an Azure AI Search index. Returns search results matching the specified query.\r\n\r\nRequired arguments:\r\n- service-name: The name of the Azure AI Search service\r\n- index-name: The name of the search index to query\r\n- query: The search text to query with",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "service-name": {
                        "type": "string",
                        "description": "The name of the Azure AI Search service (e.g., my-search-service)."
                    },
                    "index-name": {
                        "type": "string",
                        "description": "The name of the search index within the Azure AI Search service."
                    },
                    "query": {
                        "type": "string",
                        "description": "The search query to execute against the Azure AI Search index."
                    }
                },
                "required": [
                    "service-name",
                    "index-name",
                    "query"
                ]
            },
            "annotations": "null",
            "returns": {
                "search_results": {
                    "description": "The results of the search query. This dictionary contains the following keys:\n'@odata.count': Optional[int] - The total count of matching documents if the $count=true parameter was included in the query.\n'value': List[Dict[str, Any]] - A list of matching documents. Each document in the list is a dictionary whose structure depends on the fields in the index and the 'select' parameter of the query. Common fields within each document include:\n  '@search.score': float - The relevance score of the document for the query.\n  (other_document_fields): Varies - Other fields from the document as defined in the search index schema and requested by the query (e.g., 'id': str, 'title': str, 'last_modified': datetime).\n'@search.facets': Optional[Dict[str, List[Dict[str, Any]]]] - Facet results, if facets were requested in the query. This is a dictionary where each key is a faceted field name. The value is a list of facet 'bins', where each bin is a dictionary typically containing:\n  'value': Any - The specific value for the facet (e.g., a category name, a numerical range start).\n  'count': int - The number of documents matching this facet value.\n  'from': Optional[Any] - For range facets, the lower bound of the range (inclusive).\n  'to': Optional[Any] - For range facets, the upper bound of the range (exclusive).\n'@search.coverage': Optional[float] - The percentage of the index that was included in the query. This is relevant for sharded indexes where not all shards might respond or if query execution times out.",
                    "type": "Dict[str, Any]"
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to query the index.",
                "ResourceNotFoundError": "If the specified Azure AI Search service or index name does not exist.",
                "InvalidInputError": "If required parameters are missing or the query syntax is invalid.",
                "QueryExecutionError": "If the search query fails to execute due to semantic errors, resource limitations, or other issues during query processing.",
                "ServiceError": "If there is an issue with the Azure AI Search service itself, or an unexpected error occurs."
            }
        },
        {
            "name": "azmcp-search-service-list",
            "description": "List all Azure AI Search services in a subscription.\r\n\r\nRequired arguments:\r\n- subscription",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    }
                },
                "required": [
                    "subscription"
                ]
            },
            "annotations": "null",
            "returns": {
                "search_services": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of Azure AI Search services.\nEach service object contains:\nname: str - The name of the search service.\nid: str - The resource ID of the search service.\nlocation: str - The Azure region where the service is located.\nsku: Dict[str, str] - SKU details, including:\n  name: str - The name of the SKU (e.g., 'basic', 'standard', 'free').\nstatus: str - The status of the search service (e.g., 'running', 'provisioning').\nprovisioningState: str - The provisioning state (e.g., 'Succeeded').\nreplicaCount: int - The number of replicas.\npartitionCount: int - The number of partitions."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to list search services.",
                "SubscriptionNotFoundError": "If the specified subscription ID is not found.",
                "ServiceError": "If there is an issue with the Azure AI Search management service."
            }
        },
        {
            "name": "azmcp-servicebus-queue-details",
            "description": "Get details about a Service Bus queue. Returns queue properties and runtime information. Properties returned include\r\nlock duration, max message size, queue size, creation date, status, current message counts, etc.\r\n\r\nRequired arguments:\r\n- namespace: The fully qualified Service Bus namespace host name. (This is usually in the form <namespace>.servicebus.windows.net)\r\n- queue-name: Queue name to get details and runtime information for.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "queue-name": {
                        "type": "string",
                        "description": "The queue name to peek messages from."
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The fully qualified Service Bus namespace host name. (This is usually in the form <namespace>.servicebus.windows.net)"
                    }
                },
                "required": [
                    "subscription",
                    "queue-name",
                    "namespace"
                ]
            },
            "annotations": "null",
            "returns": {
                "queue_details": {
                    "type": "Dict[str, Any]",
                    "description": "Detailed properties and runtime information for the Service Bus queue. Keys:\n'name': str - The name of the queue.\n'lockDuration': str - ISO 8601 lock duration of a message.\n'maxSizeInMegabytes': int - Maximum size of the queue in megabytes.\n'requiresDuplicateDetection': bool - Indicates if duplicate detection is enabled.\n'requiresSession': bool - Indicates if sessions are required.\n'defaultMessageTimeToLive': str - ISO 8601 default message time to live.\n'deadLetteringOnMessageExpiration': bool - Indicates if dead lettering is enabled on message expiration.\n'duplicateDetectionHistoryTimeWindow': str - ISO 8601 duplicate detection history time window.\n'maxDeliveryCount': int - Maximum delivery count for a message.\n'status': str - Status of the queue (e.g., 'Active', 'Disabled').\n'createdAt': str - Timestamp of when the queue was created (ISO 8601 format).\n'updatedAt': str - Timestamp of the last update (ISO 8601 format).\n'sizeInBytes': int - Current size of the queue in bytes.\n'messageCount': int - Number of messages currently in the queue.\n'activeMessageCount': int - Number of active messages.\n'deadLetterMessageCount': int - Number of dead-letter messages.\n'scheduledMessageCount': int - Number of scheduled messages.\n'transferMessageCount': int - Number of messages in transfer state.\n'transferDeadLetterMessageCount': int - Number of dead-letter messages in transfer state."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid for the Service Bus namespace.",
                "PermissionError": "If the authenticated user does not have permission to get queue details.",
                "ResourceNotFoundError": "If the specified Service Bus namespace or queue name does not exist.",
                "InvalidInputError": "If required parameters 'namespace', 'queue_name', or 'subscription' are missing or invalid.",
                "ServiceError": "If there is an issue with the Azure Service Bus service."
            }
        },
        {
            "name": "azmcp-servicebus-topic-details",
            "description": "Get details about a Service Bus topic. Returns topic properties and runtime information. Properties returned include\r\nnumber of subscriptions, max message size, max topic size, number of scheduled messages, etc.\r\n\r\nRequired arguments:\r\n- namespace: The fully qualified Service Bus namespace host name. (This is usually in the form <namespace>.servicebus.windows.net)\r\n- topic-name: Topic name to get information about.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "topic-name": {
                        "type": "string",
                        "description": "The name of the topic containing the subscription."
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The fully qualified Service Bus namespace host name. (This is usually in the form <namespace>.servicebus.windows.net)"
                    }
                },
                "required": [
                    "subscription",
                    "topic-name",
                    "namespace"
                ]
            },
            "annotations": "null",
            "returns": {
                "topic_details": {
                    "type": "Dict[str, Any]",
                    "description": "Detailed properties and runtime information for the Service Bus topic.\nname: str - The name of the topic.\nmaxSizeInMegabytes: int - Maximum size of the topic in megabytes.\nrequiresDuplicateDetection: bool - Indicates if duplicate detection is enabled.\ndefaultMessageTimeToLive: str - ISO 8601 default message time to live.\nduplicateDetectionHistoryTimeWindow: str - ISO 8601 duplicate detection history time window.\nstatus: str - Status of the topic (e.g., 'Active', 'Disabled').\ncreatedAt: str - Timestamp of when the topic was created (ISO 8601 format).\nupdatedAt: str - Timestamp of the last update (ISO 8601 format).\nsizeInBytes: int - Current size of the topic in bytes.\nsubscriptionCount: int - Number of subscriptions to this topic.\nscheduledMessageCount: int - Number of scheduled messages."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid for the Service Bus namespace.",
                "PermissionError": "If the authenticated user does not have permission to get topic details.",
                "ResourceNotFoundError": "If the specified Service Bus namespace or topic name does not exist.",
                "InvalidInputError": "If required parameters namespace or topic-name are missing.",
                "ServiceError": "If there is an issue with the Azure Service Bus service."
            }
        },
        {
            "name": "azmcp-servicebus-topic-subscription-details",
            "description": "Get details about a Service Bus subscription. Returns subscription runtime properties including message counts, delivery settings, and other metadata.\r\n\r\nRequired arguments:\r\n- namespace: The fully qualified Service Bus namespace host name. (This is usually in the form <namespace>.servicebus.windows.net)\r\n- topic-name: Topic name containing the subscription\r\n- subscription-name: Name of the subscription to get details for",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "subscription-name": {
                        "type": "string",
                        "description": "The name of subscription to peek messages from."
                    },
                    "topic-name": {
                        "type": "string",
                        "description": "The name of the topic containing the subscription."
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The fully qualified Service Bus namespace host name. (This is usually in the form <namespace>.servicebus.windows.net)"
                    }
                },
                "required": [
                    "subscription",
                    "subscription-name",
                    "topic-name",
                    "namespace"
                ]
            },
            "annotations": "null",
            "returns": {
                "subscription_details": {
                    "type": "Dict[str, Any]",
                    "description": "Detailed properties and runtime information for the Service Bus subscription, including:\n'name': str - The name of the subscription.\n'topicName': str - The name of the topic this subscription is associated with.\n'lockDuration': str - ISO 8601 duration format string for how long a message is locked for processing by a receiver (e.g., 'PT1M' for 1 minute).\n'requiresSession': bool - Indicates if the subscription requires messages to be grouped by session ID. If true, a receiver must use a session-aware client.\n'defaultMessageTimeToLive': str - ISO 8601 duration format string for the default time-to-live of a message sent to this subscription (e.g., 'P14D' for 14 days). Messages older than this are expired.\n'deadLetteringOnMessageExpiration': bool - Indicates if messages that expire (exceed their time-to-live) are automatically moved to the dead-letter sub-queue of this subscription.\n'deadLetteringOnFilterEvaluationExceptions': bool - Indicates if messages that cause an exception during SQL filter evaluation are automatically moved to the dead-letter sub-queue.\n'maxDeliveryCount': int - The maximum number of times a message can be delivered. If a message is delivered more than this count, it is moved to the dead-letter sub-queue.\n'status': str - Current status of the subscription (e.g., 'Active', 'Disabled', 'SendDisabled', 'ReceiveDisabled').\n'createdAt': str - Timestamp in ISO 8601 format indicating when the subscription was created.\n'updatedAt': str - Timestamp in ISO 8601 format indicating when the subscription was last updated.\n'messageCount': int - Total number of messages in the subscription, sum of active, dead-lettered, scheduled, transfer, and transfer dead-lettered messages.\n'activeMessageCount': int - Number of active messages in the subscription that are available for immediate processing.\n'deadLetterMessageCount': int - Number of messages in the dead-letter sub-queue of this subscription. These messages failed processing or expired.\n'scheduledMessageCount': int - Number of messages in the subscription that are scheduled to be delivered at a future time.\n'transferMessageCount': int - Number of messages that are currently being transferred from this subscription to another queue or topic.\n'transferDeadLetterMessageCount': int - Number of messages in the dead-letter sub-queue of the transfer destination entity for messages that were transferred from this subscription."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails due to invalid credentials, expired tokens, or insufficient principal rights for accessing the Azure Service Bus namespace.",
                "PermissionError": "If the authenticated identity does not have the required 'Reader' or equivalent permissions to get subscription details from the Service Bus namespace.",
                "ResourceNotFoundError": "If the specified Service Bus namespace, topic, or subscription name does not exist in the Azure subscription.",
                "InvalidInputError": "If required parameters (namespace, topic_name, subscription_name, subscription_id) are missing, or if any input parameter is malformed or does not meet validation criteria.",
                "ServiceError": "If an unexpected error occurs within the Azure Service Bus service itself, or due to a client-side issue (e.g., network connectivity problems not handled by retries)."
            }
        },
        {
            "name": "azmcp-storage-account-list",
            "description": "List all Storage accounts in a subscription. This command retrieves all Storage accounts available\r\nin the specified subscription. Results include account names and are\r\nreturned as a JSON array.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    }
                },
                "required": [
                    "subscription"
                ]
            },
            "annotations": "null",
            "returns": {
                "storage_accounts": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of Storage accounts. Each dictionary in the list represents a storage account and includes the following key-value pairs:\n'name': str - The name of the storage account.\n'id': str - The Azure Resource Manager ID of the storage account.\n'location': str - The Azure region where the storage account is located.\n'kind': str - The kind of storage account (e.g., 'StorageV2', 'BlobStorage', 'FileStorage').\n'sku': Dict[str, str] - Stock Keeping Unit (SKU) details for the storage account. This dictionary contains:\n  'name': str - The name of the SKU (e.g., 'Standard_LRS', 'Premium_ZRS').\n  'tier': str - The tier of the SKU (e.g., 'Standard', 'Premium').\n'provisioningState': str - The provisioning state of the storage account (e.g., 'Succeeded', 'Creating').\n'primaryEndpoints': Dict[str, str] - A dictionary of primary service endpoint URIs for the storage account. Keys are service types (e.g., 'blob', 'queue', 'table', 'file'), and values are their corresponding URIs."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to list storage accounts.",
                "SubscriptionNotFoundError": "If the specified subscription ID is not found.",
                "ServiceError": "If there is an issue with the Azure Storage management service."
            }
        },
        {
            "name": "azmcp-storage-blob-container-details",
            "description": "Get detailed properties of a storage container including metadata, lease status, and access level.\r\nRequires account-name and container-name.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "account-name": {
                        "type": "string",
                        "description": "The name of the Azure Storage account. This is the unique name you chose for your storage account (e.g., 'mystorageaccount')."
                    },
                    "container-name": {
                        "type": "string",
                        "description": "The name of the container to access within the storage account."
                    }
                },
                "required": [
                    "subscription",
                    "account-name",
                    "container-name"
                ]
            },
            "annotations": "null",
            "returns": {
                "container_properties": {
                    "description": "A dictionary representing the detailed properties of the storage container. Keys:\n'name': str - The name of the container.\n'lastModified': str - Timestamp of the last modification (ISO 8601 format).\n'etag': str - The ETag of the container.\n'leaseStatus': str - The lease status of the container (e.g., 'locked', 'unlocked').\n'leaseState': str - The lease state of the container (e.g., 'available', 'leased', 'expired', 'breaking', 'broken').\n'publicAccess': Optional[str] - The level of public access for the container (e.g., 'blob', 'container', or null if no public access).\n'hasImmutabilityPolicy': bool - Indicates if the container has an immutability policy.\n'hasLegalHold': bool - Indicates if the container has a legal hold.\n'metadata': Optional[Dict[str, str]] - User-defined metadata for the container.",
                    "type": "Dict[str, Any]"
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails for the storage account.",
                "PermissionError": "If the user does not have permission to get container properties.",
                "ResourceNotFoundError": "If the specified storage account or container does not exist.",
                "InvalidInputError": "If required parameters `account_name` or `container_name` are missing.",
                "ServiceError": "If there is an issue with the Azure Blob Storage service."
            }
        },
        {
            "name": "azmcp-storage-blob-container-list",
            "description": "List all containers in a Storage account. This command retrieves and displays all containers available\r\nin the specified account. Results include container names and are returned as a JSON array.\r\nRequires account-name.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "account-name": {
                        "type": "string",
                        "description": "The name of the Azure Storage account. This is the unique name you chose for your storage account (e.g., 'mystorageaccount')."
                    }
                },
                "required": [
                    "subscription",
                    "account-name"
                ]
            },
            "annotations": "null",
            "returns": {
                "blob_containers": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of blob containers in the storage account.\nEach container object contains:\nname: str - The name of the container.\nlastModified: str - Timestamp of the last modification (ISO 8601 format).\netag: str - The ETag of the container.\nleaseStatus: str - The lease status of the container.\npublicAccess: Optional[str] - The level of public access for the container."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails for the storage account.",
                "PermissionError": "If the user does not have permission to list containers.",
                "ResourceNotFoundError": "If the specified storage account does not exist.",
                "InvalidInputError": "If the required parameter 'account-name' is missing.",
                "ServiceError": "If there is an issue with the Azure Blob Storage service."
            }
        },
        {
            "name": "azmcp-storage-blob-list",
            "description": "List all blobs in a Storage container. This command retrieves and displays all blobs available\r\nin the specified container and Storage account. Results include blob names, sizes, and content types,\r\nreturned as a JSON array. Requires account-name and\r\ncontainer-name.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "account-name": {
                        "type": "string",
                        "description": "The name of the Azure Storage account. This is the unique name you chose for your storage account (e.g., 'mystorageaccount')."
                    },
                    "container-name": {
                        "type": "string",
                        "description": "The name of the container to access within the storage account."
                    }
                },
                "required": [
                    "subscription",
                    "account-name",
                    "container-name"
                ]
            },
            "annotations": "null",
            "returns": {
                "blobs_in_container": {
                    "type": "List[Dict[str, Any]]",
                    "description": "A list of dictionaries, where each dictionary represents a blob in the container. Each blob dictionary contains the following keys:\n'name': str - The name of the blob.\n'properties': Dict[str, Any] - A dictionary containing blob properties. This dictionary includes:\n  'lastModified': str - Timestamp of the last modification, in ISO 8601 format.\n  'etag': str - The ETag of the blob, representing its version.\n  'contentLength': int - The size of the blob in bytes.\n  'contentType': str - The content type of the blob (e.g., 'application/octet-stream').\n  'blobType': str - The type of blob (e.g., 'BlockBlob', 'PageBlob', 'AppendBlob').\n  'leaseStatus': str - The lease status of the blob (e.g., 'locked', 'unlocked').\n  'accessTier': Optional[str] - The access tier of the blob (e.g., 'Hot', 'Cool', 'Archive'), if applicable.\n'metadata': Optional[Dict[str, str]] - A dictionary of user-defined metadata for the blob, where keys are metadata names (str) and values are metadata values (str)."
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails for the storage account.",
                "PermissionError": "If the user does not have permission to list blobs.",
                "ResourceNotFoundError": "If the specified storage account or container does not exist.",
                "InvalidInputError": "If required parameters like `account_name` or `container_name` are missing or invalid.",
                "ServiceError": "If there is an issue with the Azure Blob Storage service."
            }
        },
        {
            "name": "azmcp-storage-table-list",
            "description": "List all tables in a Storage account. This command retrieves and displays all tables available in the specified Storage account.\r\nResults include table names and are returned as a JSON array. You must specify an account name and subscription ID.\r\nUse this command to explore your Storage resources or to verify table existence before performing operations on specific tables.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    },
                    "subscription": {
                        "type": "string",
                        "description": "The Azure subscription ID or name. This can be either the GUID identifier or the display name of the Azure subscription to use."
                    },
                    "account-name": {
                        "type": "string",
                        "description": "The name of the Azure Storage account. This is the unique name you chose for your storage account (e.g., 'mystorageaccount')."
                    }
                },
                "required": [
                    "subscription",
                    "account-name"
                ]
            },
            "annotations": "null",
            "returns": {
                "storage_tables": {
                    "description": "A list of dictionaries, where each dictionary represents a table in the storage account.\nEach dictionary contains the following key:\n'TableName': str - The name of the table.",
                    "type": "List[Dict[str, Any]]"
                }
            },
            "raises": {
                "AuthenticationError": "Raised if authentication fails for the storage account or the Azure Table service.",
                "PermissionError": "Raised if the authenticated user or service principal does not have the necessary permissions to list tables in the specified storage account.",
                "ResourceNotFoundError": "Raised if the specified storage account does not exist, or if the Table service is not supported or enabled for the account.",
                "InvalidInputError": "Raised if required input parameters, such as 'account_name' or 'subscription_id', are missing or invalid.",
                "ServiceError": "Raised if an unexpected error occurs within the Azure Table Storage service during the operation."
            }
        },
        {
            "name": "azmcp-subscription-list",
            "description": "List all Azure subscriptions accessible to your account. Optionally specify tenant\r\nand auth-method. Results include subscription names and IDs, returned as a JSON array.",
            "inputSchema": {
                "type": "object",
                "properties": {
                    "auth-method": {
                        "type": "string",
                        "description": "Authentication method to use. Options: 'credential' (Azure CLI/managed identity), 'key' (access key), or 'connectionString'."
                    },
                    "tenant": {
                        "type": "string",
                        "description": "The Azure Active Directory tenant ID or name. This can be either the GUID identifier or the display name of your Azure AD tenant."
                    },
                    "retry-max-retries": {
                        "type": "string",
                        "description": "Maximum number of retry attempts for failed operations before giving up."
                    },
                    "retry-delay": {
                        "type": "string",
                        "description": "Initial delay in seconds between retry attempts. For exponential backoff, this value is used as the base."
                    },
                    "retry-max-delay": {
                        "type": "string",
                        "description": "Maximum delay in seconds between retries, regardless of the retry strategy."
                    },
                    "retry-mode": {
                        "type": "string",
                        "description": "Retry strategy to use. 'fixed' uses consistent delays, 'exponential' increases delay between attempts."
                    },
                    "retry-network-timeout": {
                        "type": "string",
                        "description": "Network operation timeout in seconds. Operations taking longer than this will be cancelled."
                    }
                },
                "required": []
            },
            "annotations": "null",
            "returns": {
                "azure_subscriptions": {
                    "description": "A list of Azure subscriptions accessible to the account. Each object in the list represents a subscription and contains:\n'id': str - The subscription ID (GUID).\n'subscriptionId': str - The subscription ID (GUID, often duplicated for convenience).\n'displayName': str - The friendly name of the subscription.\n'state': str - The state of the subscription (e.g., 'Enabled', 'Warned', 'PastDue', 'Disabled').\n'tenantId': str - The tenant ID associated with the subscription.",
                    "type": "List[Dict[str, Any]]"
                }
            },
            "raises": {
                "AuthenticationError": "If authentication fails or credentials are invalid.",
                "PermissionError": "If the authenticated user does not have permission to list subscriptions.",
                "ServiceError": "If there is an issue with the Azure Resource Manager or authentication services.",
                "TenantNotFoundError": "If a specified tenant ID is invalid or inaccessible."
            }
        }
    ]
}