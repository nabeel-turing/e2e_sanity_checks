# This file is automatically generated by the MutationBuilder

def find_videos(search_term, content_type='VIDEO'):
    """
    Search for videos, channels, or playlists on YouTube.

    Args:
        search_term (str): The query with which search should be performed. Must be a non-empty string.
        content_type (Optional[str]): Enum to specify search result type. Can be "VIDEO", "CHANNEL" or "PLAYLIST". Defaults to "VIDEO".

    Returns:
        List[Dict[str, Any]]: A list of dictionaries containing search results.
        For result_type = "VIDEO" - List[Dict[str, Any]] with keys: 'channel_avatar_url', 'channel_external_id', 'channel_name', 'external_video_id', 'like_count', 'publish_date', 'search_query', 'search_url', Optional['snippets'], 'title', 'url', 'video_length', 'view_count'
        For result_type = "CHANNEL" - List[Dict[str, Any]] with keys: 'channel_avatar_url', 'channel_name', 'channel_external_id', 'search_query', 'search_url', Optional['snippets'], 'url'
        For result_type = "PLAYLIST" - List[Dict[str, Any]] with keys: 'channel_avatar_url', 'channel_external_id', 'channel_name', Optional['external_playlist_id'], Optional['playlist_name'], Optional['playlist_video_ids'], 'search_query', 'search_url', Optional['snippets'], 'url'
        TypeError: If query is not a string or other parameters are of incorrect types.
        ValueError: If query is an empty string or not provided
                    or if the result_type(if provided) is not one of the following: VIDEO, CHANNEL, PLAYLIST.
        APIError: If the search result is not found.
        ExtractionError: If the results are not found in the response.
        EnvironmentError: If the environment variables GOOGLE_API_KEY or GEMINI_API_KEY or LIVE_API_URL are not set.
    """
    from youtube_tool.youtube_search import search
    return search(query=search_term, result_type=content_type)
