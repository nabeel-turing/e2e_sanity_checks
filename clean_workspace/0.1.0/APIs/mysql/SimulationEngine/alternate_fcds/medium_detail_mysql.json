[
  {
    "name": "get_resource",
    "description": "Returns the column schema for a table resource, specified by a `uri` in the format `<db>/<table>/schema`. The response is a dictionary containing a `contents` list; within this list, the `text` field provides a JSON array of column objects. Each column object details the `column_name`, `data_type`, `is_nullable` ('YES' or 'NO'), and `column_default`.",
    "parameters": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "A string representing the resource URI. It must be formatted as `<db>/<table>/schema`, specifying the database, table, and indicating a schema request."
        }
      },
      "required": [
        "uri"
      ]
    }
  },
  {
    "name": "get_resources_list",
    "description": "Enumerates every user database and its tables. It returns a list of resources, where each resource provides the URI, MIME type, and name for a specific database table schema.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "mysql_query",
    "description": "Executes the provided non-empty SQL string. The function returns a dictionary, acting as a \"content envelope\", which contains a `content` key holding a list with a single element where `type` is 'text' and `text` provides the SQL execution result, either as JSON rows or a success message.",
    "parameters": {
      "type": "object",
      "properties": {
        "sql": {
          "type": "string",
          "description": "A non-empty SQL string for database query execution."
        }
      },
      "required": [
        "sql"
      ]
    }
  }
]