# This file is automatically generated by the MutationBuilder

def retrieve_playlists(youtube_channel_identifier=None, result_limit=50):
    """
    Retrieves a list of playlists with optional filters.

    Args:
        youtube_channel_identifier (Optional[str]): The channelId parameter specifies a YouTube channel ID. If not provided, all playlists will be returned.
        result_limit (Optional[int]): The max_results parameter specifies the maximum number of items that should be returned in the result set. Defaults to 50.

    Returns:
        Dict[str, Any]: A dictionary containing:
            - items (List[Dict]): List of playlist resources matching the filters.
                    - kind (str): Resource type ("youtube#playlist").
                    - id (str): The playlist ID.
                    - snippet (Dict): Playlist metadata.
                        - publishedAt (str): The date and time when the playlist was published.
                        - channelId (str): The channel ID of the playlist.
                        - title (str): The title of the playlist.
                        - list_of_videos (List[str]): The list of videos in the playlist.
                        - description (str): The description of the playlist.
                        - thumbnails (Dict): The thumbnails of the playlist.
                            - default (Dict): The default thumbnail of the playlist.
                                - url (str): The URL of the thumbnail.
                                - height (int): The height of the thumbnail.
                                - width (int): The width of the thumbnail.
                            - medium (Dict): The medium thumbnail of the playlist.
                                - url (str): The URL of the thumbnail.
                                - height (int): The height of the thumbnail.
                                - width (int): The width of the thumbnail.
                            - high (Dict): The high thumbnail of the playlist.
                                - url (str): The URL of the thumbnail.
                                - height (int): The height of the thumbnail.
                                - width (int): The width of the thumbnail.
                    - status (Dict): Playlist status information.
                        - privacyStatus (str): The privacy status of the playlist.
                    - contentDetails (Dict): Playlist content details.
                        - itemCount (int): The number of items in the playlist.
            Or an empty list if no playlists are found.
    Raises:
        ValueError: If youtube_channel_identifier(if provided) is not found in the database
                    or result_limit(if provided) is not between 1 and 50
        TypeError: If youtube_channel_identifier(if provided) is not a string 
                    or result_limit(if provided) is not an integer.
    """
    from youtube.Playlists import list_playlists
    return list_playlists(channel_id=youtube_channel_identifier, max_results=result_limit)


def fetch_playlist_by_id(playlist_identifier):
    """
    Retrieves a specific playlist by ID.

    Args:
        playlist_identifier (str): The playlist_id parameter specifies the YouTube playlist ID.

    Returns:
        Dict[str, Any]: A dictionary containing the playlist resource.
            - kind (str): Resource type ("youtube#playlist").
            - id (str): The playlist ID.
            - snippet (Dict): Playlist metadata.
                - publishedAt (str): The date and time when the playlist was published.
                - channelId (str): The channel ID of the playlist.
                - title (str): The title of the playlist.
                - list_of_videos (List[str]): The list of videos in the playlist.
                - description (str): The description of the playlist.
                - thumbnails (Dict): The thumbnails of the playlist.
                    - default (Dict): The default thumbnail of the playlist.
                        - url (str): The URL of the thumbnail.
                        - height (int): The height of the thumbnail.
                        - width (int): The width of the thumbnail.
                    - medium (Dict): The medium thumbnail of the playlist.
                        - url (str): The URL of the thumbnail.
                        - height (int): The height of the thumbnail.
                        - width (int): The width of the thumbnail.
                    - high (Dict): The high thumbnail of the playlist.
                        - url (str): The URL of the thumbnail.
                        - height (int): The height of the thumbnail.
                        - width (int): The width of the thumbnail.
            - status (Dict): Playlist status information.
                - privacyStatus (str): The privacy status of the playlist.
            - contentDetails (Dict): Playlist content details.
                - itemCount (int): The number of items in the playlist.
    Raises:
        ValueError: If playlist_identifier is not provided or playlist not found.
        TypeError: If playlist_identifier is not a string.
    """
    from youtube.Playlists import get
    return get(playlist_id=playlist_identifier)


def generate_new_playlist(
    channel_owner_id,
    playlist_name,
    playlist_summary='',
    visibility_level='public',
    initial_video_ids=None,
    playlist_images=None
):
    """
    Creates a new playlist.

    Args:
        channel_owner_id (str): The ownerId parameter specifies the YouTube channel ID of the user who owns the playlist.
        playlist_name (str): The title parameter specifies the title of the playlist.
        playlist_summary (Optional[str]): The description parameter specifies the description of the playlist. Defaults to empty string.
        visibility_level (Optional[str]): The privacyStatus parameter specifies the privacy status of the playlist. Defaults to "public". Must be one of ['public', 'private', 'unlisted'].
        initial_video_ids (Optional[List[str]]): The list_of_videos parameter specifies the list of videos in the playlist. Defaults to empty list.
        playlist_images (Optional[Dict[str, Any]]): The thumbnails parameter specifies the thumbnails of the playlist. Defaults to empty dictionary or thumbnail of the first video in the list_of_videos if list_of_videos is provided.
            default - Dictionary with default thumbnail
                url - URL of the thumbnail
                height - Height of the thumbnail
                width - Width of the thumbnail
            medium - Dictionary with medium thumbnail
                url - URL of the thumbnail
                height - Height of the thumbnail
                width - Width of the thumbnail
            high - Dictionary with high thumbnail
                url - URL of the thumbnail
                height - Height of the thumbnail
                width - Width of the thumbnail

    Returns:
        Dict[str, Any]: A dictionary containing:
            - kind (str): Resource type ("youtube#playlist").
            - id (str): The playlist ID.
            - snippet (Dict): Playlist metadata.
                - publishedAt (str): The date and time when the playlist was published.
                - channelId (str): The channel ID of the playlist.
                - title (str): The title of the playlist.
                - list_of_videos (List[str]): The list of videos in the playlist.
                - description (str): The description of the playlist.
                - thumbnails (Dict): The thumbnails of the playlist.
                    - default (Dict): The default thumbnail of the playlist.
                        - url (str): The URL of the thumbnail.
                        - height (int): The height of the thumbnail.
                        - width (int): The width of the thumbnail.
                    - medium (Dict): The medium thumbnail of the playlist.
                        - url (str): The URL of the thumbnail.
                        - height (int): The height of the thumbnail.
                        - width (int): The width of the thumbnail.
                    - high (Dict): The high thumbnail of the playlist.
                        - url (str): The URL of the thumbnail.
                        - height (int): The height of the thumbnail.
                        - width (int): The width of the thumbnail.
            - status (Dict): Playlist status information.
                - privacyStatus (str): The privacy status of the playlist.
            - contentDetails (Dict): Playlist content details.
                - itemCount (int): The number of items in the playlist.
    Raises:
        ValueError: If ownerID is not provided or playlist_name is not provided 
                    or visibility_level is not one of ['public', 'private', 'unlisted']
                    or initial_video_ids(if provided) contains videos that are not found in the database
                    or channel_owner_id is not found in the database.
        TypeError: If channel_owner_id is not a string or playlist_name is not a string 
                    or initial_video_ids(if provided) is not a list 
                    or playlist_images(if provided) is not a dictionary 
                    or playlist_summary(if provided) is not a string 
                    or visibility_level(if provided) is not a string
        ValidationError: If playlist_images(if provided) is not in the correct format
    """
    from youtube.Playlists import create
    return create(
        ownerId=channel_owner_id,
        title=playlist_name,
        description=playlist_summary,
        privacyStatus=visibility_level,
        list_of_videos=initial_video_ids,
        thumbnails=playlist_images
    )


def modify_playlist_details(
    target_playlist_id,
    new_playlist_title=None,
    updated_playlist_description=None,
    new_visibility_setting=None,
    new_playlist_thumbnails=None
):
    """
    Updates an existing playlist.

    Args:
        target_playlist_id (str): The playlist_id parameter specifies the YouTube playlist ID.
        new_playlist_title (Optional[str]): The title parameter specifies the new title of the playlist.
        updated_playlist_description (Optional[str]): The description parameter specifies the new description of the playlist.
        new_visibility_setting (Optional[str]): The privacyStatus parameter specifies the new privacy status of the playlist. Must be one of ['public', 'private', 'unlisted'].
        new_playlist_thumbnails (Optional[Dict[str, Any]]): The thumbnails parameter specifies the new thumbnails of the playlist.

    Returns:
        Dict[str, Any]: A dictionary containing the updated playlist resource.
            - kind (str): Resource type ("youtube#playlist").
            - id (str): The playlist ID.
            - snippet (Dict): Updated playlist metadata.
                - publishedAt (str): The date and time when the playlist was published.
                - channelId (str): The channel ID of the playlist.
                - title (str): The title of the playlist.
                - list_of_videos (List[str]): The list of videos in the playlist.
                - description (str): The description of the playlist.
                - thumbnails (Optional(Dict)): The thumbnails of the playlist.
                    - default (Dict): The default thumbnail of the playlist.
                        - url (str): The URL of the thumbnail.
                        - height (int): The height of the thumbnail.
                        - width (int): The width of the thumbnail.
                    - medium (Dict): The medium thumbnail of the playlist.
                        - url (str): The URL of the thumbnail.
                        - height (int): The height of the thumbnail.
                        - width (int): The width of the thumbnail.
                    - high (Dict): The high thumbnail of the playlist.
                        - url (str): The URL of the thumbnail.
                        - height (int): The height of the thumbnail.
                        - width (int): The width of the thumbnail.
            - status (Dict): Updated playlist status information.
                - privacyStatus (str): The privacy status of the playlist.
            - contentDetails (Dict): Playlist content details.
                - itemCount (int): The number of items in the playlist.

    Raises:
        ValueError: If target_playlist_id is not provided or playlist not found or new_visibility_setting is invalid.
        TypeError: If parameters are not of correct types.
        ValidationError: If new_playlist_thumbnails(if provided) is not in the correct format.
    """
    from youtube.Playlists import update
    return update(
        playlist_id=target_playlist_id,
        title=new_playlist_title,
        description=updated_playlist_description,
        privacyStatus=new_visibility_setting,
        thumbnails=new_playlist_thumbnails
    )


def remove_playlist_by_id(playlist_to_delete_id):
    """
    Deletes a playlist.

    Args:
        playlist_to_delete_id (str): The playlist_id parameter specifies the YouTube playlist ID.

    Returns:
        bool: True if playlist is deleted.

    Raises:
        ValueError: If playlist_to_delete_id is not provided or playlist not found.
        TypeError: If playlist_to_delete_id is not a string.
    """
    from youtube.Playlists import delete
    return delete(playlist_id=playlist_to_delete_id)


def insert_video_into_playlist(destination_playlist_id, video_to_add_id):
    """
    Adds a video to a playlist.

    Args:
        destination_playlist_id (str): The playlist_id parameter specifies the YouTube playlist ID.
        video_to_add_id (str): The video_id parameter specifies the YouTube video ID to add.

    Returns:
        Dict[str, Any]: A dictionary containing the updated playlist resource.
            - kind (str): Resource type ("youtube#playlist").
            - id (str): The playlist ID.
            - snippet (Dict): Updated playlist metadata with new video added.
                - publishedAt (str): The date and time when the playlist was published.
                - channelId (str): The channel ID of the playlist.
                - title (str): The title of the playlist.
                - list_of_videos (List[str]): The list of videos in the playlist.
                - description (str): The description of the playlist.
                - thumbnails (Dict): The thumbnails of the playlist.
                    - default (Dict): The default thumbnail of the playlist.
                        - url (str): The URL of the thumbnail.
                        - height (int): The height of the thumbnail.
                        - width (int): The width of the thumbnail.
                    - medium (Dict): The medium thumbnail of the playlist.
                        - url (str): The URL of the thumbnail.
                        - height (int): The height of the thumbnail.
                        - width (int): The width of the thumbnail.
                    - high (Dict): The high thumbnail of the playlist.
                        - url (str): The URL of the thumbnail.
                        - height (int): The height of the thumbnail.
                        - width (int): The width of the thumbnail.
            - status (Dict): Playlist status information.
                - privacyStatus (str): The privacy status of the playlist.
            - contentDetails (Dict): Updated playlist content details with new item count.
                - itemCount (int): The number of items in the playlist.

    Raises:
        ValueError: If destination_playlist_id or video_to_add_id is not provided, playlist not found, or video not found in the database.
        TypeError: If video_to_add_id and destination_playlist_id are not strings.
    """
    from youtube.Playlists import add_video
    return add_video(playlist_id=destination_playlist_id, video_id=video_to_add_id)


def remove_video_from_playlist_items(source_playlist_id, video_to_remove_id):
    """
    Removes a video from a playlist.

    Args:
        source_playlist_id (str): The playlist_id parameter specifies the YouTube playlist ID.
        video_to_remove_id (str): The video_id parameter specifies the YouTube video ID to remove.

    Returns:
        bool: True if video is removed from playlist.

    Raises:
        ValueError: If source_playlist_id or video_to_remove_id is not provided, playlist not found, or video not in playlist.
        TypeError: If source_playlist_id and video_to_remove_id are not strings.
    """
    from youtube.Playlists import delete_video
    return delete_video(playlist_id=source_playlist_id, video_id=video_to_remove_id)


def change_playlist_video_sequence(playlist_to_reorder_id, new_video_id_sequence):
    """
    Reorders videos in a playlist.

    Args:
        playlist_to_reorder_id (str): The playlist_id parameter specifies the YouTube playlist ID.
        new_video_id_sequence (List[str]): The video_order parameter specifies the new order of video IDs.

    Returns:
        Dict[str, Any]: A dictionary containing the updated playlist resource.
            - kind (str): Resource type ("youtube#playlist").
            - id (str): The playlist ID.
            - snippet (Dict): Updated playlist metadata with reordered videos.
                - publishedAt (str): The date and time when the playlist was published.
                - channelId (str): The channel ID of the playlist.
                - title (str): The title of the playlist.
                - list_of_videos (List[str]): The list of videos in the playlist.
                - description (str): The description of the playlist.
                - thumbnails (Dict): The thumbnails of the playlist.
                    - default (Dict): The default thumbnail of the playlist.
                        - url (str): The URL of the thumbnail.
                        - height (int): The height of the thumbnail.
                        - width (int): The width of the thumbnail.
                    - medium (Dict): The medium thumbnail of the playlist.
                        - url (str): The URL of the thumbnail.
                        - height (int): The height of the thumbnail.
                        - width (int): The width of the thumbnail.
                    - high (Dict): The high thumbnail of the playlist.
                        - url (str): The URL of the thumbnail.
                        - height (int): The height of the thumbnail.
                        - width (int): The width of the thumbnail.
            - status (Dict): Playlist status information.
                - privacyStatus (str): The privacy status of the playlist.
            - contentDetails (Dict): Playlist content details.
                - itemCount (int): The number of items in the playlist.
    Raises:
        ValueError: If playlist_to_reorder_id is not provided, playlist not found, 
                    or new_video_id_sequence is not provided or does not contain the same videos as the current playlist.
        TypeError: If playlist_to_reorder_id is not a string or new_video_id_sequence is not a list.
    """
    from youtube.Playlists import reorder
    return reorder(playlist_id=playlist_to_reorder_id, video_order=new_video_id_sequence)
