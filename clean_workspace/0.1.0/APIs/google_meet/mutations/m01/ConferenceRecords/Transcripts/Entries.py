# This file is automatically generated by the MutationBuilder

def fetch_single_transcript_segment(entry_resource_identifier):
    """
    Gets a transcript entry by entry ID.

    Args:
        entry_resource_identifier (str): Resource name of the entry.

    Returns:
        Dict[str, Any]: A dictionary.
        - If the entry is found, returns an entry object with keys such as:
            - "id" (str): The entry identifier
            - "parent" (str): ID of the parent transcript
            - "start_time" (str): The time when the entry was created
            - "text" (str): The transcript text content
            - Additional entry-specific properties
        - If not found, returns a dictionary with:
            - "error" (str): Error message "Entry not found"
    """
    from google_meet.ConferenceRecords.Transcripts.Entries import get
    return get(name=entry_resource_identifier)


def get_all_transcript_segments(transcript_resource_id, page_limit=None, next_page_token_value=None):
    """
    Lists the entries of a transcript.

    Args:
        transcript_resource_id (str): The parent transcript resource name.
        page_limit (Optional[int]): The maximum number of entries to return.
        next_page_token_value (Optional[str]): The token for continued list pagination.

    Returns:
        Dict[str, Any]: A dictionary.
        - On successful retrieval, returns a dictionary with:
            - "entries" (List[Dict[str, Any]]): List of entry objects, each containing:
                - "id" (str): The entry identifier
                - "parent" (str): ID of the parent transcript
                - "start_time" (str): The time when the entry was created
                - "text" (str): The transcript text content
                - Additional entry-specific properties
            - "nextPageToken" (Optional[str]): Token for the next page of results, if more exist
    """
    from google_meet.ConferenceRecords.Transcripts.Entries import list
    return list(parent=transcript_resource_id, pageSize=page_limit, pageToken=next_page_token_value)
