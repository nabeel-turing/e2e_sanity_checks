# This file is automatically generated by the MutationBuilder

def retrieve_meeting_recording_by_id(recording_resource_name):
    """
    Gets a recording by recording ID.

    Args:
        recording_resource_name (str): Resource name of the recording.

    Returns:
        Dict[str, Any]: A dictionary.
        - If the recording is found, returns a recording object with keys such as:
            - "id" (str): The recording identifier
            - "parent" (str): ID of the parent conference record
            - "start_time" (str): The time when the recording started
            - Additional recording-specific properties
        - If not found, returns a dictionary with:
            - "error" (str): Error message "Recording not found"
    """
    from google_meet.ConferenceRecords.Recordings import get
    return get(name=recording_resource_name)


def enumerate_all_meeting_recordings(
    parent_resource_identifier,
    source_conference_record_id,
    results_per_page=None,
    pagination_cursor=None
):
    """
    Lists the recordings of a conference.

    Args:
        parent_resource_identifier (str): The parent resource name.
        source_conference_record_id (str): The parent conference record.
        results_per_page (Optional[int]): The maximum number of recordings to return.
        pagination_cursor (Optional[str]): The token for continued list pagination.

    Returns:
        Dict[str, Any]: A dictionary.
        - If the parent is invalid, returns a dictionary with:
            - "error" (str): Error message "Invalid parent"
        - On successful retrieval, returns a dictionary with:
            - "recordings" (List[Dict[str, Any]]): List of recording objects, each containing:
                - "id" (str): The recording identifier
                - "parent" (str): ID of the parent conference record
                - "start_time" (str): The time when the recording started
                - Additional recording-specific properties
            - "nextPageToken" (Optional[str]): Token for the next page of results, if more exist
    """
    from google_meet.ConferenceRecords.Recordings import list
    return list(
        parent=parent_resource_identifier,
        parent_conference_record=source_conference_record_id,
        pageSize=results_per_page,
        pageToken=pagination_cursor
    )
