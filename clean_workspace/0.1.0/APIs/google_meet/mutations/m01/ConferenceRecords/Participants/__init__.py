# This file is automatically generated by the MutationBuilder

def fetch_attendee_information(participant_resource_name):
    """
    Gets a participant by ID.

    Args:
        participant_resource_name (str): Resource name of the participant.

    Returns:
        Dict[str, Any]: A dictionary.
        - If the participant is found, returns a participant object with keys such as:
            - "id" (str): The participant identifier
            - "conferenceRecordId" (str): ID of the parent conference record
            - "join_time" (str): The time when the participant joined
            - Additional participant-specific properties like:
                - "email" (Optional[str]): Participant's email address
                - "displayName" (Optional[str]): Participant's display name
        - If not found, returns a dictionary with:
            - "error" (str): Error message "Participant not found"
    """
    from google_meet.ConferenceRecords.Participants import get
    return get(name=participant_resource_name)


def enumerate_all_meeting_attendees(parent_conference_resource_name, page_item_limit=None, continuation_token=None):
    """
    Lists participants of a conference record.

    Args:
        parent_conference_resource_name (str): The parent conference record resource name.
        page_item_limit (Optional[int]): The maximum number of participants to return.
        continuation_token (Optional[str]): The token for continued list pagination.

    Returns:
        Dict[str, Any]: A dictionary.
        - On successful retrieval, returns a dictionary with:
            - "participants" (List[Dict[str, Any]]): List of participant objects, each containing:
                - "id" (str): The participant identifier
                - "conferenceRecordId" (str): ID of the parent conference record
                - "join_time" (str): The time when the participant joined
                - Additional participant-specific properties
            - "nextPageToken" (Optional[str]): Token for the next page of results, if more exist
    """
    from google_meet.ConferenceRecords.Participants import list
    return list(
        parent=parent_conference_resource_name,
        pageSize=page_item_limit,
        pageToken=continuation_token
    )
