[
  {
    "name": "authenticate_service",
    "description": "Authenticate a service for API access.",
    "parameters": {
      "type": "object",
      "properties": {
        "service_name": {
          "type": "string",
          "description": "The name of the service to authenticate."
        }
      },
      "required": [
        "service_name"
      ]
    }
  },
  {
    "name": "deauthenticate_service",
    "description": "Remove authentication for a service.",
    "parameters": {
      "type": "object",
      "properties": {
        "service_name": {
          "type": "string",
          "description": "The name of the service to deauthenticate."
        }
      },
      "required": [
        "service_name"
      ]
    }
  },
  {
    "name": "is_service_authenticated",
    "description": "Check if a service is currently authenticated.",
    "parameters": {
      "type": "object",
      "properties": {
        "service_name": {
          "type": "string",
          "description": "The name of the service to check."
        }
      },
      "required": [
        "service_name"
      ]
    }
  },
  {
    "name": "list_authenticated_services",
    "description": "Get a list of all currently authenticated services.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "reset_all_authentication",
    "description": "Reset authentication status for all services.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "create_authenticated_function",
    "description": "Create a function wrapper that requires authentication.",
    "parameters": {
      "type": "object",
      "properties": {
        "service_name": {
          "type": "string",
          "description": "The service name for authentication checking."
        },
        "func": {
          "type": "object",
          "description": "The function to wrap with authentication."
        }
      },
      "required": [
        "service_name",
        "func"
      ]
    }
  }
]