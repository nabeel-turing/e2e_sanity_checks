# This file is automatically generated by the MutationBuilder

def generate_purchase_url(price_identifier, number_of_items):
    """
    Creates a payment link in Stripe.

    This function creates a payment link in Stripe. It takes the ID of the price
    to create the payment link for and the quantity of the product to include
    in the payment link.

    Args:
        price_identifier (str): The ID of the price to create the payment link for.
        number_of_items (int): The quantity of the product to include.

    Returns:
        Dict[str, Any]: A dictionary representing the Stripe payment link object that was created. It contains the following keys:
            id (str): Unique identifier for the payment link.
            object (str): String representing the object's type, typically "payment_link".
            active (bool): Whether the payment link is active and can be used to create new Checkout Sessions.
            livemode (bool): Indicates if the object exists in live mode or test mode.
            metadata (Optional[Dict[str, str]]): A set of key-value pairs that you can attach to an object. It can be useful for storing additional information about the object in a structured format.
            line_items (Dict[str, Any]): A Stripe list object containing the line items for this payment link. This dictionary contains the following keys:
                object (str): String representing the list object's type, typically "list".
                data (List[Dict[str, Any]]): A list of line item objects. Each dictionary in the list represents a line item and contains the following keys:
                    id (str): Unique identifier for the line item.
                    price (Dict[str, Any]): The price object used for this line item. This dictionary contains the following keys:
                        id (str): Unique identifier of the price.
                        product (str): Identifier of the product associated with this price.
                    quantity (int): The quantity of the product for this line item.
                has_more (bool): A flag indicating if there are more line items to be fetched for this list.
            after_completion (Dict[str, Any]): Configuration for behavior after the purchase is complete. This dictionary contains the following keys:
                type (str): The type of an after-completion behavior (e.g., 'redirect', 'hosted_confirmation').
                redirect (Optional[Dict[str, Any]]): If `type` is 'redirect', this hash contains information about the redirect configuration (e.g., a success message).

    Raises:
        InvalidRequestError: If the price_identifier ID is invalid, number_of_items is invalid, or other parameters are malformed.
        ResourceNotFoundError: If the specified price_identifier ID does not exist.
    """
    from stripe.payment import create_payment_link
    return create_payment_link(price=price_identifier, quantity=number_of_items)


def find_all_transactions(search_by_customer_id=None, result_count_limit=None):
    """
    This tool will list payment intents in Stripe.

    This function lists payment intents in Stripe. It takes an optional customer ID
    to list payment intents for a specific customer, and an optional limit to specify
    the number of payment intents to return.

    Args:
        search_by_customer_id (Optional[str]): The ID of the customer to list payment intents for.
        result_count_limit (Optional[int]): A limit on the number of objects to be returned. Limit can range between 1 and 100.

    Returns:
        Dict[str, Any]: A dictionary representing the API response for listing payment intents. This dictionary contains the following keys:
            object (str): String representing the object's type, typically "list".
            data (List[Dict[str, Any]]): A list of payment intent objects. Each payment intent dictionary in this list includes the following fields:
                id (str): Unique identifier for the payment intent.
                object (str): String representing the object's type, typically "payment_intent".
                amount (int): Amount intended to be collected, in cents.
                currency (str): Three-letter ISO currency code.
                customer (Optional[str]): ID of the customer this PaymentIntent belongs to, if one exists.
                status (str): Status of this PaymentIntent (e.g., "requires_payment_method", "succeeded").
                created (int): Unix timestamp of when the payment intent was created.
                livemode (bool): Indicates if the object exists in live mode or test mode.
                metadata (Optional[Dict[str, str]]): A set of key-value pairs associated with the payment intent.
            has_more (bool): True if there are more payment intents to retrieve, false otherwise.

    Raises:
        InvalidRequestError: If filter parameters are invalid.
        ResourceNotFoundError: If the specified search_by_customer_id ID does not exist (when provided).
    """
    from stripe.payment import list_payment_intents
    return list_payment_intents(customer=search_by_customer_id, limit=result_count_limit)
