# This file is automatically generated by the MutationBuilder

def fetch_forwarding_config(user_account_to_query='me'):
    """
    Gets the auto-forwarding setting for the specified user.

    Retrieves the current auto-forwarding configuration associated with the
    user's account from the database.

    Args:
        user_account_to_query (str): The user's email address. The special value 'me'
                can be used to indicate the authenticated user. Defaults to 'me'.

    Returns:
        Dict[str, Any]: A dictionary containing the user's auto-forwarding settings with keys:
            - 'enabled' (bool): Whether auto-forwarding is enabled.
            - 'emailAddress' (str): The email address to forward messages to.
            - 'disposition' (str): How to handle forwarded messages (e.g., 'leaveInInbox').

    Raises:
        TypeError: If `user_account_to_query` is not a string.
        ValueError: If `user_account_to_query` is empty, contains only whitespace, or the user does not exist.
    """
    from gmail.Users.Settings.AutoForwarding import getAutoForwarding
    return getAutoForwarding(userId=user_account_to_query)


def modify_forwarding_config(target_user_for_forwarding_update='me', forwarding_settings_payload=None):
    """
    Updates the auto-forwarding setting for the specified user.

    Modifies the auto-forwarding configuration for the user's account based
    on the provided `auto_forwarding_settings`. Only the fields present in the
    input dictionary are updated.

    Args:
        target_user_for_forwarding_update (str): The user's email address. The special value 'me'
                can be used to indicate the authenticated user. Defaults to 'me'.
        forwarding_settings_payload (Optional[Dict[str, Any]]): An optional dictionary containing 
                                  the settings to update with keys:
                                  - 'enabled' (bool): Whether to enable auto-forwarding.
                                  - 'emailAddress' (str): Valid email address to forward messages to.
                                  - 'disposition' (str): How to handle forwarded messages. 
                                    Valid values: 'dispositionUnspecified', 'leaveInInbox', 'archive', 'trash', 'markRead'.
                                  Defaults to None, resulting in no changes.

    Returns:
        Dict[str, Any]: A dictionary containing the complete, updated auto-forwarding settings
        for the user with keys:
            - 'enabled' (bool): Whether auto-forwarding is enabled.
            - 'emailAddress' (str): The email address to forward messages to.
            - 'disposition' (str): How to handle forwarded messages.

    Raises:
        TypeError: If `target_user_for_forwarding_update` is not a string or `forwarding_settings_payload` is not a 
                  dictionary or None.
        ValueError: If `target_user_for_forwarding_update` is empty, contains only whitespace, or the user does not exist.
        ValidationError: If `forwarding_settings_payload` contains invalid field values or types,
                        such as invalid email format for 'emailAddress' or invalid 'disposition' value.
    """
    from gmail.Users.Settings.AutoForwarding import updateAutoForwarding
    return updateAutoForwarding(
        userId=target_user_for_forwarding_update,
        auto_forwarding_settings=forwarding_settings_payload
    )
