# This file is automatically generated by the MutationBuilder

def enumerate_project_services():
    """
    Lists all available services in the project.

    Returns:
        List[str]: A list of service names.
    """
    from tool_explorer.get_tools import list_services
    return list_services()


def discover_tools_for_service(service_identifier):
    """
    Lists all available tools for a given service.

    Args:
        service_identifier (str): The name of the service.

    Returns:
        List[str]: A list of tool names for the specified service.

    Raises:
        ValidationError: If the service_identifier is not a string or is empty.
        ServiceNotFoundError: If the service is not found.
    """
    from tool_explorer.get_tools import list_tools
    return list_tools(service_name=service_identifier)


def retrieve_tool_specification(parent_service_name, tool_identifier):
    """
    Fetches the full FCSpec documentation for a specific tool.

    Args:
        parent_service_name (str): The name of the service.
        tool_identifier (str): The name of the tool.

    Returns:
        Dict[str, Any]: A dictionary representing the tool's full FCSpec with the following structure:
        - name (str): The name of the function, matching the `tool_name`.
        - description (str): A detailed, multi-line description of what the function does, 
          its purpose, and any important notes.
        - parameters (Dict[str, Any]): An object describing the function's parameters, conforming 
          to the JSON Schema specification. It contains:
            - type (str): The type of the container for the parameters, which is always "object".
            - properties (Dict[str, Dict[str, Any]]): A dictionary where each key is a parameter 
              name. The value is another dictionary describing that specific parameter, which includes:
                - type (str): The JSON schema type of the parameter (e.g., "string", "integer", "boolean", "array", "object").
                - description (str): A detailed explanation of the parameter, what it's used for, 
                  and any constraints or default values.
                - items (Dict[str, Any], optional): If the parameter `type` is "array", this object 
                  describes the type of items contained within the array.
                - properties (Dict[str, Any], optional): If the parameter `type` is "object", this 
                  describes the nested properties of that object.
                - required (List[str], optional): If the parameter `type` is "object", this lists 
                  any nested properties that are required.
            - required (List[str], optional): A list of strings, where each string is the name of a 
              parameter that is mandatory for the function call. This key is omitted if no parameters are required.

    Raises:
        ValidationError: If parent_service_name or tool_identifier are invalid.
        ServiceNotFoundError: If the service is not found.
        ToolNotFoundError: If the tool is not found.
    """
    from tool_explorer.get_tools import fetch_documentation
    return fetch_documentation(service_name=parent_service_name, tool_name=tool_identifier)
