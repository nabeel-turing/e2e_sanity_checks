# This file is automatically generated by the MutationBuilder

def execute_content_search(
    search_query_text,
    pagination_after_cursor=None,
    pagination_before_cursor=None,
    search_filter_category=None,
    seen_results_count=0,
    should_include_facets=False,
    max_results_to_return=25,
    limit_to_subreddit=False,
    filter_by_type_string=None,
    result_sorting_method='relevance',
    include_subreddit_details=False,
    time_filter_period=None,
    searchable_content_types=None
):
    """
    Searches for content based on the provided query and parameters.

    Args:
        search_query_text (str): The search query string (maximum 512 characters).
        pagination_after_cursor (Optional[str], optional): A cursor for paginating results after a certain point. Defaults to None.
        pagination_before_cursor (Optional[str], optional): A cursor for paginating results before a certain point. Defaults to None.
        search_filter_category (Optional[str], optional): The category to filter search results by (maximum 5 characters). Defaults to None.
        seen_results_count (int, optional): The number of results already seen. Defaults to 0.
        should_include_facets (bool, optional): Whether to include facet information in the results. Defaults to False.
        max_results_to_return (int, optional): The maximum number of results to return (must be between 1 and 100). Defaults to 25.
        limit_to_subreddit (bool, optional): Whether to restrict the search to the current subreddit (if applicable). Defaults to False.
        filter_by_type_string (Optional[str], optional): A string to filter results by a specific type (e.g., 'all'). Defaults to None.
        result_sorting_method (str, optional): The sorting method for results ('relevance', 'hot', 'top', 'new', 'comments'). Defaults to "relevance".
        include_subreddit_details (bool, optional): Whether to include detailed information about the subreddit. Defaults to False.
        time_filter_period (Optional[str], optional): The time filter for top or controversial sorts ('hour', 'day', 'week', 'month', 'year', 'all'). Defaults to None.
        searchable_content_types (Optional[str], optional): Comma-separated string of types to search for ('sr', 'link', 'user'). Defaults to None (all types).

    Returns:
        Dict[str, Any]: A dictionary representing a listing of items.
            The dictionary contains the following keys:
            - "kind" (str): Always "Listing".
            - "data" (dict): A dictionary containing the listing data, with the following keys:
                - "modhash" (str): An empty string.
                - "children" (list): A list of result items, where each item is a dictionary.
                - "after" (str or None): The ID of the 'data' attribute of the last item in the 'children' list, or None if the 'children' list is empty.
                - "before" (str or None): The ID of the 'data' attribute of the first item in the 'children' list, or None if the 'children' list is empty.

    Raises:
        ValueError: If the query string exceeds 512 characters.
        ValueError: If the search_filter_category exceeds 5 characters.
        ValueError: If seen_results_count is negative.
        ValueError: If max_results_to_return is not between 1 and 100.
        ValueError: If result_sorting_method is not one of 'relevance', 'hot', 'top', 'new', 'comments'.
        ValueError: If time_filter_period is provided and is not one of 'hour', 'day', 'week', 'month', 'year', 'all'.
    """
    from reddit.Search import get_search
    return get_search(
        q=search_query_text,
        after=pagination_after_cursor,
        before=pagination_before_cursor,
        category=search_filter_category,
        count=seen_results_count,
        include_facets=should_include_facets,
        limit=max_results_to_return,
        restrict_sr=limit_to_subreddit,
        show=filter_by_type_string,
        sort=result_sorting_method,
        sr_detail=include_subreddit_details,
        t=time_filter_period,
        type=searchable_content_types
    )
