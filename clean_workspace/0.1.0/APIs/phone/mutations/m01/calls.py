# This file is automatically generated by the MutationBuilder

def initiate_phone_call(
    *,
    call_target_details=None,
    use_loudspeaker=False,
    callee_name=None,
    phone_number_to_dial=None,
    callee_avatar_link=None
):
    """
    Make a call to a single recipient with exactly one phone number endpoint.

    To resolve the phone number endpoint, you may have to call one or more tools
    prior to calling this operation. Before calling this operation, always check
    if the Geofencing Policy applies. If there is a recipient with more than one
    phone number endpoints, ask the user for the intended endpoint by invoking
    show_call_recipient_choices. Do not call this operation until the user has
    chosen a single recipient with exactly one phone number endpoint.

    Args:
        call_target_details (Optional[Dict[str, Any]]): The recipient of the phone call. Contains:
            - contact_id (Optional[str]): Unique identifier for the contact
            - contact_name (Optional[str]): Name of the contact
            - contact_endpoints (Optional[List[Dict]]): List of endpoints for the contact
            - contact_photo_url (Optional[str]): URL to the contact's profile photo
            - recipient_type (Optional[str]): Type of recipient ("CONTACT", "BUSINESS", "DIRECT", "VOICEMAIL")
            - address (Optional[str]): Address of the recipient
            - distance (Optional[str]): Distance to the recipient
        use_loudspeaker (bool): If True, the phone call will be placed on the
            speakerphone. Defaults to False.
        callee_name (Optional[str]): The recipient's name.
        phone_number_to_dial (Optional[str]): The phone number of the
            recipient to make the call to, e.g. "+11234567890".
        callee_avatar_link (Optional[str]): The url to the profile photo
            of the recipient.

    Returns:
        Dict[str, Any]: A dictionary representing the observation from the tool
        call, confirming whether the call was successfully made.
    """
    from phone.calls import make_call
    return make_call(
        recipient=call_target_details,
        on_speakerphone=use_loudspeaker,
        recipient_name=callee_name,
        recipient_phone_number=phone_number_to_dial,
        recipient_photo_url=callee_avatar_link
    )


def generate_call_previews(*, list_of_potential_callees=None):
    """
    Prepare a call to one or more recipients, given provided recipient information.

    Args:
        list_of_potential_callees (Optional[List[Dict[str, Any]]]): A list of recipient objects to
            prepare call cards for. Each recipient dict contains:
            - contact_id (Optional[str]): Unique identifier for the contact
            - contact_name (Optional[str]): Name of the contact
            - contact_endpoints (Optional[List[Dict]]): List of endpoints for the contact
            - contact_photo_url (Optional[str]): URL to the contact's profile photo
            - recipient_type (Optional[str]): Type of recipient ("CONTACT", "BUSINESS", "DIRECT", "VOICEMAIL")
            - address (Optional[str]): Address of the recipient
            - distance (Optional[str]): Distance to the recipient

    Returns:
        Dict[str, Any]: A dictionary representing the observation from the tool
        call, containing information about the generated call cards.
    """
    from phone.calls import prepare_call
    return prepare_call(recipients=list_of_potential_callees)


def display_contact_selection_ui(*, recipient_options_list=None):
    """
    Show a list of one or more recipients to the user to choose from.

    This operation uses a UI component to show the list of choices. You do not
    need to enumerate the list of choices in your final response. If you call
    this operation, you may not call other operations from this tool before
    drafting the final response.

    Invoke this operation in the following scenarios:
        * There are multiple recipients (contacts or businesses) to choose from.
        * There are multiple phone number endpoints for a business to choose from.
        * There are multiple phone number endpoints for a single contact to choose from.
        * There is a single contact recipient with `confidence_level` LOW.
        * The Geofencing Policy applies.

    Args:
        recipient_options_list (Optional[List[Dict[str, Any]]]): A list of recipient objects to
            display as choices. Each recipient dict contains:
            - contact_id (Optional[str]): Unique identifier for the contact
            - contact_name (Optional[str]): Name of the contact
            - contact_endpoints (Optional[List[Dict]]): List of endpoints for the contact
            - contact_photo_url (Optional[str]): URL to the contact's profile photo
            - recipient_type (Optional[str]): Type of recipient ("CONTACT", "BUSINESS", "DIRECT", "VOICEMAIL")
            - address (Optional[str]): Address of the recipient
            - distance (Optional[str]): Distance to the recipient

    Returns:
        Dict[str, Any]: A dictionary representing the observation from the tool
        call for the list of recipients.
    """
    from phone.calls import show_call_recipient_choices
    return show_call_recipient_choices(recipients=recipient_options_list)


def report_missing_recipient(unfound_contact_name=None):
    """
    Show a message to the user when the call recipient is not found or not specified.

    You must attempt to search for a recipient before calling this operation.
    Call this operation when no match is found for a recipient, or when the user
    expresses an intent to call without specifying a recipient.

    Args:
        unfound_contact_name (Optional[str]): The recipient name that was searched for.

    Returns:
        Dict[str, Any]: A dictionary representing the observation from the tool call.
    """
    from phone.calls import show_call_recipient_not_found_or_specified
    return show_call_recipient_not_found_or_specified(contact_name=unfound_contact_name)
