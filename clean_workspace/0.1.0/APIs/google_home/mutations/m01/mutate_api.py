# This file is automatically generated by the MutationBuilder

def schedule_device_state_change(
    target_device_ids,
    traits_to_change,
    action_commands,
    new_action_values,
    execution_time_of_day=None,
    execution_calendar_date=None,
    time_period_specifier=None,
    action_duration=None
):
    """
    Changes traits of smart home devices and returns status of those changes.

    Args:
        target_device_ids (List[str]): Unique identifiers of smart home devices.
        traits_to_change (List[str]): Name of the trait to change.
        action_commands (List[str]): Name of the command. Valid values for command_names depend on trait_name.
        new_action_values (List[str]): New value of the command_name. Valid values for command_values depend on command_name.
        execution_time_of_day (Optional[str]): time in the format of "HH:MM:SS"
        execution_calendar_date (Optional[str]): date in the format of "YYYY-MM-DD"
        time_period_specifier (Optional[str]): AM or PM or UNKNOWN
        action_duration (Optional[str]): duration in the format of 5s, 20m, 1h

    Returns:
        List[Dict[str, Any]]: A list of mutation results for each device.
            - commands (Dict[str, Any]): The commands that were executed.
                - device_ids (List[str]): The IDs of the devices that were mutated.
                - commands (List[Dict[str, Any]]): The commands that were executed.
                    - trait (str): The name of the trait that was changed.
                    - command_names (List[str]): The names of the commands that were executed.
                    - command_values (List[str]): The new values of the commands.
            - result (str): The result of the mutation (e.g., 'SUCCESS', 'FAILURE').
            - device_execution_results (Dict[str, Any]): The execution results for each device.
                - text_to_speech (str): Text to be spoken to the user.
                - results (List[Dict[str, Any]]): The execution results for each device.
                    - device_id (str): The ID of the device.
                    - result (str): The result of the execution (e.g., 'SUCCESS', 'FAILURE').

    Raises:
        InvalidInputError: If the input parameters are invalid.
        DeviceNotFoundError: If any of the requested target_device_ids are not found.
    """
    from google_home.mutate_api import mutate
    return mutate(
        devices=target_device_ids,
        traits=traits_to_change,
        commands=action_commands,
        values=new_action_values,
        time_of_day=execution_time_of_day,
        date=execution_calendar_date,
        am_pm_or_unknown=time_period_specifier,
        duration=action_duration
    )
