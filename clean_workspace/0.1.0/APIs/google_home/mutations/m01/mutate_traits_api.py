# This file is automatically generated by the MutationBuilder

def change_device_properties_immediately(
    device_identifiers_to_modify,
    property_names_to_change,
    commands_to_execute,
    values_for_commands=None
):
    """
    Changes traits of smart home devices and returns status of those changes.

    Args:
        device_identifiers_to_modify (List[str]): Unique identifiers of smart home devices.
        property_names_to_change (List[str]): Name of the trait to change.
        commands_to_execute (List[str]): Name of the command. Valid values for command_names depend on trait_name.
        values_for_commands (Optional[List[str]]): New value of the command_name. Valid values for command_values depend on command_name. Default is None.

    Returns:
        List[Dict[str, Any]]: A list of mutation results for each device.
            - commands (Dict[str, Any]): The commands that were executed.
                - device_ids (List[str]): The IDs of the devices that were mutated.
                - commands (List[Dict[str, Any]]): The commands that were executed.
                    - trait (str): The name of the trait that was changed.
                    - command_names (List[str]): The names of the commands that were executed.
                    - command_values (List[str]): The new values of the commands.
            - result (str): The result of the mutation (e.g., 'SUCCESS', 'FAILURE').
            - device_execution_results (Dict[str, Any]): The execution results for each device.
                - text_to_speech (str): Text to be spoken to the user.
                - results (List[Dict[str, Any]]): The execution results for each device.
                    - device_id (str): The ID of the device.
                    - result (str): The result of the execution (e.g., 'SUCCESS', 'FAILURE').

    Raises:
        InvalidInputError: If the input parameters are invalid.
        DeviceNotFoundError: If any of the requested devices are not found.
    """
    from google_home.mutate_traits_api import mutate_traits
    return mutate_traits(
        device_ids=device_identifiers_to_modify,
        trait_names=property_names_to_change,
        command_names=commands_to_execute,
        command_values=values_for_commands
    )
