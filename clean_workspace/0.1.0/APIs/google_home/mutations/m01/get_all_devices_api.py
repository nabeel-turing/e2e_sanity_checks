# This file is automatically generated by the MutationBuilder

def list_all_user_devices(trait_filter_hints=None, type_filter_hints=None):
    """
    Retrieves all smart home devices set up by the user.

    Args:
        trait_filter_hints (Optional[List[str]]): Optional list of traits to filter for. If this is empty, all traits will
            be allowed (no filter will be enforced).
        type_filter_hints (Optional[List[str]]): Optional list of device_types to filter for. If this is empty, all
            device_types will be allowed (no filter will be enforced).

    Returns:
        List[Dict[str, Any]]: A list of smart home devices, where each device is a dictionary with the
        following structure:
        - id (str): Unique identifier for the device.
        - names (List[str]): A list of names for the device.
        - types (List[str]): A list of types for the device (e.g., 'LIGHT', 'THERMOSTAT').
        - traits (List[str]): A list of traits the device supports (e.g., 'OnOff', 'Brightness').
        - room_name (str): The name of the room the device is in.
        - structure (str): The name of the structure (e.g., home) the device is in.
        - toggles_modes (List[Dict[str, Any]]): A list of toggles and modes for the device.
            - id (str): The ID of the toggle or mode.
            - names (List[str]): A list of names for the toggle or mode.
            - settings (List[Dict[str, Any]]): A list of settings for the toggle or mode.
                - id (str): The ID of the setting.
                - names (List[str]): A list of names for the setting.
        - device_state (List[Dict[str, Any]]): The current state of the device.
            - name (str): The name of the state (e.g., 'on', 'brightness').
            - value (Any): The value of the state.

    Raises:
        InvalidInputError: If the input parameters are invalid.
    """
    from google_home.get_all_devices_api import get_all_devices
    return get_all_devices(trait_hints=trait_filter_hints, type_hints=type_filter_hints)
