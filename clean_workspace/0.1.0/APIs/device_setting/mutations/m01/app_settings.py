# This file is automatically generated by the MutationBuilder

def list_all_installed_applications():
    """
    Retrieves a list of all applications installed on the device, excluding their notification settings.

    Returns:
        Dict[str, Any]: Response containing:
            - apps (List[str]): List of installed app names
            - action_card_content_passthrough (str): Action card content for UI display
            - card_id (str): Card identifier for UI components

    Example:
        >>> get_installed_apps()
        {
            "apps": ["Messages", "Mail", "Calendar", "Photos"],
            "action_card_content_passthrough": "...",
            "card_id": "uuid-string"
        }
    """
    from device_setting.app_settings import get_installed_apps
    return get_installed_apps()


def check_application_notification_state(application_identifier):
    """
    Gets the current notification setting for a specific app.

    Args:
        application_identifier (str): Name of the app to get notification settings for

    Returns:
        Dict[str, Any]: Response containing:
            - app_name (str): Name of the app
            - notifications (str): Current notification status ("on" or "off")
            - last_updated (str): ISO timestamp of last update
            - action_card_content_passthrough (str): Action card content for UI display
            - card_id (str): Card identifier for UI components

    Raises:
        ValueError: If application_identifier is not provided or app doesn't exist in installed_apps

    Example:
        >>> get_app_notification_status("Messages")
        {
            "app_name": "Messages",
            "notifications": "on",
            "last_updated": "2024-01-15T10:30:00Z",
            "action_card_content_passthrough": "...",
            "card_id": "uuid-string"
        }
    """
    from device_setting.app_settings import get_app_notification_status
    return get_app_notification_status(app_name=application_identifier)


def configure_application_notifications(target_app_name, desired_notification_status):
    """
    Sets the current notification setting for a specific app.

    Args:
        target_app_name (str): Name of the app to modify
        desired_notification_status (str): "on" or "off" to set the notification state

    Returns:
        Dict[str, Any]: Response containing:
            - result (str): Result message of the action
            - action_card_content_passthrough (str): Action card content for UI display
            - card_id (str): Card identifier for UI components

    Raises:
        ValueError: If target_app_name is not provided, app doesn't exist, or desired_notification_status value is invalid

    Example:
        >>> set_app_notification_status("Messages", "off")
        {
            "result": "Successfully set Messages notifications to off",
            "action_card_content_passthrough": "...",
            "card_id": "uuid-string"
        }
    """
    from device_setting.app_settings import set_app_notification_status
    return set_app_notification_status(
        app_name=target_app_name,
        notifications=desired_notification_status
    )
