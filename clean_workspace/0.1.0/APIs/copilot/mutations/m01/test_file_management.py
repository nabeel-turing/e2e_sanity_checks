# This file is automatically generated by the MutationBuilder

def find_corresponding_test_or_source_file(source_or_test_file_path):
    """
    For a source code file, find the file that contains the tests. For a test file find the file that contains the code under test.

    This function processes a given `file_path`. If `file_path` points to a source code file, the function searches for the file containing its tests.
    Conversely, if `file_path` points to a test file, the function searches for the file containing the code under test.
    The outcome of this search, including the path to the related file (if found), the type of relationship, and a confidence score, is returned.

    Args:
        source_or_test_file_path (str): The absolute path to the source code file or test file for which to find its related counterpart.

    Returns:
        Dict[str, Any]: A dictionary containing details of the identified related file with the following keys:
            input_file_path (str): The path of the input file (either source or test) for which a related file was searched.
            related_file_path (Optional[str]): The path to the corresponding test file (if input was source) or source file (if input was test). Null if no confidently related file is found.
            relationship_type (Optional[str]): Describes the identified relationship, e.g., 'test_file_for_source' or 'source_file_for_test'. Null if no related file is found.
            confidence_score (Optional[float]): A score between 0.0 and 1.0 indicating the confidence in the match, if applicable and calculable. Null otherwise.

    Raises:
        FileNotFoundError: If the input file path provided in `source_or_test_file_path` does not exist in the workspace.
        ProjectConfigurationError: If project configuration or conventions needed to determine test/source relationships are missing, ambiguous, or invalid.
        SearchLogicError: If an internal error occurs within the test search logic.
        ValidationError: If input arguments fail validation.
    """
    from copilot.test_file_management import test_search
    return test_search(file_path=source_or_test_file_path)
