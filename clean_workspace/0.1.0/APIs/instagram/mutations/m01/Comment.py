# This file is automatically generated by the MutationBuilder

def leave_reply_on_post(parent_item_id, commenter_account_id, reply_text):
    """
    Adds a comment to a media post.

    Args:
        parent_item_id (str): The ID of the media post being commented on.
        commenter_account_id (str): The ID of the user making the comment.
        reply_text (str): The comment text.

    Returns:
        Dict[str, Any]: On successful creation, a dictionary with the following keys and value types:
            - id (str): The comment's unique identifier
            - media_id (str): The ID of the media post being commented on
            - user_id (str): The ID of the user making the comment
            - message (str): The comment text
            - timestamp (str): ISO format timestamp of when the comment was created

    Raises:
        TypeError: If 'parent_item_id', 'commenter_account_id', or 'reply_text' is not a string.
        ValueError: If 'parent_item_id', 'commenter_account_id', or 'reply_text' is an empty string.
        MediaNotFoundError: If the media post specified by 'parent_item_id' does not exist.
    """
    from instagram.Comment import add_comment
    return add_comment(media_id=parent_item_id, user_id=commenter_account_id, message=reply_text)


def fetch_replies_for_media_item(source_post_id):
    """
    Lists all comments on a specific media post.

    Args:
        source_post_id (str): The ID of the media post to retrieve comments for.

    Returns:
        List[Dict[str, Any]]: A list of dictionaries, where each dictionary contains:
            - id (str): The comment's unique identifier
            - media_id (str): The ID of the media post being commented on
            - user_id (str): The ID of the user who made the comment
            - message (str): The comment text
            - timestamp (str): ISO format timestamp of when the comment was created

    Raises:
        TypeError: If source_post_id is not a string.
        ValueError: If source_post_id is an empty string.
    """
    from instagram.Comment import list_comments
    return list_comments(media_id=source_post_id)
