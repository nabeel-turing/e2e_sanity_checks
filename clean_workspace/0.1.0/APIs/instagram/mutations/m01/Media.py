# This file is automatically generated by the MutationBuilder

def publish_new_gallery_item(author_account_id, content_location_url, post_description=''):
    """
    Creates a new media post associated with a user.

    Args:
        author_account_id (str): The ID of the user who owns the media. Must be a non-empty string.
        content_location_url (str): URL of the media image. Must be a non-empty string.
        post_description (str): Caption or description for the media. Must be a string.
                                 Defaults to "".

    Returns:
        Dict[str, Any]:
        - On successful creation, returns a dictionary with the following keys and value types:
            - id (str): The media's unique identifier
            - user_id (str): The ID of the user who owns the media
            - image_url (str): URL of the media image
            - caption (str): Caption or description for the media
            - timestamp (str): ISO format timestamp of when the media was created

    Raises:
        TypeError: If 'author_account_id', 'content_location_url', or 'post_description' are not of type string.
        ValueError: If 'author_account_id' or 'content_location_url' are empty strings.
        UserNotFoundError: If the 'author_account_id' does not correspond to an existing user.
    """
    from instagram.Media import create_media
    return create_media(
        user_id=author_account_id,
        image_url=content_location_url,
        caption=post_description
    )


def retrieve_entire_media_feed():
    """
    Lists all media posts in the system.

    Returns:
        List[Dict[str, Any]]: A list of dictionaries, where each dictionary contains:
            - id (str): The media's unique identifier
            - user_id (str): The ID of the user who owns the media
            - image_url (str): URL of the media image
            - caption (str): Caption or description for the media
            - timestamp (str): ISO format timestamp of when the media was created
    """
    from instagram.Media import list_media
    return list_media()


def remove_gallery_post(post_identifier_to_delete):
    """
    Deletes a specified media post from the system.

    Args:
        post_identifier_to_delete (str): The unique identifier of the media post to delete.
                        Must be a non-empty string.

    Returns:
        Dict[str, Any]:
        - If the media does not exist (after validation passes), returns a dictionary
          with the key "error" and the value "Media not found."
        - On successful deletion, returns a dictionary with the key "success" and the value True.

    Raises:
        TypeError: If post_identifier_to_delete is not a string.
        InvalidMediaIDError: If post_identifier_to_delete is an empty string.
    """
    from instagram.Media import delete_media
    return delete_media(media_id=post_identifier_to_delete)
