[
  {
    "name": "add_comment_to_media",
    "description": "Adds a comment to a specified media post. This requires the `media_id` of an existing post, the `user_id` of the commenting user, and the `message` text. All parameter values must be non-empty strings.",
    "parameters": {
      "type": "object",
      "properties": {
        "media_id": {
          "type": "string",
          "description": "The ID of the media post to which the comment will be added. This parameter must be a non-empty string and correspond to an existing media post."
        },
        "user_id": {
          "type": "string",
          "description": "The identifier for the user making the comment. This parameter must be a non-empty string."
        },
        "message": {
          "type": "string",
          "description": "The comment text. This must be a non-empty string."
        }
      },
      "required": [
        "media_id",
        "message",
        "user_id"
      ]
    }
  },
  {
    "name": "create_media_post",
    "description": "Creates a new media post associated with a user, requiring a non-empty string for the user ID and the media image URL. An optional caption can be provided as a string. Upon successful creation, it returns a dictionary containing the new post's unique ID, user ID, image URL, caption, and creation timestamp.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "description": "The ID of the user who owns the media, which must be a non-empty string."
        },
        "image_url": {
          "type": "string",
          "description": "The URL for the media image. It must be a non-empty string."
        },
        "caption": {
          "type": "string",
          "description": "Specifies a caption or description for the media. This parameter must be a string and defaults to an empty string (`\"\"`)."
        }
      },
      "required": [
        "image_url",
        "user_id"
      ]
    }
  },
  {
    "name": "create_user",
    "description": "Creates a new user. The user is defined by a specified ID, name, and username.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "description": "The unique identifier for the user. This parameter must be a non-empty string."
        },
        "name": {
          "type": "string",
          "description": "The user's name. It must be a non-empty string."
        },
        "username": {
          "type": "string",
          "description": "The username for the user. This parameter must be a string and cannot be empty."
        }
      },
      "required": [
        "name",
        "user_id",
        "username"
      ]
    }
  },
  {
    "name": "delete_media_post",
    "description": "Deletes a specified media post from the system. Provide the unique identifier of the media post, which must be a non-empty string.",
    "parameters": {
      "type": "object",
      "properties": {
        "media_id": {
          "type": "string",
          "description": "The unique identifier for the media post to delete. It must be a non-empty string."
        }
      },
      "required": [
        "media_id"
      ]
    }
  },
  {
    "name": "delete_user",
    "description": "Deletes a specified user from the system.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "description": "The unique string identifier of the user to delete."
        }
      },
      "required": [
        "user_id"
      ]
    }
  },
  {
    "name": "get_user_details",
    "description": "Retrieves information about a specific user based on their unique identifier. The `user_id` must be a non-empty string. On success, it returns a dictionary containing the user's `id`, `name`, and `username`, or an error if the user is not found.",
    "parameters": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "description": "The unique identifier for the user to retrieve. This parameter cannot be an empty string."
        }
      },
      "required": [
        "user_id"
      ]
    }
  },
  {
    "name": "get_user_id_by_username",
    "description": "Searches for a user by their username and returns the corresponding user ID. The username provided must not be an empty string or contain only whitespace. If no user is found, the function returns the literal string \"User not found\".",
    "parameters": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "The username to look up in the system. It must not be an empty string or contain only whitespace."
        }
      },
      "required": [
        "username"
      ]
    }
  },
  {
    "name": "list_all_media_posts",
    "description": "Lists all media posts in the system. Each post is a dictionary containing its unique ID, owner's user ID, image URL, caption, and creation timestamp.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_all_users",
    "description": "Lists all users in the system. It returns a list of dictionaries, with each dictionary containing the user's unique ID, name, and username.",
    "parameters": {
      "type": "object",
      "properties": {}
    }
  },
  {
    "name": "list_media_comments",
    "description": "Lists all comments for a specific media post, identified by a non-empty `media_id` string. It returns a list of dictionaries, each containing the comment's `id`, `media_id`, `user_id`, `message`, and an ISO-formatted `timestamp`.",
    "parameters": {
      "type": "object",
      "properties": {
        "media_id": {
          "type": "string",
          "description": "The ID of the media post for which to retrieve comments. This parameter must be a non-empty string."
        }
      },
      "required": [
        "media_id"
      ]
    }
  }
]