# This file is automatically generated by the MutationBuilder

def react_to_message(message_resource_to_react_to, reaction_details_to_add):
    """
    Creates a reaction and adds it to a message.

    Args:
        message_resource_to_react_to (str): Required. Resource name of the message to which the reaction is added.
            Format: "spaces/{space}/messages/{message}"
        reaction_details_to_add (dict): Required. The Reaction resource to create with fields:
            - emoji (dict):
                - unicode (str): Optional. A basic emoji represented by a unicode string.
                - customEmoji (dict):
                    - name (str): Identifier. Format: customEmojis/{customEmoji}
                    - uid (str): Output only. Unique key for the custom emoji.
                    - emojiName (str): Optional. User-defined emoji name, must be valid format.
                    - temporaryImageUri (str): Output only. Temporary image URL.
                    - payload (dict):
                        - fileContent (str): Required. Image binary data.
                        - filename (str): Required. Image file name (.png, .jpg, .gif).
            - user (dict):
                - name (str): Required. Format: users/{user}
                - displayName (str): Output only. User's display name.
                - domainId (str): Output only. Workspace domain ID.
                - type (str): Enum: TYPE_UNSPECIFIED, HUMAN, BOT
                - isAnonymous (bool): Output only. True if user is deleted or hidden.

    Returns:
        Dict[str, Any]: The created Reaction resource with the same fields as input, including:
            - name (str): Resource name of the created reaction.
            - emoji (dict):
                - unicode (str): Optional. A basic emoji represented by a unicode string.
                - customEmoji (dict):
                    - name (str): Identifier. Format: customEmojis/{customEmoji}
                    - uid (str): Output only. Unique key for the custom emoji.
                    - emojiName (str): Optional. User-defined emoji name, must be valid format.
                    - temporaryImageUri (str): Output only. Temporary image URL.
                    - payload (dict):
                        - fileContent (str): Required. Image binary data.
                        - filename (str): Required. Image file name (.png, .jpg, .gif).
            - user (dict):
                - name (str): Required. Format: users/{user}
                - displayName (str): Output only. User's display name.
                - domainId (str): Output only. Workspace domain ID.
                - type (str): Enum: TYPE_UNSPECIFIED, HUMAN, BOT
                - isAnonymous (bool): Output only. True if user is deleted or hidden.

        returns empty dict if parent is invalid.
    """
    from google_chat.Spaces.Messages.Reactions import create
    return create(parent=message_resource_to_react_to, reaction=reaction_details_to_add)


def get_all_reactions_for_message(
    target_message_resource_name,
    max_reactions_to_return=None,
    reactions_page_token=None,
    reaction_filter_criteria=None
):
    """
    Lists reactions to a message.

    Args:
        target_message_resource_name (str): Required. The resource name of the message to list reactions for.
            Format: "spaces/{space}/messages/{message}"
        max_reactions_to_return (int, optional): Optional. Maximum number of reactions to return. Defaults to 25.
            Maximum value is 200.
        reactions_page_token (str, optional): Optional. Token from a previous list call to retrieve the next page.
        reaction_filter_criteria (str, optional): Optional. Filter reactions by emoji or user fields. Examples:
            - emoji.unicode = "üôÇ"
            - emoji.custom_emoji.uid = "XYZ"
            - user.name = "users/USER123"
            - (emoji.unicode = "üôÇ" OR emoji.unicode = "üëç") AND user.name = "users/USER123"

    Returns:
        Dict[str, Any]: A dictionary with the following structure:
            - reactions (list): List of Reaction resources, each including:
                - name (str): Resource name of the reaction.
                - user (dict):
                    - name (str): Resource name of the user.
                    - displayName (str): Output only. User's display name.
                    - domainId (str): Output only. User's domain ID.
                    - type (str): Enum. User type: TYPE_UNSPECIFIED, HUMAN, BOT.
                    - isAnonymous (bool): Output only. Whether the user is anonymous.
                - emoji (dict):
                    - unicode (str): Optional. Unicode emoji.
                    - customEmoji (dict):
                        - name (str): Identifier. Format: customEmojis/{customEmoji}
                        - uid (str): Output only. Unique key.
                        - emojiName (str): Optional. Custom name, must be formatted correctly.
                        - temporaryImageUri (str): Output only. Temporary image URI.
                        - payload (dict):
                            - fileContent (str): Required. Image binary data.
                            - filename (str): Required. File name (.png, .jpg, .gif).
            - nextPageToken (str, optional): Omitted if this is the last page.
    """
    from google_chat.Spaces.Messages.Reactions import list
    return list(
        parent=target_message_resource_name,
        pageSize=max_reactions_to_return,
        pageToken=reactions_page_token,
        filter=reaction_filter_criteria
    )


def remove_reaction_from_message(reaction_resource_to_delete):
    """
    Deletes a reaction by its resource name.

    Args:
        reaction_resource_to_delete (str): Required. The resource name of the reaction to delete.
            Format: "spaces/{space}/messages/{message}/reactions/{reaction}"

    Returns:
        Dict[str, Any]: An empty dictionary representing a successful deletion.
    """
    from google_chat.Spaces.Messages.Reactions import delete
    return delete(name=reaction_resource_to_delete)
