# This file is automatically generated by the MutationBuilder

def retrieve_specific_space_event(event_resource_identifier):
    """
    Retrieves a space event resource by its name.

    Args:
        event_resource_identifier (str): Required. The resource name of the space event.
            Format: `spaces/{space}/spaceEvents/{spaceEvent}`

    Returns:
        Dict[str, Any]: The space event resource. The structure includes:

        - name (str): Resource name of the space event.
        - eventTime (str): Time when the event occurred.
        - eventType (str): Type of space event.

        May include nested data depending on the eventType:

        - messageCreatedEventData (dict):
            - message (dict):
                - name (str)
                - createTime (str)
                - lastUpdateTime (str)
                - deleteTime (str)
                - text (str)
                - formattedText (str)
                - fallbackText (str)
                - argumentText (str)
                - threadReply (bool)
                - clientAssignedMessageId (str)
                - sender (dict):
                    - name (str)
                    - displayName (str)
                    - domainId (str)
                    - type (str)
                    - isAnonymous (bool)
                - thread (dict):
                    - name (str)
                    - threadKey (str)
                - actionResponse (dict):
                    - type (str)
                    - url (str)
                    - dialogAction (dict):
                        - actionStatus (dict):
                            - statusCode (str)
                            - userFacingMessage (str)
                    - updatedWidget (dict):
                        - widget (str)
                        - suggestions (dict):
                            - items (list[dict]):
                                - text (str)
                                - value (str)
                                - selected (bool)
                                - startIconUri (str)
                                - bottomText (str)
                - slashCommand (dict):
                    - commandId (str)
                - cards (list[dict]):
                    - name (str)
                    - header (dict):
                        - title (str)
                        - subtitle (str)
                        - imageStyle (str)
                        - imageUrl (str)
                    - sections (list[dict]):
                        - header (str)
                        - widgets (list[dict]): (may contain textParagraph, image, keyValue, etc.)
                - cardsV2 (list[dict]):
                    - cardId (str)
                    - card (dict): structured like `cards[]` above but more detailed.
                - annotations (list[dict]):
                    - type (str)
                    - startIndex (int)
                    - length (int)
                    - userMention, slashCommand, richLinkMetadata, etc.
                - matchedUrl (dict):
                    - url (str)
                - accessoryWidgets (dict)
                - attachment (list[dict]):
                    - name (str)
                    - contentName (str)
                    - contentType (str)
                    - thumbnailUri (str)
                    - downloadUri (str)
                    - source (str)
                    - attachmentDataRef (dict):
                        - resourceName (str)
                        - attachmentUploadToken (str)
                    - driveDataRef (dict):
                        - driveFileId (str)
                - emojiReactionSummaries (list[dict]):
                    - reactionCount (int)
                - deletionMetadata (dict):
                    - deletionType (str)
                - quotedMessageMetadata (dict):
                    - name (str)
                    - lastUpdateTime (str)
                - attachedGifs (list[dict]):
                    - uri (str)

        - messageBatchCreatedEventData (dict):
            - messages (list[dict])

        - messageBatchUpdatedEventData (dict):
            - messages (list[dict])

        - messageBatchDeletedEventData (dict):
            - messages (list[dict])

        - spaceUpdatedEventData (dict):
            - space (dict):
                - name (str)
                - type (str) [Deprecated]
                - spaceType (str)
                - singleUserBotDm (bool)
                - threaded (bool) [Deprecated]
                - displayName (str)
                - externalUserAllowed (bool)
                - spaceThreadingState (str)
                - spaceHistoryState (str)
                - importMode (bool)
                - createTime (str)
                - lastActiveTime (str)
                - adminInstalled (bool)
                - spaceUri (str)
                - predefinedPermissionSettings (str)
                - importModeExpireTime (str)
                - spaceDetails (dict):
                    - description (str)
                    - guidelines (str)
                - membershipCount (dict):
                    - joinedDirectHumanUserCount (int)
                    - joinedGroupCount (int)
                - accessSettings (dict):
                    - accessState (str)
                    - audience (str)
                - permissionSettings (dict):
                    - manageMembersAndGroups (dict):
                        - managersAllowed (bool)
                        - membersAllowed (bool)

        - spaceBatchUpdatedEventData (dict):
            - spaces (list[dict])

        - membershipCreatedEventData (dict):
            - membership (dict):
                - name (str)
                - state (str)
                - role (str)
                - createTime (str)
                - deleteTime (str)
                - groupMember (dict):
                    - name (str)

        - membershipBatchCreatedEventData (dict):
            - memberships (list[dict])

        - membershipBatchUpdatedEventData (dict):
            - memberships (list[dict])

        - membershipBatchDeletedEventData (dict):
            - memberships (list[dict])

        - reactionCreatedEventData (dict):
            - reaction (dict):
                - name (str)
                - emoji (dict):
                    - unicode (str)
                    - customEmoji (dict):
                        - name (str)
                        - uid (str)
                        - emojiName (str)
                        - temporaryImageUri (str)
                        - payload (dict):
                            - fileContent (str)
                            - filename (str)

        - reactionBatchCreatedEventData (dict):
            - reactions (list[dict])

        - reactionBatchDeletedEventData (dict):
            - reactions (list[dict])
    """
    from google_chat.Spaces.SpaceEvents import get
    return get(name=event_resource_identifier)


def get_history_of_space_events(
    target_space_name,
    event_batch_size=None,
    pagination_token_for_events=None,
    event_query_string=None
):
    """
    Lists space events for a specified Google Chat space.

    Retrieves event records such as message creations, updates, deletions, membership changes,
    reactions, and space updates in a specific Google Chat space. Filtering supports event types,
    as well as time-based queries. Pagination is also supported.

    Args:
        target_space_name (str): Required. Resource name of the Google Chat space.
            Format: `spaces/{space}`.
        event_query_string (Optional[str]): Required. A query string to filter events.
            Must include at least one `event_type` using the `:` operator.
            Can also include `start_time` and `end_time` in RFC-3339 format.
            Example valid filter:
                start_time="2023-08-23T19:20:33+00:00" AND event_types:"google.workspace.chat.message.v1.created"
        event_batch_size (Optional[int]): Maximum number of events to return. If not set, the service defaults.
        pagination_token_for_events (Optional[str]): Token to retrieve the next page of results.

    Returns:
        Dict[str, Any]: A dictionary with the following fields:

        - nextPageToken (str): Token to retrieve the next page of results, if available.
        - spaceEvents (List[Dict[str, Any]]): List of space event objects. Each event can include:

            - name (str): Resource name of the space event.
            - eventTime (str): Time when the event occurred.
            - eventType (str): Type of the space event.

            - messageCreatedEventData (Dict[str, Any]):
                - message (Dict[str, Any]):
                    - name (str)
                    - createTime (str)
                    - lastUpdateTime (str)
                    - deleteTime (str)
                    - text (str)
                    - formattedText (str)
                    - fallbackText (str)
                    - argumentText (str)
                    - threadReply (bool)
                    - clientAssignedMessageId (str)
                    - sender (Dict[str, Any]):
                        - name (str)
                        - displayName (str)
                        - domainId (str)
                        - type (str)
                        - isAnonymous (bool)
                    - thread (Dict[str, Any]):
                        - name (str)
                        - threadKey (str)
                    - actionResponse (Dict[str, Any]):
                        - type (str)
                        - url (str)
                        - dialogAction (Dict[str, Any]):
                            - actionStatus (Dict[str, Any]):
                                - statusCode (str)
                                - userFacingMessage (str)
                        - updatedWidget (Dict[str, Any]):
                            - widget (str)
                            - suggestions (Dict[str, Any]):
                                - items (List[Dict[str, Any]]):
                                    - text (str)
                                    - value (str)
                                    - selected (bool)
                                    - startIconUri (str)
                                    - bottomText (str)
                    - annotations (List[Dict[str, Any]]):
                        - type (str)
                        - startIndex (int)
                        - length (int)
                        - userMention (Dict[str, Any])
                        - slashCommand (Dict[str, Any])
                        - richLinkMetadata (Dict[str, Any])
                    - quotedMessageMetadata (Dict[str, Any]):
                        - name (str)
                        - lastUpdateTime (str)
                    - deletionMetadata (Dict[str, Any]):
                        - deletionType (str)

            - messageBatchCreatedEventData (Dict[str, Any]):
                - messages (List[Dict[str, Any]])

            - messageBatchUpdatedEventData (Dict[str, Any]):
                - messages (List[Dict[str, Any]])

            - messageBatchDeletedEventData (Dict[str, Any]):
                - messages (List[Dict[str, Any]])

            - spaceUpdatedEventData (Dict[str, Any]):
                - space (Dict[str, Any]):
                    - name (str)
                    - type (str)
                    - spaceType (str)
                    - singleUserBotDm (bool)
                    - threaded (bool)
                    - displayName (str)
                    - externalUserAllowed (bool)
                    - spaceThreadingState (str)
                    - spaceHistoryState (str)
                    - importMode (bool)
                    - createTime (str)
                    - lastActiveTime (str)
                    - adminInstalled (bool)
                    - spaceUri (str)
                    - predefinedPermissionSettings (str)
                    - importModeExpireTime (str)
                    - spaceDetails (Dict[str, Any]):
                        - description (str)
                        - guidelines (str)
                    - membershipCount (Dict[str, Any]):
                        - joinedDirectHumanUserCount (int)
                        - joinedGroupCount (int)
                    - accessSettings (Dict[str, Any]):
                        - accessState (str)
                        - audience (str)
                    - permissionSettings (Dict[str, Any]):
                        - manageMembersAndGroups (Dict[str, Any]):
                            - managersAllowed (bool)
                            - membersAllowed (bool)

            - spaceBatchUpdatedEventData (Dict[str, Any]):
                - spaces (List[Dict[str, Any]])

            - membershipCreatedEventData (Dict[str, Any]):
                - membership (Dict[str, Any]):
                    - name (str)
                    - state (str)
                    - role (str)
                    - createTime (str)
                    - deleteTime (str)
                    - groupMember (Dict[str, Any]):
                        - name (str)

            - membershipBatchCreatedEventData (Dict[str, Any]):
                - memberships (List[Dict[str, Any]])

            - membershipBatchUpdatedEventData (Dict[str, Any]):
                - memberships (List[Dict[str, Any]])

            - membershipBatchDeletedEventData (Dict[str, Any]):
                - memberships (List[Dict[str, Any]])

            - reactionCreatedEventData (Dict[str, Any]):
                - reaction (Dict[str, Any]):
                    - name (str)
                    - emoji (Dict[str, Any]):
                        - unicode (str)
                        - customEmoji (Dict[str, Any]):
                            - name (str)
                            - uid (str)
                            - emojiName (str)
                            - temporaryImageUri (str)

            - reactionBatchCreatedEventData (Dict[str, Any]):
                - reactions (List[Dict[str, Any]])

            - reactionBatchDeletedEventData (Dict[str, Any]):
                - reactions (List[Dict[str, Any]])
    """
    from google_chat.Spaces.SpaceEvents import list
    return list(
        parent=target_space_name,
        pageSize=event_batch_size,
        pageToken=pagination_token_for_events,
        filter=event_query_string
    )
