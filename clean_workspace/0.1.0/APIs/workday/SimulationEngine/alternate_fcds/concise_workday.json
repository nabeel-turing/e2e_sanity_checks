[
    {
        "name": "add_supplier_companies_to_event_by_external_id",
        "description": "Add suppliers to an event using external identifiers, only for RFP-type events.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_external_id": {
                    "type": "string",
                    "description": "Unique external ID of the event for adding suppliers."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary containing supplier information, including `supplier_external_ids` (a list of external IDs) and a `type` field which must be 'supplier_companies'.",
                    "properties": {
                        "supplier_external_ids": {
                            "type": "array",
                            "description": "List of supplier external IDs to add to the event."
                        },
                        "type": {
                            "type": "string",
                            "description": "The object type, always `supplier_companies`."
                        }
                    },
                    "required": [
                        "supplier_external_ids",
                        "type"
                    ]
                }
            },
            "required": [
                "data",
                "event_external_id"
            ]
        }
    },
    {
        "name": "add_supplier_companies_to_event_by_internal_id",
        "description": "Add suppliers to an event, supporting only RFP-type events.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "Unique identifier of the event to which suppliers are added."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary containing supplier information, structured with `supplier_ids` (a list of IDs) and a `type` field (a string, always \"supplier_companies\").",
                    "properties": {
                        "supplier_ids": {
                            "type": "array",
                            "description": "A list of supplier IDs to add to the event."
                        },
                        "type": {
                            "type": "string",
                            "description": "Specifies the object type; must always be `supplier_companies`."
                        }
                    },
                    "required": [
                        "supplier_ids",
                        "type"
                    ]
                }
            },
            "required": [
                "data",
                "event_id"
            ]
        }
    },
    {
        "name": "add_supplier_companies_to_project",
        "description": "Add one or more supplier companies to a project.",
        "parameters": {
            "type": "object",
            "properties": {
                "project_id": {
                    "type": "integer",
                    "description": "The unique identifier of the project."
                },
                "supplier_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of supplier company IDs to add to the project; for optimal performance, add 10 or fewer per request."
                }
            },
            "required": [
                "project_id",
                "supplier_ids"
            ]
        }
    },
    {
        "name": "add_supplier_companies_to_project_by_external_id",
        "description": "Adds one or more supplier companies to a project using external IDs.",
        "parameters": {
            "type": "object",
            "properties": {
                "project_external_id": {
                    "type": "string",
                    "description": "The external identifier of the project."
                },
                "supplier_external_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of supplier company external IDs to add to the project."
                }
            },
            "required": [
                "project_external_id",
                "supplier_external_ids"
            ]
        }
    },
    {
        "name": "add_supplier_contacts_to_event_by_external_ids",
        "description": "Add supplier contacts to an RFP event, identified by its external ID, using their provided external identifiers; for best performance, invite 10 or fewer contacts per request.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_external_id": {
                    "type": "string",
                    "description": "The unique external identifier of the event for adding suppliers."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary containing supplier contact information, including a list of `supplier_contact_external_ids` and a `type` field that must be 'supplier_contacts'.",
                    "properties": {
                        "supplier_contact_external_ids": {
                            "type": "array",
                            "description": "A list of supplier contact external IDs to add to the event."
                        },
                        "type": {
                            "type": "string",
                            "description": "The object type, which must always be \"supplier_contacts\"."
                        }
                    },
                    "required": [
                        "supplier_contact_external_ids",
                        "type"
                    ]
                }
            },
            "required": [
                "data",
                "event_external_id"
            ]
        }
    },
    {
        "name": "add_supplier_contacts_to_event_by_internal_id",
        "description": "Adds supplier contacts to a specific event, supporting only RFP event types.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "The unique identifier for the event to which supplier contacts are added."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary containing supplier contact information, including a `supplier_contact_ids` list and a `type` string set to 'supplier_contacts'.",
                    "properties": {
                        "supplier_contact_ids": {
                            "type": "array",
                            "description": "A list of supplier contact IDs to be added to the event."
                        },
                        "type": {
                            "type": "string",
                            "description": "The object type; must always be `supplier_contacts`."
                        }
                    },
                    "required": [
                        "supplier_contact_ids",
                        "type"
                    ]
                }
            },
            "required": [
                "data",
                "event_id"
            ]
        }
    },
    {
        "name": "add_supplier_contacts_to_project_by_external_ids",
        "description": "Adds supplier contacts to a project using their external identifiers.",
        "parameters": {
            "type": "object",
            "properties": {
                "project_external_id": {
                    "type": "string",
                    "description": "The external ID of the project to which suppliers are added."
                },
                "supplier_contact_external_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of external IDs for supplier contacts to add to the project."
                }
            },
            "required": [
                "project_external_id",
                "supplier_contact_external_ids"
            ]
        }
    },
    {
        "name": "add_supplier_contacts_to_project_by_internal_id",
        "description": "Adds one or more supplier contacts to a project.",
        "parameters": {
            "type": "object",
            "properties": {
                "project_id": {
                    "type": "integer",
                    "description": "The unique identifier of the project."
                },
                "supplier_contact_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of supplier contact IDs to add to the project."
                }
            },
            "required": [
                "project_id",
                "supplier_contact_ids"
            ]
        }
    },
    {
        "name": "create_attachment",
        "description": "Create a new attachment, checking for duplicate external IDs and generating a unique internal ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "object",
                            "description": "Object type, must be 'attachments'."
                        },
                        "name": {
                            "type": "object",
                            "description": "A required string for the attachment's file name."
                        },
                        "uploaded_by": {
                            "type": "string",
                            "description": "Email or identifier of the uploader."
                        },
                        "external_id": {
                            "type": "object",
                            "description": "An external identifier for the attachment (max 255 characters)."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary of optional attachment attributes.",
                            "properties": {
                                "title": {
                                    "type": "object",
                                    "description": "The attachment's title (maximum 255 characters)."
                                },
                                "size": {
                                    "type": "string",
                                    "description": "Attachment file size in bytes."
                                },
                                "external_id": {
                                    "type": "object",
                                    "description": "Attachment external identifier, a string up to 255 characters."
                                },
                                "download_url": {
                                    "type": "string",
                                    "description": "URL to download the attachment."
                                },
                                "download_url_expires_at": {
                                    "type": "object",
                                    "description": "Download URL expiration time."
                                },
                                "uploaded_at": {
                                    "type": "object",
                                    "description": "A datetime representing the upload timestamp."
                                }
                            },
                            "required": [
                                "download_url",
                                "download_url_expires_at",
                                "external_id",
                                "size",
                                "title",
                                "uploaded_at"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "description": "A dictionary representing a relationship to a Contract, Event, Project, or Supplier Company, containing required `type` (str) and `id` (int) fields.",
                            "properties": {
                                "type": {
                                    "type": "object",
                                    "description": "Type of the related object (Contract, Event, Project, or Supplier Company)."
                                },
                                "id": {
                                    "type": "object",
                                    "description": "An object identifier string."
                                }
                            },
                            "required": [
                                "id",
                                "type"
                            ]
                        }
                    },
                    "description": "A dictionary containing attachment data, structured by its defined keys.",
                    "required": [
                        "attributes",
                        "external_id",
                        "name",
                        "relationships",
                        "type",
                        "uploaded_by"
                    ]
                }
            },
            "required": [
                "data"
            ]
        }
    },
    {
        "name": "create_contact_type",
        "description": "Creates a new contact type with the specified parameters.",
        "parameters": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "description": "A dictionary containing properties and configuration for the new contact type, including `type` (\"contact_types\"), `external_id` (max 255 characters), and `name` (max 255 characters).",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "The object type, which must always be `contact_types`."
                        },
                        "external_id": {
                            "type": "string",
                            "description": "The contact type's external identifier, with a maximum length of 255 characters."
                        },
                        "name": {
                            "type": "string",
                            "description": "The contact type name, with a maximum length of 255 characters."
                        }
                    },
                    "required": [
                        "external_id",
                        "name",
                        "type"
                    ]
                }
            }
        }
    },
    {
        "name": "create_contract",
        "description": "Create a new contract using the provided attributes and relationships.",
        "parameters": {
            "type": "object",
            "properties": {
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of relationships to include in the response, with supported values: `contract_type`, `spend_category`, `supplier_company`, `docusign_envelopes`, and `adobe_sign_agreements`."
                },
                "body": {
                    "type": "object",
                    "description": "Dictionary containing contract creation data, with required keys such as `type`, `attributes`, and `relationships`.",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Required string representing the object type."
                        },
                        "supplier_id": {
                            "type": "string",
                            "description": "A string representing the supplier's identifier."
                        },
                        "start_date": {
                            "type": "string",
                            "description": "The contract start date."
                        },
                        "end_date": {
                            "type": "string",
                            "description": "Contract end date (string)."
                        },
                        "external_id": {
                            "type": "string",
                            "description": "The external contract identifier."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A required dictionary of contract attributes.",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "Required contract title, limited to 255 characters."
                                },
                                "description": {
                                    "type": "string",
                                    "description": "An optional contract description."
                                },
                                "state": {
                                    "type": "string",
                                    "description": "Required. The current contract state, one of \"draft\", \"requested\", \"in_progress\", \"out_for_approval\", \"approved\", \"active\", \"expired\", or \"terminated\"."
                                },
                                "state_label": {
                                    "type": "string",
                                    "description": "An optional, customer-specific contract state label."
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "An optional, customer-provided unique contract identifier."
                                },
                                "actual_start_date": {
                                    "type": "string",
                                    "description": "The optional contract start date."
                                },
                                "actual_end_date": {
                                    "type": "string",
                                    "description": "An optional contract end date."
                                },
                                "actual_spend_amount": {
                                    "type": "number",
                                    "description": "An optional float representing the actual spend amount."
                                },
                                "auto_renewal": {
                                    "type": "string",
                                    "description": "Optional auto-renewal mode, one of 'yes', 'no', or 'evergreen'."
                                },
                                "marked_as_needs_attention_at": {
                                    "type": "string",
                                    "description": "Optional date and time when the contract was flagged as needing attention."
                                },
                                "needs_attention": {
                                    "type": "boolean",
                                    "description": "A boolean indicating if the contract needs attention."
                                },
                                "needs_attention_note": {
                                    "type": "string",
                                    "description": "Notes explaining why the contract requires attention."
                                },
                                "needs_attention_reason": {
                                    "type": "string",
                                    "description": "An optional reason explaining why the contract needs attention."
                                },
                                "renew_number_of_times": {
                                    "type": "integer",
                                    "description": "An optional integer representing the number of contract renewals."
                                },
                                "renewal_term_unit": {
                                    "type": "string",
                                    "description": "Optional term unit for renewals, one of \"days\", \"weeks\", \"months\", or \"years\"."
                                },
                                "renewal_term_value": {
                                    "type": "integer",
                                    "description": "An optional number of term units between renewals."
                                },
                                "renewal_termination_notice_unit": {
                                    "type": "string",
                                    "description": "Optional term unit for termination notice."
                                },
                                "renewal_termination_notice_value": {
                                    "type": "integer",
                                    "description": "Optional number of term units for a termination notice, specified before the end date."
                                },
                                "renewal_termination_reminder_unit": {
                                    "type": "string",
                                    "description": "Term unit for termination reminder."
                                },
                                "renewal_termination_reminder_value": {
                                    "type": "integer",
                                    "description": "Optional. The number of term units occurring before the termination notice for a reminder."
                                },
                                "terminated_note": {
                                    "type": "string",
                                    "description": "Termination notes."
                                },
                                "terminated_reason": {
                                    "type": "string",
                                    "description": "An optional string indicating the reason for contract termination."
                                },
                                "custom_fields": {
                                    "type": "array",
                                    "description": "A list of custom field values."
                                },
                                "approval_rounds": {
                                    "type": "integer",
                                    "description": "Number of times the contract has been sent for approval."
                                },
                                "public": {
                                    "type": "boolean",
                                    "description": "Indicates the public visibility of the contract."
                                }
                            },
                            "required": [
                                "actual_end_date",
                                "actual_spend_amount",
                                "actual_start_date",
                                "approval_rounds",
                                "auto_renewal",
                                "custom_fields",
                                "description",
                                "external_id",
                                "marked_as_needs_attention_at",
                                "needs_attention",
                                "needs_attention_note",
                                "needs_attention_reason",
                                "public",
                                "renew_number_of_times",
                                "renewal_term_unit",
                                "renewal_term_value",
                                "renewal_termination_notice_unit",
                                "renewal_termination_notice_value",
                                "renewal_termination_reminder_unit",
                                "renewal_termination_reminder_value",
                                "state",
                                "state_label",
                                "terminated_note",
                                "terminated_reason",
                                "title"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "description": "A required dictionary defining contract relationships.",
                            "properties": {
                                "owner": {
                                    "type": "object",
                                    "description": "Required. Contract owner, including `type` (str) and `id` (int).",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "The required object type."
                                        },
                                        "id": {
                                            "type": "integer",
                                            "description": "Required integer owner identifier."
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "type"
                                    ]
                                },
                                "supplier_company": {
                                    "type": "object",
                                    "description": "Required. A dictionary for the associated supplier company, containing `type` (always \"supplier_companies\") and `id` (supplier company identifier).",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "Required object type; must be `supplier_companies`."
                                        },
                                        "id": {
                                            "type": "integer",
                                            "description": "Required integer supplier company identifier."
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "type"
                                    ]
                                },
                                "contract_type": {
                                    "type": "object",
                                    "description": "Required. An object defining the contract type, including its `type` (always 'contract_types') and `id`.",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A required string that must always be \"contract_types\"."
                                        },
                                        "id": {
                                            "type": "integer",
                                            "description": "Required integer identifier for the contract type."
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "type"
                                    ]
                                },
                                "spend_category": {
                                    "type": "object",
                                    "description": "An optional spend category, structured as a dictionary requiring a `type` (always \"spend_categories\") and an `id` (integer identifier).",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "Required; must always be `spend_categories`."
                                        },
                                        "id": {
                                            "type": "integer",
                                            "description": "Required integer spend category identifier."
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "type"
                                    ]
                                },
                                "payment_currency": {
                                    "type": "object",
                                    "description": "Optional payment currency, defined by required `type` (always `payment_currencies`) and `id` (integer identifier) fields.",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A required string that must always be `payment_currencies`."
                                        },
                                        "id": {
                                            "type": "integer",
                                            "description": "The required identifier for the payment currency."
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "type"
                                    ]
                                }
                            },
                            "required": [
                                "contract_type",
                                "owner",
                                "payment_currency",
                                "spend_category",
                                "supplier_company"
                            ]
                        }
                    },
                    "required": [
                        "attributes",
                        "end_date",
                        "external_id",
                        "relationships",
                        "start_date",
                        "supplier_id",
                        "type"
                    ]
                }
            }
        }
    },
    {
        "name": "create_contract_type",
        "description": "Creates a new contract type with a specified name and optional external ID, returning the complete object.",
        "parameters": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "description": "A dictionary for creating contract types, which can include `type` (always 'contract_types'), `name`, and `external_id`.",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "The object type, always \"contract_types\"."
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the contract type."
                        },
                        "external_id": {
                            "type": "string",
                            "description": "External contract type identifier."
                        }
                    },
                    "required": [
                        "external_id",
                        "name",
                        "type"
                    ]
                }
            }
        }
    },
    {
        "name": "create_custom_field",
        "description": "Create a field with specified parameters, omitting its group relationship for `RFP` target objects and requiring it for all others.",
        "parameters": {
            "type": "object",
            "properties": {
                "new_id": {
                    "type": "string",
                    "description": "A unique identifier for the new field; generated by the system if not provided."
                },
                "options": {
                    "type": "object",
                    "description": "A dictionary of field configuration options.",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "The field type, specified as one of 'Checkbox', 'File', 'Short Text', 'Paragraph', 'Date', 'Integer', 'Currency', 'Decimal', 'Single Select', 'Multiple Select', 'URL', 'Lookup', or 'Related'."
                        },
                        "group": {
                            "type": "string",
                            "description": "A string that identifies the field group."
                        },
                        "name": {
                            "type": "string",
                            "description": "The field name, limited to 255 characters."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary specifying the field's name, target object type (`PROJECT`, `RFP`, `SUPPLIER_COMPANY`), internal type description, and whether it is required.",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The field's name, limited to 255 characters."
                                },
                                "target_object": {
                                    "type": "string",
                                    "description": "The field object type, one of `PROJECT`, `RFP`, or `SUPPLIER_COMPANY`."
                                },
                                "type_description": {
                                    "type": "string",
                                    "description": "The internal field type, chosen from: 'Checkbox', 'File', 'Short Text', 'Paragraph', 'Date', 'Integer', 'Currency', 'Decimal', 'Single Select', 'Multiple Select', 'URL', 'Lookup', or 'Related'."
                                },
                                "required": {
                                    "type": "boolean",
                                    "description": "Whether the field is required."
                                }
                            },
                            "required": [
                                "name",
                                "required",
                                "target_object",
                                "type_description"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "description": "A dictionary defining field relationships, with a `group` reference to the field group that is required unless `target_object` is RFP, in which case it must be null.",
                            "properties": {
                                "group": {
                                    "type": "object",
                                    "description": "References the field's group; null if `target_object` is 'RFP', and required otherwise."
                                }
                            },
                            "required": [
                                "group"
                            ]
                        }
                    },
                    "required": [
                        "attributes",
                        "group",
                        "name",
                        "relationships",
                        "type"
                    ]
                }
            }
        }
    },
    {
        "name": "create_event",
        "description": "Create a new event and return the created event object.",
        "parameters": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "external_id": {
                            "type": "string",
                            "description": "An event identifier string."
                        },
                        "name": {
                            "type": "string",
                            "description": "The event's name."
                        },
                        "type": {
                            "type": "string",
                            "description": "An event type enum, with allowed values: \"RFP\", \"AUCTION\", \"AUCTION_WITH_LOTS\", \"AUCTION_LOT\", \"PERFORMANCE_REVIEW_EVENT\", \"PERFORMANCE_REVIEW_SCORE_CARD_ONLY_EVENT\", \"SUPPLIER_REVIEW_EVENT\", \"SUPPLIER_REVIEW_MASTER_EVENT\"."
                        },
                        "suppliers": {
                            "type": "array",
                            "description": "A list of suppliers."
                        },
                        "supplier_contacts": {
                            "type": "array",
                            "description": "A list of supplier contacts."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary of event attributes.",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "The event title."
                                },
                                "event_type": {
                                    "type": "string",
                                    "description": "The event type, one of the following enumeration values: `RFP`, `AUCTION`, `AUCTION_WITH_LOTS`, `AUCTION_LOT`, `PERFORMANCE_REVIEW_EVENT`, `PERFORMANCE_REVIEW_SCORE_CARD_ONLY_EVENT`, `SUPPLIER_REVIEW_EVENT`, or `SUPPLIER_REVIEW_MASTER_EVENT`."
                                },
                                "state": {
                                    "type": "string",
                                    "description": "The current event state, one of `draft`, `scheduled`, `published`, `live_editing`, `closed`, or `canceled`."
                                },
                                "duplication_state": {
                                    "type": "string",
                                    "description": "The event's duplication state, which can be `scheduled`, `started`, `finished`, or `failed`."
                                },
                                "spend_amount": {
                                    "type": "number",
                                    "description": "The actual spend amount as a float."
                                },
                                "request_type": {
                                    "type": "string",
                                    "description": "A string specifying the request type."
                                },
                                "late_bids": {
                                    "type": "boolean",
                                    "description": "Determines if late bid submissions are allowed."
                                },
                                "revise_bids": {
                                    "type": "boolean",
                                    "description": "Indicates if suppliers can re-submit bids."
                                },
                                "instant_notifications": {
                                    "type": "boolean",
                                    "description": "Controls whether notifications are sent immediately."
                                },
                                "supplier_rsvp_deadline": {
                                    "type": "string",
                                    "description": "The RSVP deadline date-time string."
                                },
                                "supplier_question_deadline": {
                                    "type": "string",
                                    "description": "The date and time when questions must be submitted."
                                },
                                "bid_submission_deadline": {
                                    "type": "string",
                                    "description": "The deadline date and time for bid submissions."
                                },
                                "created_at": {
                                    "type": "string",
                                    "description": "The event's creation date and time as a string."
                                },
                                "closed_at": {
                                    "type": "string",
                                    "description": "The date and time the event was closed."
                                },
                                "published_at": {
                                    "type": "string",
                                    "description": "Publication date-time."
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "Internal database event identifier."
                                },
                                "is_public": {
                                    "type": "boolean",
                                    "description": "Indicates if the event is accessible for self-registration."
                                },
                                "restricted": {
                                    "type": "boolean",
                                    "description": "Indicates whether the event is invitation-only."
                                },
                                "custom_fields": {
                                    "type": "array",
                                    "description": "A list of custom field values."
                                }
                            },
                            "required": [
                                "bid_submission_deadline",
                                "closed_at",
                                "created_at",
                                "custom_fields",
                                "duplication_state",
                                "event_type",
                                "external_id",
                                "instant_notifications",
                                "is_public",
                                "late_bids",
                                "published_at",
                                "request_type",
                                "restricted",
                                "revise_bids",
                                "spend_amount",
                                "state",
                                "supplier_question_deadline",
                                "supplier_rsvp_deadline",
                                "title"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "description": "A dictionary containing event relationships.",
                            "properties": {
                                "attachments": {
                                    "type": "array",
                                    "description": "A list of attachments."
                                },
                                "project": {
                                    "type": "object",
                                    "description": "A dictionary representing the associated project."
                                },
                                "spend_category": {
                                    "type": "object",
                                    "description": "A dictionary representing the associated spend category."
                                },
                                "event_template": {
                                    "type": "object",
                                    "description": "The used event template."
                                },
                                "commodity_codes": {
                                    "type": "array",
                                    "description": "A list of commodity codes."
                                }
                            },
                            "required": [
                                "attachments",
                                "commodity_codes",
                                "event_template",
                                "project",
                                "spend_category"
                            ]
                        }
                    },
                    "description": "A dictionary containing event creation data with optional, predefined keys.",
                    "required": [
                        "attributes",
                        "external_id",
                        "name",
                        "relationships",
                        "supplier_contacts",
                        "suppliers",
                        "type"
                    ]
                }
            },
            "required": [
                "data"
            ]
        }
    },
    {
        "name": "create_event_worksheet_line_item",
        "description": "Create a line item with provided cell values.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "The unique identifier of the event to which the line item belongs."
                },
                "worksheet_id": {
                    "type": "integer",
                    "description": "Unique identifier of the worksheet the line item belongs to."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary containing new line item properties, including `type` (always 'line_items'), `attributes` for column data as `data_identifier:value` pairs, and `relationships` for the associated `worksheet` (type 'worksheets' and ID).",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Object type, which must be `line_items`."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "LineItem attributes, containing a hashmap that maps worksheet column identifiers to their cell values.",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "description": "A hashmap where keys are data identifier strings for worksheet columns, and values are objects representing cell values, each containing a `data_identifier` string (the column identifier) and the actual cell `value`.",
                                    "properties": {
                                        "data_identifier": {
                                            "type": "string",
                                            "description": "A string that identifies a worksheet column."
                                        },
                                        "value": {
                                            "type": "object",
                                            "description": "Worksheet line item cell value."
                                        }
                                    },
                                    "required": [
                                        "data_identifier",
                                        "value"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "description": "A dictionary defining line item relationships, specifically the associated worksheet's `type` (always 'worksheets') and `id`.",
                            "properties": {
                                "worksheet": {
                                    "type": "object",
                                    "description": "Associated worksheet, including its object type and identifier.",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "The object type, which must be \"worksheets\"."
                                        },
                                        "id": {
                                            "type": "integer",
                                            "description": "The worksheet identifier."
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "type"
                                    ]
                                }
                            },
                            "required": [
                                "worksheet"
                            ]
                        }
                    },
                    "required": [
                        "attributes",
                        "relationships",
                        "type"
                    ]
                }
            },
            "required": [
                "data",
                "event_id",
                "worksheet_id"
            ]
        }
    },
    {
        "name": "create_field_group",
        "description": "Creates a new field group with the specified parameters and returns its data.",
        "parameters": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name for the new field group."
                },
                "description": {
                    "type": "string",
                    "description": "A detailed description of the field group; defaults to an empty string."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary of field group configuration options, which may include `type` ('field_groups'), `name` (max 255 characters), `fields` (a list), and `attributes` containing `target_object` ('PROJECT', 'SUPPLIER_COMPANY', or 'RFP') and an additional `name` (max 255 characters).",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "The object type, which must always be `field_groups`."
                        },
                        "name": {
                            "type": "string",
                            "description": "The field group name, limited to 255 characters."
                        },
                        "fields": {
                            "type": "object",
                            "description": "A list of fields belonging to this group."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary of field group attributes, including `target_object` (PROJECT, SUPPLIER_COMPANY, RFP) and `name` (max 255 characters).",
                            "properties": {
                                "target_object": {
                                    "type": "string",
                                    "description": "A string indicating the field group object type, one of: `PROJECT`, `SUPPLIER_COMPANY`, or `RFP`."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "The field group name, with a maximum length of 255 characters."
                                }
                            },
                            "required": [
                                "name",
                                "target_object"
                            ]
                        }
                    },
                    "required": [
                        "attributes",
                        "fields",
                        "name",
                        "type"
                    ]
                }
            },
            "required": [
                "name"
            ]
        }
    },
    {
        "name": "create_field_options",
        "description": "Creates a new field option, associating a list of options with a specified or generated field ID, and returns the created option data.",
        "parameters": {
            "type": "object",
            "properties": {
                "new_id": {
                    "type": "string",
                    "description": "The field ID to associate options with; generated if not provided."
                },
                "options": {
                    "type": "object",
                    "description": "A list of options to be associated with the field."
                }
            }
        }
    },
    {
        "name": "create_multiple_event_worksheet_line_items",
        "description": "Create multiple line items in a specified event worksheet.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "The unique identifier of the event that will contain the line items."
                },
                "worksheet_id": {
                    "type": "integer",
                    "description": "The unique identifier of the worksheet that will contain the line items."
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": "Object type, should always be \"line_items\""
                            },
                            "attributes": {
                                "type": "object",
                                "description": "LineItem attributes containing:",
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "description": "A hashmap where keys are data identifier strings for the columns in the worksheet, and values are cell values, where each value contains:",
                                        "properties": {
                                            "data_identifier": {
                                                "type": "string",
                                                "description": "Worksheet column identifier string"
                                            },
                                            "value": {
                                                "type": "object",
                                                "description": "Worksheet line item cell value"
                                            }
                                        },
                                        "required": [
                                            "data_identifier",
                                            "value"
                                        ]
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            },
                            "relationships": {
                                "type": "object",
                                "description": "Line item relationships containing:",
                                "properties": {
                                    "worksheet": {
                                        "type": "object",
                                        "description": "Associated worksheet containing:",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "description": "Object type, should always be \"worksheets\""
                                            },
                                            "id": {
                                                "type": "integer",
                                                "description": "Worksheet identifier string"
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "type"
                                        ]
                                    }
                                },
                                "required": [
                                    "worksheet"
                                ]
                            }
                        },
                        "required": [
                            "attributes",
                            "relationships",
                            "type"
                        ]
                    },
                    "description": "A list of objects, each containing the properties for a new line item."
                }
            },
            "required": [
                "data",
                "event_id",
                "worksheet_id"
            ]
        }
    },
    {
        "name": "create_payment_currency",
        "description": "Creates a new payment currency entry and returns the created object.",
        "parameters": {
            "type": "object",
            "properties": {
                "alpha": {
                    "type": "string",
                    "description": "The three-letter currency code (e.g., USD, EUR)."
                },
                "numeric": {
                    "type": "string",
                    "description": "The three-digit numeric currency code."
                },
                "external_id": {
                    "type": "string",
                    "description": "An optional external identifier for the currency (max 255 characters)."
                }
            },
            "required": [
                "alpha",
                "numeric"
            ]
        }
    },
    {
        "name": "create_payment_term",
        "description": "Creates a new payment term entry in the system.",
        "parameters": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The payment term name, such as 'Net 30' or 'Net 60'."
                },
                "external_id": {
                    "type": "string",
                    "description": "An optional string that serves as an external identifier for the payment term."
                }
            },
            "required": [
                "name"
            ]
        }
    },
    {
        "name": "create_payment_type",
        "description": "Create a payment type.",
        "parameters": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the payment type, such as 'Credit Card' or 'Bank Transfer'."
                },
                "payment_method": {
                    "type": "string",
                    "description": "The method of payment, for example 'card' or 'transfer'."
                },
                "external_id": {
                    "type": "string",
                    "description": "An optional external identifier for the payment type (max 255 characters)."
                }
            },
            "required": [
                "name",
                "payment_method"
            ]
        }
    },
    {
        "name": "create_project",
        "description": "Create a new project with the specified attributes.",
        "parameters": {
            "type": "object",
            "properties": {
                "project_data": {
                    "type": "object",
                    "properties": {
                        "type_id": {
                            "type": "string",
                            "description": "Specifies the object type, defaulting to `projects`."
                        },
                        "id": {
                            "type": "string",
                            "description": "A string identifier for the project."
                        },
                        "external_id": {
                            "type": "string",
                            "description": "An external identifier for the project."
                        },
                        "supplier_companies": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {}
                            },
                            "description": "An array of objects representing supplier companies."
                        },
                        "supplier_contacts": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {}
                            },
                            "description": "A list of supplier contact objects."
                        },
                        "status": {
                            "type": "string",
                            "description": "The status of the project."
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The mandatory name of the project."
                                },
                                "description": {
                                    "type": "string",
                                    "description": "A description of the project."
                                },
                                "state": {
                                    "type": "string",
                                    "description": "The state of the project, which can be `draft`, `requested`, `planned`, `active`, `completed`, `canceled`, or `on_hold`."
                                },
                                "target_start_date": {
                                    "type": "object",
                                    "description": "The target start date for the project."
                                },
                                "target_end_date": {
                                    "type": "object",
                                    "description": "The target end date for the project."
                                },
                                "actual_spend_amount": {
                                    "type": "number",
                                    "description": "The actual amount spent on the project."
                                },
                                "approved_spend_amount": {
                                    "type": "number",
                                    "description": "The approved spend amount for the project."
                                },
                                "estimated_savings_amount": {
                                    "type": "number",
                                    "description": "The project's estimated savings amount."
                                },
                                "estimated_spend_amount": {
                                    "type": "number",
                                    "description": "The estimated spend amount for the project."
                                },
                                "canceled_note": {
                                    "type": "string",
                                    "description": "A note regarding the project's cancellation."
                                },
                                "canceled_reason": {
                                    "type": "string",
                                    "description": "The reason for the project's cancellation."
                                },
                                "on_hold_note": {
                                    "type": "string",
                                    "description": "A note for the project's on-hold status."
                                },
                                "on_hold_reason": {
                                    "type": "string",
                                    "description": "The reason the project is on hold."
                                },
                                "needs_attention": {
                                    "type": "boolean",
                                    "description": "Indicates if the project requires attention."
                                },
                                "marked_as_needs_attention_at": {
                                    "type": "object",
                                    "description": "The timestamp indicating when the project was marked as 'needs attention'."
                                },
                                "needs_attention_note": {
                                    "type": "string",
                                    "description": "A note explaining why the project needs attention."
                                },
                                "needs_attention_reason": {
                                    "type": "string",
                                    "description": "A description of why the project needs attention."
                                }
                            },
                            "description": "An object containing the project's attributes.",
                            "required": [
                                "actual_spend_amount",
                                "approved_spend_amount",
                                "description",
                                "estimated_savings_amount",
                                "estimated_spend_amount",
                                "name",
                                "needs_attention",
                                "state",
                                "target_end_date",
                                "target_start_date"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "properties": {
                                "attachments": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    },
                                    "description": "An array of attachment objects to associate with the new project."
                                },
                                "creator": {
                                    "type": "object",
                                    "description": "An object representing the creator of the project."
                                },
                                "requester": {
                                    "type": "object",
                                    "description": "The stakeholder object for the project requester."
                                },
                                "owner": {
                                    "type": "object",
                                    "description": "A stakeholder object representing the project owner."
                                },
                                "project_type": {
                                    "type": "object",
                                    "description": "An object that identifies the project's type."
                                }
                            },
                            "description": "An object defining the project's relationships.",
                            "required": [
                                "attachments",
                                "creator",
                                "owner",
                                "project_type",
                                "requester"
                            ]
                        }
                    },
                    "description": "A dictionary of project attributes that must contain an `attributes` field with at least a `name`; an `id` is optional and will be generated if not provided.",
                    "required": [
                        "attributes",
                        "external_id",
                        "id",
                        "relationships",
                        "status",
                        "supplier_companies",
                        "supplier_contacts",
                        "type_id"
                    ]
                }
            },
            "required": [
                "project_data"
            ]
        }
    },
    {
        "name": "create_scim_user",
        "description": "Creates a new SCIM-compliant user with specified attributes, supporting external identifiers for client system integration.",
        "parameters": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "externalId": {
                            "type": "string",
                            "description": "An optional, client-assigned unique identifier."
                        },
                        "userName": {
                            "type": "string",
                            "description": "Email address of the user (required)."
                        },
                        "name": {
                            "type": "object",
                            "properties": {
                                "givenName": {
                                    "type": "string",
                                    "description": "First name of the user."
                                },
                                "familyName": {
                                    "type": "string",
                                    "description": "Last name of the user."
                                }
                            },
                            "description": "A required object containing the user's `givenName` (first name) and `familyName` (last name).",
                            "required": [
                                "familyName",
                                "givenName"
                            ]
                        },
                        "active": {
                            "type": "boolean",
                            "description": "An optional value indicating whether the user account is active."
                        },
                        "roles": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Optional list of strings representing roles assigned to the user."
                        },
                        "meta": {
                            "type": "object",
                            "properties": {},
                            "description": "A dictionary containing metadata about the user."
                        }
                    },
                    "description": "The user resource to create, structured according to the SCIM User schema.",
                    "required": [
                        "active",
                        "externalId",
                        "meta",
                        "name",
                        "roles",
                        "userName"
                    ]
                }
            },
            "required": [
                "body"
            ]
        }
    },
    {
        "name": "create_spend_category",
        "description": "Creates a new spend category for classifying spend across procurement, expense, ad-hoc payment, or supplier invoice use cases, with only 'procurement' categories usable in requisitions.",
        "parameters": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the spend category (required)."
                },
                "external_id": {
                    "type": "string",
                    "description": "The external identifier for the category, limited to 255 characters."
                },
                "usages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of applicable usage contexts, limited to \"procurement\", \"expense\", \"ad_hoc_payment\", or \"supplier_invoice\"."
                }
            },
            "required": [
                "name"
            ]
        }
    },
    {
        "name": "create_supplier_company",
        "description": "Create a new supplier company with specified attributes and custom fields, linking resources using an `external_` prefix for external IDs and the `include` parameter to return related resources in the response.",
        "parameters": {
            "type": "object",
            "properties": {
                "_include": {
                    "type": "string",
                    "description": "Specifies related resources to include in the response as a comma-separated list. Allowed values: `attachments`, `supplier_category`, `supplier_groups`, `default_payment_term`, `payment_types`, `default_payment_type`, `payment_currencies`, `default_payment_currency`, `supplier_classification_values`."
                },
                "body": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Must be the string `supplier_companies`."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "An object containing the attributes for the new supplier company.",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The required name of the supplier company."
                                },
                                "description": {
                                    "type": "string",
                                    "description": "Description of the company."
                                },
                                "public": {
                                    "type": "boolean",
                                    "description": "Whether the company is public."
                                },
                                "risk": {
                                    "type": "string",
                                    "description": "An optional slug representing the risk classification."
                                },
                                "segmentation": {
                                    "type": "string",
                                    "description": "Optional. The segmentation type, formatted as a slug."
                                },
                                "segmentation_status": {
                                    "type": "string",
                                    "description": "Optional. The slug representing the segmentation status."
                                },
                                "segmentation_notes": {
                                    "type": "string",
                                    "description": "Notes for segmentation."
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "Optional. Tags associated with the supplier company."
                                },
                                "url": {
                                    "type": "string",
                                    "description": "The supplier's website."
                                },
                                "duns_number": {
                                    "type": "string",
                                    "description": "An optional D-U-N-S® number."
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "An optional, custom identifier for the supplier company."
                                },
                                "self_registered": {
                                    "type": "boolean",
                                    "description": "Indicates whether the supplier self-registered."
                                },
                                "onboarding_form_completion_status": {
                                    "type": "string",
                                    "description": "The optional onboarding status, which must be one of: `null`, `\"not_started\"`, `\"in_progress\"`, or `\"completed\"`."
                                },
                                "accept_all_currencies": {
                                    "type": "boolean",
                                    "description": "Specifies whether the supplier company accepts all currencies."
                                },
                                "custom_fields": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Field name."
                                            },
                                            "value": {
                                                "type": "object",
                                                "description": "Field value."
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "value"
                                        ]
                                    },
                                    "description": "An optional list of custom fields."
                                }
                            },
                            "required": [
                                "accept_all_currencies",
                                "custom_fields",
                                "description",
                                "duns_number",
                                "external_id",
                                "name",
                                "onboarding_form_completion_status",
                                "public",
                                "risk",
                                "segmentation",
                                "segmentation_notes",
                                "segmentation_status",
                                "self_registered",
                                "tags",
                                "url"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "properties": {},
                            "description": "An optional object of resource links. Valid keys are `supplier_category`, `supplier_groups`, `default_payment_term`, `payment_types`, `default_payment_type`, `payment_currencies`, `default_payment_currency`, `attachments`, and `supplier_classification_values`."
                        }
                    },
                    "description": "The details of the supplier company to create.",
                    "required": [
                        "attributes",
                        "relationships",
                        "type"
                    ]
                }
            }
        }
    },
    {
        "name": "create_supplier_company_segmentation",
        "description": "Creates a new supplier company segmentation defined by a label, display order, and an optional slug for programmatic reference.",
        "parameters": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "label": {
                            "type": "string",
                            "description": "A required display label for the segmentation, with a maximum length of 255 characters."
                        },
                        "order": {
                            "type": "integer",
                            "description": "Required. The index for the UI display order."
                        },
                        "slug": {
                            "type": "string",
                            "description": "An optional programmatic identifier with a maximum length of 255 characters."
                        }
                    },
                    "description": "Defines the details for a new supplier company segmentation.",
                    "required": [
                        "label",
                        "order"
                    ]
                }
            }
        }
    },
    {
        "name": "create_supplier_contact",
        "description": "Creates and returns a complete supplier contact object, linked to a supplier by its ID or external ID, with optional contact types and a phone reference.",
        "parameters": {
            "type": "object",
            "properties": {
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of related resources to include, which must be one or more of `supplier_company`, `contact_types`, or `phones`."
                },
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "object",
                            "properties": {},
                            "description": ""
                        },
                        "type": {
                            "type": "string",
                            "description": "Must be the string `supplier_contacts`."
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The contact's full name, with a maximum of 255 characters; required if `first_name` and `last_name` are not provided."
                                },
                                "first_name": {
                                    "type": "string",
                                    "description": "The first name, with a maximum length of 255 characters."
                                },
                                "last_name": {
                                    "type": "string",
                                    "description": "The last name, with a maximum length of 255 characters."
                                },
                                "email": {
                                    "type": "string",
                                    "description": "The contact's required email address (maximum 255 characters)."
                                },
                                "notes": {
                                    "type": "string",
                                    "description": "Additional notes about the contact."
                                },
                                "phone_number": {
                                    "type": "string",
                                    "description": "Deprecated. Use the `phones` relationship instead."
                                },
                                "job_title": {
                                    "type": "string",
                                    "description": "The job title of the contact."
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "An identifier for the resource from an external system."
                                },
                                "is_suggested": {
                                    "type": "boolean",
                                    "description": "Indicates if the contact was suggested but remains unapproved."
                                }
                            },
                            "description": "",
                            "required": [
                                "email",
                                "name"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "properties": {
                                "supplier_company": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "description": "The unique identifier for the supplier company, which can be its internal or external ID."
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "The resource type, which must be `supplier_companies`."
                                                }
                                            },
                                            "description": "",
                                            "required": [
                                                "id",
                                                "type"
                                            ]
                                        }
                                    },
                                    "description": "Required. The relationship to the associated supplier company.",
                                    "required": [
                                        "data"
                                    ]
                                },
                                "contact_types": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "Contact type ID."
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": "Must be \"contact_types\"."
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "type"
                                                ]
                                            },
                                            "description": ""
                                        }
                                    },
                                    "description": "",
                                    "required": [
                                        "data"
                                    ]
                                },
                                "phones": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "Phone ID."
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": "Must be \"phones\"."
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "type"
                                                ]
                                            },
                                            "description": "A maximum of one phone can be associated."
                                        }
                                    },
                                    "description": "",
                                    "required": [
                                        "data"
                                    ]
                                }
                            },
                            "description": "",
                            "required": [
                                "supplier_company"
                            ]
                        }
                    },
                    "description": "Details of the supplier contact to create.",
                    "required": [
                        "attributes",
                        "data",
                        "relationships",
                        "type"
                    ]
                }
            }
        }
    },
    {
        "name": "deactivate_scim_user_by_id",
        "description": "Deactivates a user by their unique identifier, marking them as inactive while preventing self-deactivation and handling non-existent users.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique SCIM user identifier of the user to deactivate."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_attachment_by_external_id",
        "description": "Delete an attachment by its external ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The external ID of the attachment to delete."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_attachment_by_id",
        "description": "Delete an attachment by its internal ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal ID of the attachment to delete."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_contact_type_by_external_id",
        "description": "Delete a contact type by its external ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "Unique external ID of the contact type to delete."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_contact_type_by_id",
        "description": "Delete a contact type from the system.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique internal ID of the contact type to delete."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_contract_by_external_id",
        "description": "Delete a contract by its external ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "External identifier of the contract to delete."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_contract_by_id",
        "description": "Delete a contract by its internal ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal identifier of the contract to delete."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_contract_type_by_external_id",
        "description": "Delete a contract type by its external ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "External identifier of the contract type to delete."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_contract_type_by_id",
        "description": "Delete a contract type by its internal ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal identifier of the contract type to delete."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_event_by_id",
        "description": "Delete an event.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique identifier of the event to delete."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_event_worksheet_line_item_by_id",
        "description": "Deletes a specific line item from the system.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "Unique identifier of the line item's parent event."
                },
                "worksheet_id": {
                    "type": "integer",
                    "description": "The unique identifier of the worksheet to which the line item belongs."
                },
                "id": {
                    "type": "integer",
                    "description": "The unique identifier of the line item to delete."
                }
            },
            "required": [
                "event_id",
                "id",
                "worksheet_id"
            ]
        }
    },
    {
        "name": "delete_field_by_external_id",
        "description": "Deletes a specific field from the system by its external ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The external identifier of the field to delete."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_field_by_id",
        "description": "Deletes a field using its internal integer or string identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The integer or string internal identifier of the field to delete."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_field_group_by_id",
        "description": "Delete a specific field group.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the field group to delete."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_field_options_by_id",
        "description": "Deletes a field option from the system.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the field option to delete."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_payment_currency_by_external_id",
        "description": "Deletes a payment currency by its external identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "External ID of the currency to delete."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_payment_currency_by_id",
        "description": "Delete a payment currency using its internal identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal identifier of the currency to delete."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_payment_term_by_external_id",
        "description": "Deletes a payment term using its external identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "External identifier of the payment term to delete."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_payment_term_by_id",
        "description": "Deletes a payment term using its internal identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Internal identifier of the payment term to delete."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_payment_type_by_external_id",
        "description": "Deletes a payment type using its external identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The external identifier of the payment type to delete."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_payment_type_by_id",
        "description": "Delete a payment type using its internal identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal identifier of the payment type to delete."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_project_by_external_id",
        "description": "Delete a project by external identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "Unique external identifier for the project to delete."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_project_by_id",
        "description": "Delete a project by its unique internal identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique internal identifier of the project to delete."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_spend_category_by_external_id",
        "description": "Deletes an existing spend category using the internal ID provided in the URL path.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Internal identifier of the spend category to be deleted."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_spend_category_by_id",
        "description": "Permanently delete an existing spend category by its unique identifier, which must match the ID assigned during creation.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "Unique ID of the spend category to delete."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_supplier_company_by_external_id",
        "description": "Deletes a supplier company permanently, identified by the external ID provided during its creation.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The required external ID of the supplier company to delete, for example `1234-5678-abcd-efgh`."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_supplier_company_by_id",
        "description": "Deletes a supplier company by its unique, created ID, permanently removing its record.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A required, unique supplier company identifier; for example, `1`."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_supplier_company_contact_by_id",
        "description": "Deletes a supplier company contact using the company and contact IDs.",
        "parameters": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer",
                    "description": "The unique internal system ID for the supplier company."
                },
                "contact_id": {
                    "type": "integer",
                    "description": "The unique identifier for the contact, used internally by the system."
                }
            },
            "required": [
                "company_id",
                "contact_id"
            ]
        }
    },
    {
        "name": "delete_supplier_contact_by_external_id",
        "description": "Permanently deletes a supplier contact using its external identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "Required. The unique external identifier of the supplier contact, for example, `CNT-17`."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_supplier_contact_by_id",
        "description": "Deletes a supplier contact permanently using its unique identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A required unique identifier for the supplier contact to be deleted."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "describe_bid_fields",
        "description": "Return a list of strings representing field names available in bid objects.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "describe_bid_line_items_fields",
        "description": "Retrieve a list of available fields for bid line item objects.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "describe_supplier_company_fields",
        "description": "Returns a list of field names for the Supplier Company resource.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_attachment_by_external_id",
        "description": "Retrieve a specific attachment by its external ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The attachment's external ID for retrieval."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "get_attachment_by_id",
        "description": "Retrieve a specific attachment by its internal ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal ID of the attachment to retrieve."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_award_line_item_by_id",
        "description": "Retrieve details of a specific award line item.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the award line item to retrieve."
                },
                "_include": {
                    "type": "string",
                    "description": "Request related resources alongside the primary resource; supported values include \"supplier_company\" and \"worksheet\"."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_bid_by_id",
        "description": "Retrieve details of an existing bid using its unique identifier returned upon creation.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A unique, positive integer internal identifier for the bid to retrieve, typically returned upon bid creation."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated string specifying additional related data to include in the response, such as `event` for associated event details or `supplier_company` for supplier information. Defaults to `None`."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_bid_line_item_by_id",
        "description": "Retrieves the complete details of an existing bid line item by its unique identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique identifier of the bid line item to retrieve."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_contract_award_by_id",
        "description": "Retrieves comprehensive information, including associated data, configurations, and metrics, for a specific contract award.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique internal identifier of the award to retrieve."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_contract_award_line_item_by_id",
        "description": "Retrieves comprehensive details of a specific contract award line item, including its associated data and configurations.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique identifier of the award line item to retrieve."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_contract_by_external_id",
        "description": "Retrieve details of a specific contract by its external ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The external identifier of the contract to retrieve."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of relationships to include in the response; supported values are `contract_type`, `spend_category`, `supplier_company`, `docusign_envelopes`, and `adobe_sign_agreements`."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "get_contract_by_id",
        "description": "Retrieve details of a specific contract by its internal ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal ID of the contract to retrieve."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of relationships to include in the response; supported values are `contract_type`, `spend_category`, `supplier_company`, `docusign_envelopes`, `adobe_sign_agreements`."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_contract_fields_description",
        "description": "Retrieve all available fields for the contract object.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_contract_milestone_report_schema",
        "description": "Retrieves the contract milestone report schema, defining the structure and expected data types for each field in a contract milestone report entry.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_contract_report_entries",
        "description": "Retrieves a list of contract report entries, which are aggregated data related to contract performance, values, timelines, or milestones.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_contract_report_schema",
        "description": "Retrieves the schema definition for contract report entries, outlining available fields, their types, and data structure for dynamic interpretation or building UIs and integrations.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_contract_type_by_external_id",
        "description": "Retrieve details of a specific contract type by its external ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "External ID of the contract type to retrieve."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "get_contract_type_by_id",
        "description": "Retrieve details of a specific contract type by its internal ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal ID of the contract type to retrieve."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_event_by_id",
        "description": "Retrieve details of a specific event.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique identifier of the event to retrieve."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_event_report_entries_by_report_id",
        "description": "Retrieve a paginated list of event report entries for a specific event report identified by `event_report_id`.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_report_id": {
                    "type": "integer",
                    "description": "Unique identifier for the event report to retrieve entries from."
                }
            },
            "required": [
                "event_report_id"
            ]
        }
    },
    {
        "name": "get_event_report_schema",
        "description": "Retrieves the schema definition for event report entries, providing field names and data types for dynamic interpretation and rendering.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_event_template_by_id",
        "description": "Retrieves event template details by ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Unique internal identifier of the event template."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_event_worksheet_by_id",
        "description": "Retrieves an existing worksheet's details by its unique worksheet and associated event identifiers.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "Unique identifier of the event to which the worksheet belongs."
                },
                "id": {
                    "type": "integer",
                    "description": "The unique identifier of the worksheet to retrieve."
                }
            },
            "required": [
                "event_id",
                "id"
            ]
        }
    },
    {
        "name": "get_event_worksheet_line_item_by_id",
        "description": "Retrieve details for an existing line item using its unique identifier provided at creation.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "The unique ID of the event to which the line item belongs."
                },
                "worksheet_id": {
                    "type": "integer",
                    "description": "The unique identifier of the worksheet to which the line item belongs."
                },
                "id": {
                    "type": "integer",
                    "description": "The unique identifier of the line item to retrieve."
                }
            },
            "required": [
                "event_id",
                "id",
                "worksheet_id"
            ]
        }
    },
    {
        "name": "get_field_by_external_id",
        "description": "Retrieves the details of a specific field by its external ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The field's external identifier for retrieval."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "get_field_details_by_id",
        "description": "Retrieves the details of an existing field by its internal identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal identifier (int or str) of the field to retrieve."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_field_group_by_id",
        "description": "Retrieves details of a specific field group by its unique ID, which supports both string and integer formats.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the field group to retrieve."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_performance_review_answer_report_schema",
        "description": "Retrieve the schema for performance review answer reports, outlining answer structure, field names, and data types.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_performance_review_report_schema",
        "description": "Retrieves the schema for the performance review report, defining the structure, field types, and names of report entries.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_project_by_external_id",
        "description": "Retrieves the details of a specific project using its external identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The unique external identifier of the project to retrieve."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "get_project_details_by_id",
        "description": "Retrieves project details using its unique internal identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique internal identifier of the project to retrieve."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_project_fields_description",
        "description": "Retrieves a list of available project field names.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_project_milestone_report_schema",
        "description": "Retrieves the schema definition for project milestone reports, detailing available fields for rendering forms or parsing data.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_project_report_entries_by_id",
        "description": "Retrieve a list of report entries, using the optional `project_report_id` (available from API version 2019-01-01) to scope results to a particular report.",
        "parameters": {
            "type": "object",
            "properties": {
                "project_report_id": {
                    "type": "integer",
                    "description": "Unique identifier of the project report."
                }
            },
            "required": [
                "project_report_id"
            ]
        }
    },
    {
        "name": "get_project_report_schema",
        "description": "Retrieves the schema definition for project report entries, including metadata about field names and data types.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_project_type_by_id",
        "description": "Get detailed project type information by its unique identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Unique identifier for the project type."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_savings_report_schema",
        "description": "Retrieve the savings report schema, which defines the fields and their types for report entries.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_scim_resource_type_by_name",
        "description": "Retrieve metadata for a specific SCIM resource type, including its schema, endpoint path, and supported extensions.",
        "parameters": {
            "type": "object",
            "properties": {
                "resource": {
                    "type": "string",
                    "description": "The name of the SCIM resource type, for example, \"User\"."
                }
            },
            "required": [
                "resource"
            ]
        }
    },
    {
        "name": "get_scim_resource_type_metadata_by_name",
        "description": "Retrieves schema, endpoint path, and supported extensions for a specific SCIM resource type, providing a subset of the general `/ResourceTypes` endpoint information.",
        "parameters": {
            "type": "object",
            "properties": {
                "resource": {
                    "type": "string",
                    "description": "The name of the SCIM resource type (e.g., `User`)."
                }
            },
            "required": [
                "resource"
            ]
        }
    },
    {
        "name": "get_scim_schema_by_uri",
        "description": "Retrieves a specific SCIM schema by its URI, providing its structure and metadata, including attributes and constraints, for a SCIM resource type (e.g., User, Group).",
        "parameters": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "description": "The Schema URI identifying the SCIM resource type, for example `urn:ietf:params:scim:schemas:core:2.0:User`."
                }
            },
            "required": [
                "uri"
            ]
        }
    },
    {
        "name": "get_scim_service_provider_config",
        "description": "Retrieves the SCIM service provider configuration, providing metadata on supported features and capabilities like patch, filter, bulk, and authentication schemes, as specified in RFC 7643 Section 5.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_scim_user_by_id",
        "description": "Retrieves details of a single user by SCIM resource ID, conforming to SCIM 2.0 RFC 7644 Section 3.4.1 and returning user metadata, core attributes, and optional related roles or identifiers.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique SCIM identifier for the user to retrieve."
                },
                "attributes": {
                    "type": "string",
                    "description": "An optional, comma-separated list of attributes to return in the response, including `userName`, `name.familyName`, `name.givenName`, `roles`, `roles.value`, `externalId`, `active`, `meta.lastModified`, and `meta.created`."
                },
                "filter": {
                    "type": "string",
                    "description": "An optional filter for user searches, currently not implemented."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_spend_category_by_id",
        "description": "Retrieve details for a specific spend category, which classifies organizational spending, using its unique identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "Spend category's unique identifier."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "get_spend_category_details_by_external_id",
        "description": "Retrieves the details of an existing spend category using its internal identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The spend category's internal integer identifier."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_supplier_by_id",
        "description": "Retrieve an existing supplier company's details by its unique ID, returning the supplier object if found, or None otherwise.",
        "parameters": {
            "type": "object",
            "properties": {
                "supplier_id": {
                    "type": "integer",
                    "description": "Unique identifier of the supplier company to retrieve."
                }
            },
            "required": [
                "supplier_id"
            ]
        }
    },
    {
        "name": "get_supplier_company_by_external_id",
        "description": "Retrieves a supplier company by its unique external ID, optionally including related resources via the `include` query parameter.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The required external identifier of the supplier company, for example, `1234-5678-abcd-efgh`."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of related resources to include in the response, chosen from \"attachments\", \"supplier_category\", \"supplier_groups\", \"default_payment_term\", \"payment_types\", \"default_payment_type\", \"payment_currencies\", \"default_payment_currency\", and \"supplier_classification_values\"."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "get_supplier_company_by_id",
        "description": "Retrieves an existing supplier company's metadata and linked relationships using its unique identifier, optionally including related resources via the `include` parameter.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A required, unique integer identifier for the supplier company."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of related resources to include, with allowed values: \"attachments\", \"supplier_category\", \"supplier_groups\", \"default_payment_term\", \"payment_types\", \"default_payment_type\", \"payment_currencies\", \"default_payment_currency\", \"supplier_classification_values\"."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_supplier_company_contact_by_id",
        "description": "Retrieves an existing supplier company contact's details using company and contact IDs, with optional related resource inclusion.",
        "parameters": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer",
                    "description": "The unique, internal identifier for the supplier company."
                },
                "contact_id": {
                    "type": "integer",
                    "description": "The unique identifier of the contact, used internally by the system."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of related resources to include in the response (not fully implemented in simulation)."
                }
            },
            "required": [
                "company_id",
                "contact_id"
            ]
        }
    },
    {
        "name": "get_supplier_company_contacts_by_external_id",
        "description": "Retrieve contacts for a supplier company by its external identifier, optionally filtering them, ensuring the external ID matches its creation value.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "Required external identifier for the supplier company; for example, \"COMP-001\"."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of related resources to include; currently not fully implemented."
                },
                "filter": {
                    "type": "object",
                    "properties": {},
                    "description": "An optional dictionary of key-value pairs used to filter contacts."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "get_supplier_contact_by_external_id",
        "description": "Retrieves the full details of an existing supplier contact by external ID, with optional inclusion of related entities.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The required, unique external identifier for the supplier contact, for example `CNT-17`."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of related resources to include in the response, allowing \"supplier_company\", \"contact_types\", or \"phones\"."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "get_supplier_contact_by_id",
        "description": "Retrieves full details of an existing supplier contact by ID, optionally including related resources such as contact types, phones, and linked supplier company.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Required, unique identifier for the supplier contact."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of related resources to include in the response, with allowed values: `supplier_company`, `contact_types`, and `phones`."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_supplier_report_schema",
        "description": "Returns the supplier report schema, defining field names, types, and metadata for report entry structure.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_supplier_review_report_schema",
        "description": "Returns the schema definition for supplier review reports, detailing the structure of review report entries including field type and name.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_all_attachments_with_filter",
        "description": "Returns a list of up to 50 attachments, filterable by the `filter[id_equals]` parameter using a comma-separated string of IDs.",
        "parameters": {
            "type": "object",
            "properties": {
                "filter_id_equals": {
                    "type": "string",
                    "description": "A comma-separated string of attachment IDs to filter results; defaults to `None`, which returns all attachments up to the limit."
                }
            }
        }
    },
    {
        "name": "list_all_bid_line_items",
        "description": "Returns a list of all bid line items, with optional filtering by specific criteria.",
        "parameters": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "object",
                    "description": "A dictionary of field-value pairs to filter bid line items by exact match, such as `{\"bid_id\": 123, \"status\": \"active\"}`, defaulting to `None` to return all items."
                }
            }
        }
    },
    {
        "name": "list_all_suppliers",
        "description": "Returns a list of all supplier companies from the simulation database, without filtering or pagination.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_attachments_by_ids",
        "description": "Retrieve a filtered list of attachments by ID, with a maximum limit of 50 per request.",
        "parameters": {
            "type": "object",
            "properties": {
                "filter_id_equals": {
                    "type": "string",
                    "description": "A comma-separated string of attachment IDs to filter by."
                }
            },
            "required": [
                "filter_id_equals"
            ]
        }
    },
    {
        "name": "list_award_line_items_for_award",
        "description": "Retrieve line items associated with a specific award.",
        "parameters": {
            "type": "object",
            "properties": {
                "award_id": {
                    "type": "integer",
                    "description": "The unique identifier of the award to retrieve line items for."
                },
                "filter_is_quoted_equals": {
                    "type": "boolean",
                    "description": "Filters line items by their quoted status: `True` for quoted items, `False` for non-quoted items."
                },
                "filter_line_item_type_equals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Filter award line items by type; valid types are \"STANDARD\", \"GOODS\", or \"SERVICES\"."
                },
                "_include": {
                    "type": "string",
                    "description": "Specifies a related resource (\"supplier_company\" or \"worksheet\") to include with the primary resource."
                }
            },
            "required": [
                "award_id"
            ]
        }
    },
    {
        "name": "list_awards_with_filters",
        "description": "Retrieve a list of awards by supporting combined filtering on state and update timestamps.",
        "parameters": {
            "type": "object",
            "properties": {
                "filter_state_equals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of states to filter awards by, including `draft`, `confirmed`, `awaiting_requisition_sync`, and `requisition_created`."
                },
                "filter_updated_at_from": {
                    "type": "string",
                    "description": "Specifies the earliest update timestamp for awards to include."
                },
                "filter_updated_at_to": {
                    "type": "string",
                    "description": "Filters awards updated on or before this timestamp."
                }
            }
        }
    },
    {
        "name": "list_bid_line_items_for_bid",
        "description": "Returns a list of line items associated with the specified bid ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "bid_id": {
                    "type": "integer",
                    "description": "The bid's unique identifier for retrieving line items."
                }
            },
            "required": [
                "bid_id"
            ]
        }
    },
    {
        "name": "list_contact_types",
        "description": "Retrieves a list of all contact types in the system.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_contract_award_line_items",
        "description": "Retrieves a list of line items for a contract award, detailing its components.",
        "parameters": {
            "type": "object",
            "properties": {
                "award_id": {
                    "type": "integer",
                    "description": "The unique identifier of the award to retrieve its line items."
                }
            },
            "required": [
                "award_id"
            ]
        }
    },
    {
        "name": "list_contract_awards",
        "description": "Retrieves a list of all contract awards from the Workday Strategic Sourcing system, including comprehensive associated data and configurations.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_contract_milestone_report_entries",
        "description": "Retrieves paginated contract milestone report entries for tracking progress and performance across contracts.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_contract_types",
        "description": "Retrieve a list of all available contract types.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_contracts",
        "description": "Retrieve a list of contracts, supporting filtering by any contract attribute, relationship inclusion, and pagination.",
        "parameters": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "object",
                    "description": "A dictionary of criteria to filter contracts, supporting range-based, string pattern, value equality, and presence checks for various contract attributes.",
                    "properties": {
                        "updated_at_from": {
                            "type": "string",
                            "description": "Timestamp for filtering contracts updated on or after."
                        },
                        "updated_at_to": {
                            "type": "string",
                            "description": "Filters contracts updated on or before the specified timestamp."
                        },
                        "number_from": {
                            "type": "string",
                            "description": "Find contracts with a number greater than or equal to the specified value."
                        },
                        "number_to": {
                            "type": "string",
                            "description": "Filters contracts where the number is less than or equal to the specified value."
                        },
                        "title_contains": {
                            "type": "string",
                            "description": "Return contracts with title containing the specified string."
                        },
                        "title_not_contains": {
                            "type": "string",
                            "description": "Return contracts with titles not containing the specified string."
                        },
                        "description_contains": {
                            "type": "string",
                            "description": "The string to search for within contract descriptions."
                        },
                        "description_not_contains": {
                            "type": "string",
                            "description": "Filters contracts where the description does not contain the specified string."
                        },
                        "external_id_empty": {
                            "type": "boolean",
                            "description": "Filter contracts to return only those with a blank `external_id`."
                        },
                        "external_id_not_empty": {
                            "type": "boolean",
                            "description": "Filter for contracts with a non-blank external ID."
                        },
                        "external_id_equals": {
                            "type": "string",
                            "description": "Retrieves contracts by a specific external ID."
                        },
                        "external_id_not_equals": {
                            "type": "string",
                            "description": "Find contracts excluding the specified external ID."
                        },
                        "actual_start_date_from": {
                            "type": "string",
                            "description": "Filters contracts by their start date, including those on or after the specified date."
                        },
                        "actual_start_date_to": {
                            "type": "string",
                            "description": "Return contracts started on or before date."
                        },
                        "actual_end_date_from": {
                            "type": "string",
                            "description": "Filters contracts that ended on or after the specified date."
                        },
                        "actual_end_date_to": {
                            "type": "string",
                            "description": "A date string; returns contracts with an actual end date on or before this date."
                        },
                        "actual_spend_amount_from": {
                            "type": "number",
                            "description": "Return contracts with spend greater than or equal to the specified amount."
                        },
                        "actual_spend_amount_to": {
                            "type": "number",
                            "description": "Return contracts with an `actual_spend_amount` less than or equal to the specified amount."
                        },
                        "auto_renewal": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Auto-renewal mode(s), as a list of 'yes', 'no', or 'evergreen'."
                        },
                        "needs_attention_equals": {
                            "type": "boolean",
                            "description": "A boolean value to filter contracts by their 'needs attention' status."
                        },
                        "needs_attention_not_equals": {
                            "type": "boolean",
                            "description": "Returns contracts where the `needs_attention` status is not equal to the specified boolean value."
                        },
                        "renew_number_of_times_from": {
                            "type": "integer",
                            "description": "Filters contracts to include those renewing at least the specified number of times."
                        },
                        "renew_number_of_times_to": {
                            "type": "integer",
                            "description": "Filter contracts that renew up to the specified number of times."
                        },
                        "state_equals": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "A list of strings to find contracts with specified states."
                        },
                        "terminated_note_contains": {
                            "type": "string",
                            "description": "The string to search for within a contract's termination note."
                        },
                        "terminated_note_not_contains": {
                            "type": "string",
                            "description": "Filters contracts where the termination note does not contain the specified string."
                        },
                        "terminated_note_empty": {
                            "type": "string",
                            "description": "Filters contracts to include only those with an empty termination note."
                        },
                        "terminated_note_not_empty": {
                            "type": "string",
                            "description": "Includes contracts that have a non-empty termination note."
                        },
                        "terminated_reason_contains": {
                            "type": "string",
                            "description": "Return contracts with termination reason containing string."
                        },
                        "terminated_reason_not_contains": {
                            "type": "string",
                            "description": "Filters contracts where the termination reason does not contain the provided string."
                        },
                        "terminated_reason_empty": {
                            "type": "string",
                            "description": "A string parameter that filters contracts for an empty termination reason."
                        },
                        "terminated_reason_not_empty": {
                            "type": "string",
                            "description": "Includes contracts with a non-empty termination reason."
                        },
                        "contract_type_id_equals": {
                            "type": "integer",
                            "description": "Filters contracts by a specified contract type ID."
                        },
                        "contract_type_id_not_equals": {
                            "type": "integer",
                            "description": "Return contracts with a contract type ID not equal to the given integer."
                        },
                        "marked_as_needs_attention_at_from": {
                            "type": "string",
                            "description": "Return contracts marked as needing attention on or after the specified date."
                        },
                        "marked_as_needs_attention_at_to": {
                            "type": "string",
                            "description": "Find contracts marked as needs attention before the specified date."
                        },
                        "needs_attention_note_contains": {
                            "type": "string",
                            "description": "Filters contracts where the `needs_attention_note` contains the specified string."
                        },
                        "needs_attention_note_not_contains": {
                            "type": "string",
                            "description": "Matches contracts where the needs attention note does not contain the provided string."
                        },
                        "needs_attention_note_empty": {
                            "type": "string",
                            "description": "Includes contracts with an empty needs attention note."
                        },
                        "needs_attention_note_not_empty": {
                            "type": "string",
                            "description": "Return contracts with a non-empty needs attention note."
                        },
                        "needs_attention_reason_contains": {
                            "type": "string",
                            "description": "The string to search for within the contract's needs attention reason."
                        },
                        "needs_attention_reason_not_contains": {
                            "type": "string",
                            "description": "Return contracts where the needs attention reason does not contain the specified string."
                        },
                        "needs_attention_reason_empty": {
                            "type": "string",
                            "description": "Filters contracts to include those with an empty needs attention reason (string parameter)."
                        },
                        "needs_attention_reason_not_empty": {
                            "type": "string",
                            "description": "Return contracts with a non-empty needs attention reason."
                        },
                        "renewal_termination_notice_date_from": {
                            "type": "string",
                            "description": "Find contracts with a termination notice date on or after the specified date."
                        },
                        "renewal_termination_notice_date_to": {
                            "type": "string",
                            "description": "Return contracts where the termination notice date is less than or equal to the specified date."
                        },
                        "renewal_termination_reminder_date_from": {
                            "type": "string",
                            "description": "Return contracts with termination reminder date on or after the specified date."
                        },
                        "renewal_termination_reminder_date_to": {
                            "type": "string",
                            "description": "Contracts with a termination reminder date on or before the specified date."
                        },
                        "spend_category_id_equals": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "description": "A list of Spend Category IDs to filter contracts."
                        }
                    },
                    "required": [
                        "actual_end_date_from",
                        "actual_end_date_to",
                        "actual_spend_amount_from",
                        "actual_spend_amount_to",
                        "actual_start_date_from",
                        "actual_start_date_to",
                        "auto_renewal",
                        "contract_type_id_equals",
                        "contract_type_id_not_equals",
                        "description_contains",
                        "description_not_contains",
                        "external_id_empty",
                        "external_id_equals",
                        "external_id_not_empty",
                        "external_id_not_equals",
                        "marked_as_needs_attention_at_from",
                        "marked_as_needs_attention_at_to",
                        "needs_attention_equals",
                        "needs_attention_not_equals",
                        "needs_attention_note_contains",
                        "needs_attention_note_empty",
                        "needs_attention_note_not_contains",
                        "needs_attention_note_not_empty",
                        "needs_attention_reason_contains",
                        "needs_attention_reason_empty",
                        "needs_attention_reason_not_contains",
                        "needs_attention_reason_not_empty",
                        "number_from",
                        "number_to",
                        "renew_number_of_times_from",
                        "renew_number_of_times_to",
                        "renewal_termination_notice_date_from",
                        "renewal_termination_notice_date_to",
                        "renewal_termination_reminder_date_from",
                        "renewal_termination_reminder_date_to",
                        "spend_category_id_equals",
                        "state_equals",
                        "terminated_note_contains",
                        "terminated_note_empty",
                        "terminated_note_not_contains",
                        "terminated_note_not_empty",
                        "terminated_reason_contains",
                        "terminated_reason_empty",
                        "terminated_reason_not_contains",
                        "terminated_reason_not_empty",
                        "title_contains",
                        "title_not_contains",
                        "updated_at_from",
                        "updated_at_to"
                    ]
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of relationships to include in the response, supporting `contract_type`, `spend_category`, `supplier_company`, `docusign_envelopes`, and `adobe_sign_agreements`."
                },
                "page": {
                    "type": "object",
                    "description": "A dictionary specifying pagination parameters, including `size` (int) for the number of results per page (default: 10, max: 100).",
                    "properties": {
                        "size": {
                            "type": "integer",
                            "description": "Number of results per page (default: 10, max: 100)."
                        }
                    },
                    "required": [
                        "size"
                    ]
                }
            }
        }
    },
    {
        "name": "list_custom_fields",
        "description": "List all custom fields, optionally filtered by specified criteria.",
        "parameters": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "object",
                    "description": "A dictionary for filtering fields by `group_id_equals` (string) or `target_object_equals` (string); returns all fields if `None`.",
                    "properties": {
                        "group_id_equals": {
                            "type": "string",
                            "description": "The ID of the group for selecting fields."
                        },
                        "target_object_equals": {
                            "type": "string",
                            "description": "The target class name for filtering custom fields."
                        }
                    },
                    "required": [
                        "group_id_equals",
                        "target_object_equals"
                    ]
                }
            }
        }
    },
    {
        "name": "list_event_bids",
        "description": "Return a list of bids for the specified event, restricted to events of type RFP, with support for filtering, pagination, and optional data inclusion.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "The unique identifier of the event for bid retrieval."
                },
                "filter": {
                    "type": "object",
                    "description": "A dictionary containing filter criteria for bids, where keys define filter fields and values (integers, booleans, strings, or lists of strings) specify the criteria, supporting filtering by ID, status, intent to bid, timestamps, and supplier company details.",
                    "properties": {
                        "id_equals": {
                            "type": "integer",
                            "description": "Filters bids by a specific ID."
                        },
                        "intend_to_bid_equals": {
                            "type": "boolean",
                            "description": "Filters bids by the specified boolean 'intent to bid' status."
                        },
                        "intend_to_bid_not_equals": {
                            "type": "boolean",
                            "description": "Return bids where the 'intent to bid' status is not equal to the specified boolean value."
                        },
                        "intend_to_bid_answered_at_from": {
                            "type": "string",
                            "description": "Filters bids where `intend_to_bid` was updated on or after the specified timestamp."
                        },
                        "intend_to_bid_answered_at_to": {
                            "type": "string",
                            "description": "Filters bids where `intend_to_bid` was updated on or before the timestamp."
                        },
                        "submitted_at_from": {
                            "type": "string",
                            "description": "Filters bids where `submitted_at` is on or after the specified timestamp."
                        },
                        "submitted_at_to": {
                            "type": "string",
                            "description": "Filter bids submitted on or before a specified timestamp string."
                        },
                        "resubmitted_at_from": {
                            "type": "string",
                            "description": "A timestamp for returning bids where `resubmitted_at` is on or after this value."
                        },
                        "resubmitted_at_to": {
                            "type": "string",
                            "description": "A timestamp string to filter bids where `resubmitted_at` is on or before this time."
                        },
                        "status_equals": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "A list of statuses to find bids by, including: `award_retracted`, `awarded`, `draft`, `rejected`, `rejection_retracted`, `resubmitted`, `revising`, `submitted`, `unclaimed`, or `update_requested`."
                        },
                        "supplier_company_id_equals": {
                            "type": "integer",
                            "description": "Filters bids by specific supplier company IDs."
                        },
                        "supplier_company_external_id_equals": {
                            "type": "string",
                            "description": "A specific Supplier Company External ID to find bids by."
                        }
                    },
                    "required": [
                        "id_equals",
                        "intend_to_bid_answered_at_from",
                        "intend_to_bid_answered_at_to",
                        "intend_to_bid_equals",
                        "intend_to_bid_not_equals",
                        "resubmitted_at_from",
                        "resubmitted_at_to",
                        "status_equals",
                        "submitted_at_from",
                        "submitted_at_to",
                        "supplier_company_external_id_equals",
                        "supplier_company_id_equals"
                    ]
                },
                "_include": {
                    "type": "string",
                    "description": "A string to include additional related resources: `event` for event details or `supplier_company` for supplier company details. Defaults to `None`."
                },
                "page": {
                    "type": "object",
                    "description": "A dictionary containing pagination parameters, specifically `size` (int) for the number of results per page (default: 10, max: 100).",
                    "properties": {
                        "size": {
                            "type": "integer",
                            "description": "The number of results returned per page, defaulting to 10 with a maximum of 100."
                        }
                    },
                    "required": [
                        "size"
                    ]
                }
            },
            "required": [
                "event_id"
            ]
        }
    },
    {
        "name": "list_event_report_entries",
        "description": "Retrieves a paginated list of event report entries, detailed records of system events (e.g., audit events, workflow triggers, system updates), supporting traversal through `next` and `prev` links.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_event_templates",
        "description": "Return a list of all event templates.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_event_worksheet_line_items",
        "description": "Retrieve line items by event ID and worksheet ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "The unique identifier for the event associated with the line items."
                },
                "worksheet_id": {
                    "type": "integer",
                    "description": "The unique ID of the worksheet containing the line items."
                }
            },
            "required": [
                "event_id",
                "worksheet_id"
            ]
        }
    },
    {
        "name": "list_event_worksheets",
        "description": "List all worksheets for a specified event.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "The unique identifier of the event to which the worksheets belong."
                }
            },
            "required": [
                "event_id"
            ]
        }
    },
    {
        "name": "list_events_with_filters",
        "description": "Get a list of events based on specified criteria.",
        "parameters": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "object",
                    "description": "A dictionary mapping event attributes to values for filtering, supporting various criteria like date ranges, string containment, exact matches, and emptiness checks.",
                    "properties": {
                        "updated_at_from": {
                            "type": "string",
                            "description": "A timestamp to return events updated on or after."
                        },
                        "updated_at_to": {
                            "type": "string",
                            "description": "Return events updated on or before the given timestamp string."
                        },
                        "title_contains": {
                            "type": "string",
                            "description": "A string for filtering events where the title contains it."
                        },
                        "title_not_contains": {
                            "type": "string",
                            "description": "A string for filtering events, excluding those with titles containing this value."
                        },
                        "spend_category_id_equals": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "description": "A list of integer Spend Category IDs to find events."
                        },
                        "state_equals": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "The states to match for events: 'draft', 'scheduled', 'published', 'live_editing', 'closed', 'canceled'."
                        },
                        "event_type_equals": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Filters events by type, accepting a list of values: 'RFP', 'AUCTION', 'AUCTION_WITH_LOTS', 'AUCTION_LOT', 'PERFORMANCE_REVIEW_EVENT', 'PERFORMANCE_REVIEW_SCORE_CARD_ONLY_EVENT', 'SUPPLIER_REVIEW_EVENT', 'SUPPLIER_REVIEW_MASTER_EVENT'."
                        },
                        "request_type_equals": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "A list of strings specifying event request types to match."
                        },
                        "supplier_rsvp_deadline_from": {
                            "type": "string",
                            "description": "A date string for filtering events with an RSVP deadline on or after the specified date."
                        },
                        "supplier_rsvp_deadline_to": {
                            "type": "string",
                            "description": "Filters events to include those with an RSVP deadline on or before the specified date."
                        },
                        "supplier_rsvp_deadline_empty": {
                            "type": "boolean",
                            "description": "Filters for events with an unset RSVP deadline."
                        },
                        "supplier_rsvp_deadline_not_empty": {
                            "type": "boolean",
                            "description": "Indicates whether to include events with a set RSVP deadline."
                        },
                        "supplier_question_deadline_from": {
                            "type": "string",
                            "description": "Filter events with a questions deadline on or after this date."
                        },
                        "supplier_question_deadline_to": {
                            "type": "string",
                            "description": "Filters events where the questions deadline is on or before the specified date."
                        },
                        "supplier_question_deadline_empty": {
                            "type": "boolean",
                            "description": "Return events with questions deadline not set."
                        },
                        "supplier_question_deadline_not_empty": {
                            "type": "boolean",
                            "description": "Filters for events with a questions deadline set."
                        },
                        "bid_submission_deadline_from": {
                            "type": "string",
                            "description": "Events with a bid deadline on or after the specified date."
                        },
                        "bid_submission_deadline_to": {
                            "type": "string",
                            "description": "A date string that filters events with a bid deadline on or before this date."
                        },
                        "bid_submission_deadline_empty": {
                            "type": "boolean",
                            "description": "Return events with bid deadline not set."
                        },
                        "bid_submission_deadline_not_empty": {
                            "type": "boolean",
                            "description": "Filters events with a set bid deadline."
                        },
                        "created_at_from": {
                            "type": "string",
                            "description": "A timestamp for filtering events created on or after."
                        },
                        "created_at_to": {
                            "type": "string",
                            "description": "Filters events created on or before the specified timestamp."
                        },
                        "published_at_from": {
                            "type": "string",
                            "description": "A timestamp string to filter events published on or after."
                        },
                        "published_at_to": {
                            "type": "string",
                            "description": "A timestamp to return events published on or before."
                        },
                        "published_at_empty": {
                            "type": "boolean",
                            "description": "Return events without a published timestamp."
                        },
                        "published_at_not_empty": {
                            "type": "boolean",
                            "description": "Returns events with a published timestamp."
                        },
                        "closed_at_from": {
                            "type": "string",
                            "description": "Return events closed on or after the specified timestamp."
                        },
                        "closed_at_to": {
                            "type": "string",
                            "description": "A timestamp string for filtering events closed on or before."
                        },
                        "closed_at_empty": {
                            "type": "boolean",
                            "description": "Returns events without a closed timestamp."
                        },
                        "closed_at_not_empty": {
                            "type": "boolean",
                            "description": "Return events with a closed timestamp."
                        },
                        "spend_amount_from": {
                            "type": "number",
                            "description": "Return events with a spend amount greater than or equal to the specified float value."
                        },
                        "spend_amount_to": {
                            "type": "number",
                            "description": "A float representing the maximum spend amount for events to return."
                        },
                        "spend_amount_empty": {
                            "type": "boolean",
                            "description": "Returns events without a spend amount."
                        },
                        "spend_amount_not_empty": {
                            "type": "boolean",
                            "description": "Includes events with a spend amount set."
                        },
                        "external_id_empty": {
                            "type": "boolean",
                            "description": "A filter to return events with a blank `external_id`."
                        },
                        "external_id_not_empty": {
                            "type": "boolean",
                            "description": "Indicates whether to return events with a non-blank external ID."
                        },
                        "external_id_equals": {
                            "type": "string",
                            "description": "Filters events by a specific external ID."
                        },
                        "external_id_not_equals": {
                            "type": "string",
                            "description": "Excludes events that match the specified external ID string."
                        }
                    },
                    "required": [
                        "bid_submission_deadline_empty",
                        "bid_submission_deadline_from",
                        "bid_submission_deadline_not_empty",
                        "bid_submission_deadline_to",
                        "closed_at_empty",
                        "closed_at_from",
                        "closed_at_not_empty",
                        "closed_at_to",
                        "created_at_from",
                        "created_at_to",
                        "event_type_equals",
                        "external_id_empty",
                        "external_id_equals",
                        "external_id_not_empty",
                        "external_id_not_equals",
                        "published_at_empty",
                        "published_at_from",
                        "published_at_not_empty",
                        "published_at_to",
                        "request_type_equals",
                        "spend_amount_empty",
                        "spend_amount_from",
                        "spend_amount_not_empty",
                        "spend_amount_to",
                        "spend_category_id_equals",
                        "state_equals",
                        "supplier_question_deadline_empty",
                        "supplier_question_deadline_from",
                        "supplier_question_deadline_not_empty",
                        "supplier_question_deadline_to",
                        "supplier_rsvp_deadline_empty",
                        "supplier_rsvp_deadline_from",
                        "supplier_rsvp_deadline_not_empty",
                        "supplier_rsvp_deadline_to",
                        "title_contains",
                        "title_not_contains",
                        "updated_at_from",
                        "updated_at_to"
                    ]
                },
                "page": {
                    "type": "object",
                    "description": "A dictionary for pagination, containing the `size` (int) of results per page (default: 10, max: 100).",
                    "properties": {
                        "size": {
                            "type": "integer",
                            "description": "Specifies the number of results per page, defaulting to 10 with a maximum of 100."
                        }
                    },
                    "required": [
                        "size"
                    ]
                }
            }
        }
    },
    {
        "name": "list_field_groups",
        "description": "Returns a list of field groups.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_field_options_by_field_id",
        "description": "Return a list of field options for the specified field.",
        "parameters": {
            "type": "object",
            "properties": {
                "field_id": {
                    "type": "string",
                    "description": "A unique identifier for the field to retrieve options."
                }
            },
            "required": [
                "field_id"
            ]
        }
    },
    {
        "name": "list_payment_currencies",
        "description": "Retrieves all available payment currencies.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_payment_terms",
        "description": "Retrieves a list of all available payment terms in the system.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_payment_types",
        "description": "Retrieve a list of all available payment types in the system.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_performance_review_answer_report_entries",
        "description": "Retrieves a list of performance review answer entries, supporting pagination via `next` and `prev` links.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_performance_review_report_entries",
        "description": "Retrieves detailed, paginated performance review report entries, where each entry contains performance review attributes and supports iteration via pagination links.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_project_milestone_report_entries",
        "description": "Retrieves a list of project milestone report entries, each detailing project milestones.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_project_types",
        "description": "Retrieves a list of all available project types, each including a name and a short code.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_projects",
        "description": "Retrieve a list of projects based on optional filtering criteria and pagination settings.",
        "parameters": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "object",
                    "description": "A dictionary specifying supported criteria for filtering projects.",
                    "properties": {
                        "updated_at_from": {
                            "type": "object",
                            "description": "A `datetime` timestamp to filter projects updated on or after this value."
                        },
                        "updated_at_to": {
                            "type": "object",
                            "description": "A timestamp to filter projects updated on or before."
                        },
                        "number_from": {
                            "type": "integer",
                            "description": "Return projects with a number equal to or greater than the specified integer."
                        },
                        "number_to": {
                            "type": "integer",
                            "description": "Projects with a number less than or equal to the specified value."
                        },
                        "title_contains": {
                            "type": "string",
                            "description": "Filters projects by titles that contain the provided string."
                        },
                        "title_not_contains": {
                            "type": "string",
                            "description": "A string to exclude projects whose titles contain it."
                        },
                        "description_contains": {
                            "type": "string",
                            "description": "Filters projects by a string contained within their description."
                        },
                        "description_not_contains": {
                            "type": "string",
                            "description": "A string for excluding projects whose descriptions contain this value."
                        },
                        "external_id_empty": {
                            "type": "boolean",
                            "description": "Returns projects where `external_id` is blank."
                        },
                        "external_id_not_empty": {
                            "type": "boolean",
                            "description": "Returns projects with non-blank external IDs."
                        },
                        "external_id_equals": {
                            "type": "string",
                            "description": "Find projects by a specific external ID."
                        },
                        "external_id_not_equals": {
                            "type": "string",
                            "description": "Excludes projects with the specified external ID."
                        },
                        "actual_start_date_from": {
                            "type": "object",
                            "description": "Filters projects with an actual start date on or after the specified `date`."
                        },
                        "actual_start_date_to": {
                            "type": "object",
                            "description": "Filters projects by an actual start date on or before the specified date."
                        },
                        "actual_end_date_from": {
                            "type": "object",
                            "description": "Return projects ended on or after the specified date."
                        },
                        "actual_end_date_to": {
                            "type": "object",
                            "description": "Return projects with an actual end date on or before the specified date."
                        },
                        "target_start_date_from": {
                            "type": "object",
                            "description": "The earliest target start date for projects to include."
                        },
                        "target_start_date_to": {
                            "type": "object",
                            "description": "Filters projects targeted to start on or before the specified date."
                        },
                        "target_end_date_from": {
                            "type": "object",
                            "description": "Projects with a target end date on or after the specified date."
                        },
                        "target_end_date_to": {
                            "type": "object",
                            "description": "The `date` on or before which projects must be targeted to end."
                        },
                        "actual_spend_amount_from": {
                            "type": "number",
                            "description": "Filters projects by actual spend amount equal to or greater than the specified value."
                        },
                        "actual_spend_amount_to": {
                            "type": "number",
                            "description": "Projects with an actual spend amount less than or equal to this value."
                        },
                        "approved_spend_amount_from": {
                            "type": "number",
                            "description": "Filters projects where the approved spend amount is at least the specified value."
                        },
                        "approved_spend_amount_to": {
                            "type": "number",
                            "description": "Filters projects where the approved spend amount is less than or equal to this value."
                        },
                        "estimated_savings_amount_from": {
                            "type": "number",
                            "description": "Specifies the minimum estimated savings amount for projects."
                        },
                        "estimated_savings_amount_to": {
                            "type": "number",
                            "description": "The maximum estimated savings amount (float) for filtering projects."
                        },
                        "estimated_spend_amount_from": {
                            "type": "number",
                            "description": "Filters projects with an estimated spend amount equal to or greater than the specified value."
                        },
                        "estimated_spend_amount_to": {
                            "type": "number",
                            "description": "Filters projects by an estimated spend amount up to the specified amount."
                        },
                        "canceled_note_contains": {
                            "type": "string",
                            "description": "A string that filters projects by matching content within their cancellation note."
                        },
                        "canceled_note_not_contains": {
                            "type": "string",
                            "description": "Filters projects where the cancelation note does not contain the specified string."
                        },
                        "canceled_note_empty": {
                            "type": "string",
                            "description": "Filter projects with an empty cancelation note, accepting a string value."
                        },
                        "canceled_note_not_empty": {
                            "type": "string",
                            "description": "Return projects with a non-empty cancelation note."
                        },
                        "canceled_reason_contains": {
                            "type": "string",
                            "description": "Filters projects where the cancelation reason contains the specified string."
                        },
                        "canceled_reason_not_contains": {
                            "type": "string",
                            "description": "Filters projects where the cancelation reason does not contain the specified string."
                        },
                        "canceled_reason_empty": {
                            "type": "string",
                            "description": "Return projects with an empty cancelation reason."
                        },
                        "canceled_reason_not_empty": {
                            "type": "string",
                            "description": "Filters projects that have a non-empty cancelation reason."
                        },
                        "on_hold_note_contains": {
                            "type": "string",
                            "description": "Specifies a string to find in projects' on-hold notes."
                        },
                        "on_hold_note_not_contains": {
                            "type": "string",
                            "description": "A string to exclude from the project's on-hold note."
                        },
                        "on_hold_note_empty": {
                            "type": "string",
                            "description": "Return projects with an empty on-hold note."
                        },
                        "on_hold_note_not_empty": {
                            "type": "string",
                            "description": "Includes projects with a non-empty on-hold note."
                        },
                        "on_hold_reason_contains": {
                            "type": "string",
                            "description": "Filters projects by on-hold reason containing the specified string."
                        },
                        "on_hold_reason_not_contains": {
                            "type": "string",
                            "description": "The string to exclude from projects' on-hold reasons."
                        },
                        "on_hold_reason_empty": {
                            "type": "string",
                            "description": "Returns projects with an empty on-hold reason."
                        },
                        "on_hold_reason_not_empty": {
                            "type": "string",
                            "description": "Return projects with a non-empty on-hold reason."
                        },
                        "needs_attention_equals": {
                            "type": "boolean",
                            "description": "Return projects with the specified \"needs attention\" boolean status."
                        },
                        "needs_attention_not_equals": {
                            "type": "boolean",
                            "description": "Filters projects where the \"needs attention\" status is not equal to the specified boolean value."
                        },
                        "state_equals": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "A list of project statuses to filter projects, selected from: `draft`, `requested`, `planned`, `active`, `completed`, `canceled`, `on_hold`."
                        },
                        "marked_as_needs_attention_at_from": {
                            "type": "object",
                            "description": "Return projects marked as \"needs attention\" on or after the specified date."
                        },
                        "marked_as_needs_attention_at_to": {
                            "type": "object",
                            "description": "Filter projects marked as \"needs attention\" up to the specified datetime."
                        },
                        "needs_attention_note_contains": {
                            "type": "string",
                            "description": "The string to find within a project's 'needs attention' note."
                        },
                        "needs_attention_note_not_contains": {
                            "type": "string",
                            "description": "Filters projects where the 'needs attention' note does not contain the specified string."
                        },
                        "needs_attention_note_empty": {
                            "type": "string",
                            "description": "Return projects with an empty \"needs attention\" note."
                        },
                        "needs_attention_note_not_empty": {
                            "type": "string",
                            "description": "A boolean indicating whether to include projects with a non-empty 'needs attention' note."
                        },
                        "needs_attention_reason_contains": {
                            "type": "string",
                            "description": "A string to filter projects where the 'needs attention' reason contains this value."
                        },
                        "needs_attention_reason_not_contains": {
                            "type": "string",
                            "description": "A string to filter projects where the 'needs attention' reason does not contain this value."
                        },
                        "needs_attention_reason_empty": {
                            "type": "string",
                            "description": "A string parameter that returns projects with an empty \"needs attention\" reason."
                        },
                        "needs_attention_reason_not_empty": {
                            "type": "string",
                            "description": "Filters projects to include those with a non-empty 'needs attention' reason."
                        }
                    },
                    "required": [
                        "actual_end_date_from",
                        "actual_end_date_to",
                        "actual_spend_amount_from",
                        "actual_spend_amount_to",
                        "actual_start_date_from",
                        "actual_start_date_to",
                        "approved_spend_amount_from",
                        "approved_spend_amount_to",
                        "canceled_note_contains",
                        "canceled_note_empty",
                        "canceled_note_not_contains",
                        "canceled_note_not_empty",
                        "canceled_reason_contains",
                        "canceled_reason_empty",
                        "canceled_reason_not_contains",
                        "canceled_reason_not_empty",
                        "description_contains",
                        "description_not_contains",
                        "estimated_savings_amount_from",
                        "estimated_savings_amount_to",
                        "estimated_spend_amount_from",
                        "estimated_spend_amount_to",
                        "external_id_empty",
                        "external_id_equals",
                        "external_id_not_empty",
                        "external_id_not_equals",
                        "marked_as_needs_attention_at_from",
                        "marked_as_needs_attention_at_to",
                        "needs_attention_equals",
                        "needs_attention_not_equals",
                        "needs_attention_note_contains",
                        "needs_attention_note_empty",
                        "needs_attention_note_not_contains",
                        "needs_attention_note_not_empty",
                        "needs_attention_reason_contains",
                        "needs_attention_reason_empty",
                        "needs_attention_reason_not_contains",
                        "needs_attention_reason_not_empty",
                        "number_from",
                        "number_to",
                        "on_hold_note_contains",
                        "on_hold_note_empty",
                        "on_hold_note_not_contains",
                        "on_hold_note_not_empty",
                        "on_hold_reason_contains",
                        "on_hold_reason_empty",
                        "on_hold_reason_not_contains",
                        "on_hold_reason_not_empty",
                        "state_equals",
                        "target_end_date_from",
                        "target_end_date_to",
                        "target_start_date_from",
                        "target_start_date_to",
                        "title_contains",
                        "title_not_contains",
                        "updated_at_from",
                        "updated_at_to"
                    ]
                },
                "page": {
                    "type": "object",
                    "description": "A dictionary for pagination settings, including a `'size'` parameter to limit results per page (default: 10, max: 100); use `None` for no pagination."
                }
            }
        }
    },
    {
        "name": "list_savings_report_entries",
        "description": "Retrieve a list of all savings report entries available to the authenticated user.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_scim_resource_types",
        "description": "Lists all supported SCIM resource types available on the service provider, along with their metadata, endpoint paths, and schemas, as per RFC 7644.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_scim_schemas",
        "description": "Retrieves a list of supported SCIM schemas, including their attribute definitions and constraints.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_scim_users",
        "description": "Retrieves a list of users, supporting SCIM-compliant filtering, sorting, and pagination with a 100-item default page size.",
        "parameters": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "string",
                    "description": "A comma-separated list of specific attributes to return, such as `userName`, `name.familyName`, `name.givenName`, `roles`, `roles.value`, `externalId`, `active`, `meta.lastModified`, `meta.created`, or `id`."
                },
                "filter": {
                    "type": "string",
                    "description": "A SCIM-compliant filter expression for searching users, utilizing supported attributes and operators; for example: `userName eq \"jhon.doe@example.com\" and meta.lastModified gt \"2011-05-13T04:42:34Z\"`."
                },
                "startIndex": {
                    "type": "integer",
                    "description": "The 1-based index of the first query result, which must be 1 or greater."
                },
                "count": {
                    "type": "integer",
                    "description": "Number of results to return per page; must be >= 0."
                },
                "sortBy": {
                    "type": "string",
                    "description": "Attribute used to order results, with allowed values 'id' or 'externalId'."
                },
                "sortOrder": {
                    "type": "string",
                    "description": "The direction of sorting, either `ascending` or `descending`."
                }
            }
        }
    },
    {
        "name": "list_spend_categories",
        "description": "Retrieves a list of all available spend categories, including their optional usage types, used for grouping procurement, expenses, ad-hoc payments, and supplier invoices.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_supplier_companies",
        "description": "Retrieve a list of supplier companies, supporting filtering, pagination, and compound document formatting via the `include` parameter for efficient data retrieval.",
        "parameters": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "object",
                    "properties": {},
                    "description": "A dictionary to filter supplier companies, with one criterion per attribute."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of related resources to include; valid values are: \"attachments\", \"supplier_category\", \"supplier_groups\", \"default_payment_term\", \"payment_types\", \"default_payment_type\", \"payment_currencies\", \"default_payment_currency\", \"supplier_classification_values\"."
                },
                "page": {
                    "type": "object",
                    "properties": {},
                    "description": "A dictionary containing pagination configuration."
                }
            }
        }
    },
    {
        "name": "list_supplier_company_contacts_by_company_external_id",
        "description": "Retrieve a list of supplier contacts for a specific supplier company ID, with support for detailed filtering, relationship includes, and pagination.",
        "parameters": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer",
                    "description": "Required unique identifier for the supplier company."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of related resources to include in the response; allowed values are `supplier_company`, `contact_types`, and `phones`."
                },
                "filter": {
                    "type": "object",
                    "properties": {
                        "updated_at_from": {
                            "type": "string",
                            "description": "A string timestamp to return contacts updated on or after."
                        },
                        "updated_at_to": {
                            "type": "string",
                            "description": "Timestamp to filter contacts updated on or before."
                        }
                    },
                    "description": "A dictionary of filter parameters to narrow contact results, supporting various criteria for fields such as `updated_at`, `name`, `email`, `phone_number`, `job_title`, `notes`, `is_suggested`, and `external_id`.",
                    "required": [
                        "updated_at_from",
                        "updated_at_to"
                    ]
                }
            },
            "required": [
                "company_id"
            ]
        }
    },
    {
        "name": "list_supplier_company_segmentations",
        "description": "Retrieve all supplier company segmentation definitions, comprising label, order, and slug metadata used for categorization or filtering of supplier companies.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_supplier_report_entries",
        "description": "Retrieves all supplier report entries.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_supplier_review_report_entries",
        "description": "Returns a list of supplier review report entries, supporting pagination and including metadata for navigating result pages.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_user_owned_event_report_entries",
        "description": "Retrieves a list of event report entries specific to the authenticated user; this endpoint is deprecated as of 2019-01-01 and was only supported in API version 2018-04-01.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_user_owned_project_report_entries",
        "description": "Retrieves a list of user-owned project report entries. Deprecated: Available only for API version `2018-04-01` and removed after `2019-01-01`.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "partially_update_scim_user_by_id",
        "description": "Applies a sequence of SCIM patch operations (`add`, `remove`, `replace` per RFC 7644 §3.5.2) to partially update a user, noting that users cannot deactivate their own account and `userName` changes require matching SSO domains.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique SCIM identifier for the user."
                },
                "body": {
                    "type": "object",
                    "properties": {
                        "schemas": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "A list of SCIM schema identifiers that must include the SCIM PATCH schema URI."
                        },
                        "Operations": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "op": {
                                        "type": "string",
                                        "description": "Type of operation.\n        - Enum: \"add\", \"remove\", \"replace\""
                                    },
                                    "path": {
                                        "type": "string",
                                        "description": "SCIM path to the attribute being modified. Required for \"remove\"."
                                    },
                                    "value": {
                                        "type": "object",
                                        "description": "Value to assign or append. Can be a primitive or nested structure."
                                    }
                                },
                                "required": [
                                    "op",
                                    "value"
                                ]
                            },
                            "description": "A list of SCIM patch operations to apply, as defined in RFC 7644."
                        }
                    },
                    "description": "A dictionary of patch operations conforming to the SCIM schema, which must contain specific required keys.",
                    "required": [
                        "Operations",
                        "schemas"
                    ]
                }
            },
            "required": [
                "body",
                "id"
            ]
        }
    },
    {
        "name": "remove_supplier_companies_from_event_by_external_id",
        "description": "Remove supplier companies from a specific event using external identifiers; only RFP event types are supported.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_external_id": {
                    "type": "string",
                    "description": "The unique external identifier of the event from which suppliers will be removed."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary containing `supplier_external_ids` (list of strings) and a `type` string that must be \"supplier_companies\".",
                    "properties": {
                        "supplier_external_ids": {
                            "type": "array",
                            "description": "A list of supplier external IDs to remove from the event."
                        },
                        "type": {
                            "type": "string",
                            "description": "The object type, which must be `supplier_companies`."
                        }
                    },
                    "required": [
                        "supplier_external_ids",
                        "type"
                    ]
                }
            },
            "required": [
                "data",
                "event_external_id"
            ]
        }
    },
    {
        "name": "remove_supplier_companies_from_event_by_internal_id",
        "description": "Remove suppliers from an event, supporting only RFP-type events.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "The unique ID of the event for removing suppliers."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary containing supplier information, including a list of `supplier_ids` to remove and the `type` field, which must be \"supplier_companies\".",
                    "properties": {
                        "supplier_ids": {
                            "type": "array",
                            "description": "A list of supplier IDs to remove from the event."
                        },
                        "type": {
                            "type": "string",
                            "description": "The object type, which must always be \"supplier_companies\"."
                        }
                    },
                    "required": [
                        "supplier_ids",
                        "type"
                    ]
                }
            },
            "required": [
                "data",
                "event_id"
            ]
        }
    },
    {
        "name": "remove_supplier_companies_from_project",
        "description": "Removes one or more supplier companies from a project.",
        "parameters": {
            "type": "object",
            "properties": {
                "project_id": {
                    "type": "integer",
                    "description": "The unique identifier of the project."
                },
                "supplier_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of supplier company IDs to remove from the project."
                }
            },
            "required": [
                "project_id",
                "supplier_ids"
            ]
        }
    },
    {
        "name": "remove_supplier_companies_from_project_by_external_id",
        "description": "Removes one or more supplier companies from a project using external identifiers.",
        "parameters": {
            "type": "object",
            "properties": {
                "project_external_id": {
                    "type": "string",
                    "description": "The project's external identifier."
                },
                "supplier_external_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of supplier company external IDs to remove from the project; for optimal performance, limit to 10 or fewer per request."
                }
            },
            "required": [
                "project_external_id",
                "supplier_external_ids"
            ]
        }
    },
    {
        "name": "remove_supplier_contacts_from_event_by_external_ids",
        "description": "Remove supplier contacts from an RFP event using the event's unique external identifier and specified supplier contact external identifiers.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_external_id": {
                    "type": "string",
                    "description": "The unique external identifier of the event from which supplier contacts are removed."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary specifying supplier contact information, including `supplier_contact_external_ids` (a list of external IDs to remove) and the required `type` field, which must be 'supplier_contacts'.",
                    "properties": {
                        "supplier_contact_external_ids": {
                            "type": "array",
                            "description": "A list of supplier contact external IDs to be removed from the event."
                        },
                        "type": {
                            "type": "string",
                            "description": "The object type, which must always be `supplier_contacts`."
                        }
                    },
                    "required": [
                        "supplier_contact_external_ids",
                        "type"
                    ]
                }
            },
            "required": [
                "data",
                "event_external_id"
            ]
        }
    },
    {
        "name": "remove_supplier_contacts_from_event_by_internal_id",
        "description": "Remove suppliers from an event using supplier contacts, supporting only RFP event types.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "The unique identifier of the event from which supplier contacts are removed."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary containing supplier contact information, including `supplier_contact_ids` (a list of IDs to remove) and `type` (which must be \"supplier_contacts\").",
                    "properties": {
                        "supplier_contact_ids": {
                            "type": "array",
                            "description": "A list of supplier contact IDs to remove from the event."
                        },
                        "type": {
                            "type": "string",
                            "description": "Specifies the object type, which must be `supplier_contacts`."
                        }
                    },
                    "required": [
                        "supplier_contact_ids",
                        "type"
                    ]
                }
            },
            "required": [
                "data",
                "event_id"
            ]
        }
    },
    {
        "name": "remove_supplier_contacts_from_project_by_external_ids",
        "description": "Remove supplier contacts from a project using their external IDs.",
        "parameters": {
            "type": "object",
            "properties": {
                "project_external_id": {
                    "type": "string",
                    "description": "External ID of the project from which to remove suppliers."
                },
                "supplier_contact_external_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of external IDs for the supplier contacts to remove from the project."
                }
            },
            "required": [
                "project_external_id",
                "supplier_contact_external_ids"
            ]
        }
    },
    {
        "name": "remove_supplier_contacts_from_project_by_internal_id",
        "description": "Removes one or more supplier contacts from a project.",
        "parameters": {
            "type": "object",
            "properties": {
                "project_id": {
                    "type": "integer",
                    "description": "The unique identifier of the project."
                },
                "supplier_contact_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of supplier contact IDs to remove."
                }
            },
            "required": [
                "project_id",
                "supplier_contact_ids"
            ]
        }
    },
    {
        "name": "replace_scim_user_by_id",
        "description": "Replace specified updatable attributes of a User resource per RFC 7644 Section 3.5.1, restricting self-deactivation and email domain changes not compliant with SSO rules.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique SCIM identifier of the user to update."
                },
                "body": {
                    "type": "object",
                    "properties": {
                        "externalId": {
                            "type": "string",
                            "description": "An optional, client-defined external identifier."
                        },
                        "userName": {
                            "type": "string",
                            "description": "Required. The user's email address; must match the configured SSO domain for updates."
                        },
                        "name": {
                            "type": "object",
                            "properties": {
                                "givenName": {
                                    "type": "string",
                                    "description": "User's required first name."
                                },
                                "familyName": {
                                    "type": "string",
                                    "description": "The user's required last name."
                                }
                            },
                            "description": "",
                            "required": [
                                "familyName",
                                "givenName"
                            ]
                        },
                        "active": {
                            "type": "boolean",
                            "description": "Indicates whether the user account is active (optional)."
                        }
                    },
                    "description": "A dictionary containing user attributes to update, including `externalId`, `userName`, `name`, and `active`.",
                    "required": [
                        "active",
                        "externalId",
                        "name",
                        "userName"
                    ]
                }
            },
            "required": [
                "body",
                "id"
            ]
        }
    },
    {
        "name": "update_attachment_by_external_id",
        "description": "Update an existing attachment by its external ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The external ID of the attachment to update."
                },
                "data": {
                    "type": "object",
                    "properties": {},
                    "description": "A dictionary where keys are field names and values are their new values; the 'external_id' key is ignored if present."
                }
            },
            "required": [
                "data",
                "external_id"
            ]
        }
    },
    {
        "name": "update_attachment_by_id",
        "description": "Update an existing attachment by its internal ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal ID of the attachment to update."
                },
                "data": {
                    "type": "object",
                    "properties": {},
                    "description": "A dictionary mapping fields to update to their new values."
                }
            },
            "required": [
                "data",
                "id"
            ]
        }
    },
    {
        "name": "update_contact_type_by_external_id",
        "description": "Updates an existing contact type's details by its external ID, supporting partial updates.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "Unique external ID of the contact type to update."
                },
                "body": {
                    "type": "object",
                    "description": "A dictionary containing updated contact type properties, which must include `type` (as 'contact_types'), `id` (int), `external_id` (string, max 255 characters), and `name` (string, max 255 characters).",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Specifies the object type; must always be `contact_types`."
                        },
                        "id": {
                            "type": "integer",
                            "description": "The contact type identifier (integer)."
                        },
                        "external_id": {
                            "type": "string",
                            "description": "The contact type's external identifier, with a maximum length of 255 characters."
                        },
                        "name": {
                            "type": "string",
                            "description": "Contact type name, maximum 255 characters."
                        }
                    },
                    "required": [
                        "external_id",
                        "id",
                        "name",
                        "type"
                    ]
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "update_contact_type_by_id",
        "description": "Updates the details of an existing contact type.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique internal identifier of the contact type to update."
                },
                "body": {
                    "type": "object",
                    "description": "A dictionary containing updated contact type properties, which must include `type` (str, \"contact_types\"), `id` (int), `external_id` (str, max 255 characters), and `name` (str, max 255 characters).",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "The object type, which must always be `contact_types`."
                        },
                        "id": {
                            "type": "integer",
                            "description": "A contact type identifier that must match the ID in the URL path."
                        },
                        "external_id": {
                            "type": "string",
                            "description": "The external identifier for the contact type (maximum 255 characters)."
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the contact type (maximum 255 characters)."
                        }
                    },
                    "required": [
                        "external_id",
                        "id",
                        "name",
                        "type"
                    ]
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "update_contract_by_external_id",
        "description": "Update an existing contract by its external ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The external identifier of the contract to update."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of relationships to include in the response, with supported values: `contract_type`, `spend_category`, `supplier_company`, `docusign_envelopes`, `adobe_sign_agreements`."
                },
                "body": {
                    "type": "object",
                    "description": "A dictionary containing contract fields to update; it must include `type` (str) and `id` (int), and can optionally include other contract attributes or relationships.",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Contract object type string."
                        },
                        "id": {
                            "type": "integer",
                            "description": "The contract's integer identifier."
                        },
                        "supplier_id": {
                            "type": "string",
                            "description": "An identifier for the supplier."
                        },
                        "start_date": {
                            "type": "string",
                            "description": "The contract's start date (string)."
                        },
                        "end_date": {
                            "type": "string",
                            "description": "The contract end date."
                        },
                        "external_id": {
                            "type": "string",
                            "description": "The external identifier for the contract; must match the `external_id` provided in the request path."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary of contract-specific attributes.",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "A string representing the contract title, limited to 255 characters."
                                },
                                "description": {
                                    "type": "string",
                                    "description": "The contract's description."
                                },
                                "state": {
                                    "type": "string",
                                    "description": "Current contract state: `draft`, `requested`, `in_progress`, `out_for_approval`, `approved`, `active`, `expired`, or `terminated`."
                                },
                                "state_label": {
                                    "type": "string",
                                    "description": "A customer-specific label for the contract state."
                                },
                                "number": {
                                    "type": "integer",
                                    "description": "The contract number, generated sequentially."
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "A unique contract identifier provided by the customer."
                                },
                                "actual_start_date": {
                                    "type": "string",
                                    "description": "The contract's start date (string)."
                                },
                                "actual_end_date": {
                                    "type": "string",
                                    "description": "A string representing the contract's end date."
                                },
                                "actual_spend_amount": {
                                    "type": "number",
                                    "description": "The actual spend amount for the contract (float)."
                                },
                                "auto_renewal": {
                                    "type": "string",
                                    "description": "Specifies the auto-renewal mode, which can be \"yes\", \"no\", or \"evergreen\"."
                                },
                                "marked_as_needs_attention_at": {
                                    "type": "string",
                                    "description": "Date and time when contract was flagged as needs attention."
                                },
                                "needs_attention": {
                                    "type": "boolean",
                                    "description": "A boolean indicating if the contract needs attention."
                                },
                                "needs_attention_note": {
                                    "type": "string",
                                    "description": "Notes on why contract needs attention."
                                },
                                "needs_attention_reason": {
                                    "type": "string",
                                    "description": "The reason a contract is flagged for attention."
                                },
                                "renew_number_of_times": {
                                    "type": "integer",
                                    "description": "Number of times the contract should be renewed."
                                },
                                "renewal_term_unit": {
                                    "type": "string",
                                    "description": "Term unit for renewals, supporting 'days', 'weeks', 'months', or 'years'."
                                },
                                "renewal_term_value": {
                                    "type": "integer",
                                    "description": "The number of term units between renewals."
                                },
                                "renewal_termination_notice_date": {
                                    "type": "string",
                                    "description": "The date for a renewal termination notice."
                                },
                                "renewal_termination_notice_unit": {
                                    "type": "string",
                                    "description": "The term unit for the termination notice, such as 'days', 'weeks', 'months', or 'years'."
                                },
                                "renewal_termination_notice_value": {
                                    "type": "integer",
                                    "description": "The number of term units before the contract's end date to provide a termination notice."
                                },
                                "renewal_termination_reminder_date": {
                                    "type": "string",
                                    "description": "Date for termination reminder."
                                },
                                "renewal_termination_reminder_unit": {
                                    "type": "string",
                                    "description": "A string representing the term unit for the termination reminder."
                                },
                                "renewal_termination_reminder_value": {
                                    "type": "integer",
                                    "description": "Number of term units before the termination notice for a reminder."
                                },
                                "terminated_note": {
                                    "type": "string",
                                    "description": "Notes about the contract's termination."
                                },
                                "terminated_reason": {
                                    "type": "string",
                                    "description": "The reason for contract termination."
                                },
                                "updated_at": {
                                    "type": "string",
                                    "description": "The last modification date (string)."
                                },
                                "custom_fields": {
                                    "type": "array",
                                    "description": "A list of custom field values."
                                },
                                "approved_at": {
                                    "type": "string",
                                    "description": "Date and time of contract approval."
                                },
                                "approval_rounds": {
                                    "type": "integer",
                                    "description": "Number of times the contract has been sent for approval."
                                },
                                "first_sent_for_approval_at": {
                                    "type": "string",
                                    "description": "Date of the first approval request."
                                },
                                "sent_for_approval_at": {
                                    "type": "string",
                                    "description": "The date of the last approval request."
                                },
                                "public": {
                                    "type": "boolean",
                                    "description": "Indicates the public visibility of the contract."
                                }
                            },
                            "required": [
                                "actual_end_date",
                                "actual_spend_amount",
                                "actual_start_date",
                                "approval_rounds",
                                "approved_at",
                                "auto_renewal",
                                "custom_fields",
                                "description",
                                "external_id",
                                "first_sent_for_approval_at",
                                "marked_as_needs_attention_at",
                                "needs_attention",
                                "needs_attention_note",
                                "needs_attention_reason",
                                "number",
                                "public",
                                "renew_number_of_times",
                                "renewal_term_unit",
                                "renewal_term_value",
                                "renewal_termination_notice_date",
                                "renewal_termination_notice_unit",
                                "renewal_termination_notice_value",
                                "renewal_termination_reminder_date",
                                "renewal_termination_reminder_unit",
                                "renewal_termination_reminder_value",
                                "sent_for_approval_at",
                                "state",
                                "state_label",
                                "terminated_note",
                                "terminated_reason",
                                "title",
                                "updated_at"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "description": "A dictionary of contract relationships, including attachments, supplier company, creator, owner, Docusign envelopes, Adobe Sign agreements, contract type, and spend category.",
                            "properties": {
                                "attachments": {
                                    "type": "array",
                                    "description": "A list of contract attachments."
                                },
                                "supplier_company": {
                                    "type": "object",
                                    "description": "A dictionary representing the associated supplier company."
                                },
                                "creator": {
                                    "type": "object",
                                    "description": "Contract creator."
                                },
                                "owner": {
                                    "type": "object",
                                    "description": "A dictionary representing the contract owner."
                                },
                                "docusign_envelopes": {
                                    "type": "array",
                                    "description": "A list of associated Docusign envelopes."
                                },
                                "adobe_sign_agreements": {
                                    "type": "array",
                                    "description": "A list of Adobe Sign agreements."
                                },
                                "contract_type": {
                                    "type": "object",
                                    "description": "A dictionary representing the contract type."
                                },
                                "spend_category": {
                                    "type": "object",
                                    "description": "The associated spend category."
                                }
                            },
                            "required": [
                                "adobe_sign_agreements",
                                "attachments",
                                "contract_type",
                                "creator",
                                "docusign_envelopes",
                                "owner",
                                "spend_category",
                                "supplier_company"
                            ]
                        }
                    },
                    "required": [
                        "attributes",
                        "end_date",
                        "external_id",
                        "id",
                        "relationships",
                        "start_date",
                        "supplier_id",
                        "type"
                    ]
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "update_contract_by_id",
        "description": "Update an existing contract by its internal ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal identifier of the contract to update."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of relationships to include in the response, supporting values `contract_type`, `spend_category`, `supplier_company`, `docusign_envelopes`, and `adobe_sign_agreements`."
                },
                "body": {
                    "type": "object",
                    "description": "A dictionary of fields to update for the contract, requiring `type` (str) and `id` (int) keys.",
                    "properties": {
                        "type": {
                            "type": "object",
                            "description": "The required string representing the object's type."
                        },
                        "id": {
                            "type": "object",
                            "description": "An integer contract identifier."
                        },
                        "supplier_id": {
                            "type": "string",
                            "description": "A string representing the supplier identifier."
                        },
                        "start_date": {
                            "type": "string",
                            "description": "The contract's start date."
                        },
                        "end_date": {
                            "type": "string",
                            "description": "Contract end date string."
                        },
                        "external_id": {
                            "type": "string",
                            "description": "The external contract identifier."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary containing contract attributes.",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "The contract title, with a maximum length of 255 characters."
                                },
                                "description": {
                                    "type": "string",
                                    "description": "The contract description string."
                                },
                                "state": {
                                    "type": "string",
                                    "description": "The current contract state, one of \"draft\", \"requested\", \"in_progress\", \"out_for_approval\", \"approved\", \"active\", \"expired\", or \"terminated\"."
                                },
                                "state_label": {
                                    "type": "string",
                                    "description": "A customer-specific label for the contract state."
                                },
                                "number": {
                                    "type": "integer",
                                    "description": "The contract number, generated sequentially."
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "A unique, customer-provided contract identifier."
                                },
                                "actual_start_date": {
                                    "type": "string",
                                    "description": "The contract's actual start date as a string."
                                },
                                "actual_end_date": {
                                    "type": "string",
                                    "description": "The contract end date (string)."
                                },
                                "actual_spend_amount": {
                                    "type": "number",
                                    "description": "Actual spend amount (float)."
                                },
                                "auto_renewal": {
                                    "type": "string",
                                    "description": "The contract's auto-renewal mode, one of \"yes\", \"no\", or \"evergreen\"."
                                },
                                "marked_as_needs_attention_at": {
                                    "type": "string",
                                    "description": "Date and time when the contract was flagged as needs attention."
                                },
                                "needs_attention": {
                                    "type": "boolean",
                                    "description": "Indicates if the contract requires attention."
                                },
                                "needs_attention_note": {
                                    "type": "string",
                                    "description": "Notes explaining why the contract needs attention."
                                },
                                "needs_attention_reason": {
                                    "type": "string",
                                    "description": "The reason a contract needs attention."
                                },
                                "renew_number_of_times": {
                                    "type": "integer",
                                    "description": "The number of times the contract should be renewed."
                                },
                                "renewal_term_unit": {
                                    "type": "string",
                                    "description": "The term unit for renewals, must be one of 'days', 'weeks', 'months', or 'years'."
                                },
                                "renewal_term_value": {
                                    "type": "integer",
                                    "description": "The number of term units between renewals."
                                },
                                "renewal_termination_notice_date": {
                                    "type": "string",
                                    "description": "Specifies the date for the termination notice."
                                },
                                "renewal_termination_notice_unit": {
                                    "type": "string",
                                    "description": "The term unit for the termination notice."
                                },
                                "renewal_termination_notice_value": {
                                    "type": "integer",
                                    "description": "The number of term units before the end date for notice."
                                },
                                "renewal_termination_reminder_date": {
                                    "type": "string",
                                    "description": "The date (string) for the termination reminder."
                                },
                                "renewal_termination_reminder_unit": {
                                    "type": "string",
                                    "description": "The unit of time for the termination reminder, such as `days`, `weeks`, `months`, or `years`."
                                },
                                "renewal_termination_reminder_value": {
                                    "type": "integer",
                                    "description": "Number of term units prior to the termination notice for sending a reminder."
                                },
                                "terminated_note": {
                                    "type": "string",
                                    "description": "Notes on the contract's termination."
                                },
                                "terminated_reason": {
                                    "type": "string",
                                    "description": "A string specifying the reason for contract termination."
                                },
                                "updated_at": {
                                    "type": "string",
                                    "description": "The last modification date, as a string."
                                },
                                "custom_fields": {
                                    "type": "array",
                                    "description": "A list of custom field values."
                                },
                                "approved_at": {
                                    "type": "string",
                                    "description": "Date and time of contract approval."
                                },
                                "approval_rounds": {
                                    "type": "integer",
                                    "description": "The number of times the contract has been sent for approval."
                                },
                                "first_sent_for_approval_at": {
                                    "type": "string",
                                    "description": "The date of the first approval request."
                                },
                                "sent_for_approval_at": {
                                    "type": "string",
                                    "description": "Date and time of the last approval request."
                                },
                                "public": {
                                    "type": "boolean",
                                    "description": "A boolean indicating the contract's public visibility."
                                }
                            },
                            "required": [
                                "actual_end_date",
                                "actual_spend_amount",
                                "actual_start_date",
                                "approval_rounds",
                                "approved_at",
                                "auto_renewal",
                                "custom_fields",
                                "description",
                                "external_id",
                                "first_sent_for_approval_at",
                                "marked_as_needs_attention_at",
                                "needs_attention",
                                "needs_attention_note",
                                "needs_attention_reason",
                                "number",
                                "public",
                                "renew_number_of_times",
                                "renewal_term_unit",
                                "renewal_term_value",
                                "renewal_termination_notice_date",
                                "renewal_termination_notice_unit",
                                "renewal_termination_notice_value",
                                "renewal_termination_reminder_date",
                                "renewal_termination_reminder_unit",
                                "renewal_termination_reminder_value",
                                "sent_for_approval_at",
                                "state",
                                "state_label",
                                "terminated_note",
                                "terminated_reason",
                                "title",
                                "updated_at"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "description": "A dictionary of contract relationships.",
                            "properties": {
                                "attachments": {
                                    "type": "array",
                                    "description": "A list of attachments associated with the contract."
                                },
                                "supplier_company": {
                                    "type": "object",
                                    "description": "A dictionary for the associated supplier company."
                                },
                                "creator": {
                                    "type": "object",
                                    "description": "Represents the contract creator."
                                },
                                "owner": {
                                    "type": "object",
                                    "description": "A dictionary representing the contract owner."
                                },
                                "docusign_envelopes": {
                                    "type": "array",
                                    "description": "A list of associated DocuSign envelopes."
                                },
                                "adobe_sign_agreements": {
                                    "type": "array",
                                    "description": "A list of Adobe Sign agreements."
                                },
                                "contract_type": {
                                    "type": "object",
                                    "description": "A dictionary representing the contract type."
                                },
                                "spend_category": {
                                    "type": "object",
                                    "description": "The dictionary representing the contract's spend category."
                                }
                            },
                            "required": [
                                "adobe_sign_agreements",
                                "attachments",
                                "contract_type",
                                "creator",
                                "docusign_envelopes",
                                "owner",
                                "spend_category",
                                "supplier_company"
                            ]
                        }
                    },
                    "required": [
                        "attributes",
                        "end_date",
                        "external_id",
                        "id",
                        "relationships",
                        "start_date",
                        "supplier_id",
                        "type"
                    ]
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "update_contract_type_by_external_id",
        "description": "Update an existing contract type by its external ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "External identifier of the contract type to update."
                },
                "body": {
                    "type": "object",
                    "description": "A dictionary of fields to update, which must include `external_id` (matching the URL parameter) and `type` (always `contract_types`), and may also include `name`.",
                    "properties": {
                        "external_id": {
                            "type": "string",
                            "description": "An external contract type identifier that must match the `external_id` parameter in the URL."
                        },
                        "type": {
                            "type": "string",
                            "description": "The object type, which must always be `\"contract_types\"`."
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the contract type."
                        }
                    },
                    "required": [
                        "external_id",
                        "external_id",
                        "name",
                        "type"
                    ]
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "update_contract_type_by_id",
        "description": "Update an existing contract type by its internal ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal identifier of the contract type to update."
                },
                "body": {
                    "type": "object",
                    "description": "A dictionary of fields to update, which must contain `id` (matching the URL parameter) and `type` set to 'contract_types', and may optionally include `name` or `external_id`.",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "description": "Matches the `id` parameter in the URL."
                        },
                        "type": {
                            "type": "string",
                            "description": "The object type, which must always be `contract_types`."
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the contract type."
                        },
                        "external_id": {
                            "type": "string",
                            "description": "An external contract type identifier string."
                        }
                    },
                    "required": [
                        "external_id",
                        "id",
                        "name",
                        "type"
                    ]
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "update_event_by_id",
        "description": "Update an event using its ID and provided data, returning the updated event object.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique identifier of the event to update."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary containing fields to update, including a mandatory `id` field that must match the event ID in the URL.",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "description": "An integer event identifier."
                        },
                        "type": {
                            "type": "string",
                            "description": "The event type, as an enum with values: 'RFP', 'AUCTION', 'AUCTION_WITH_LOTS', 'AUCTION_LOT', 'PERFORMANCE_REVIEW_EVENT', 'PERFORMANCE_REVIEW_SCORE_CARD_ONLY_EVENT', 'SUPPLIER_REVIEW_EVENT', 'SUPPLIER_REVIEW_MASTER_EVENT'."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary of event attributes, including title, type, spend amount, operational settings, external identifier, and custom fields.",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "The event's title."
                                },
                                "event_type": {
                                    "type": "string",
                                    "description": "An enum defining the event type: RFP, AUCTION, AUCTION_WITH_LOTS, AUCTION_LOT, PERFORMANCE_REVIEW_EVENT, PERFORMANCE_REVIEW_SCORE_CARD_ONLY_EVENT, SUPPLIER_REVIEW_EVENT, or SUPPLIER_REVIEW_MASTER_EVENT."
                                },
                                "spend_amount": {
                                    "type": "number",
                                    "description": "The actual spend amount, used to calculate savings and update reporting."
                                },
                                "late_bids": {
                                    "type": "boolean",
                                    "description": "Controls whether late bid submissions are allowed."
                                },
                                "revise_bids": {
                                    "type": "boolean",
                                    "description": "Allows suppliers to re-submit bids."
                                },
                                "instant_notifications": {
                                    "type": "boolean",
                                    "description": "Controls whether notification emails are sent immediately (true) or as a digest every 3 hours (false)."
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "Event ID from your internal database."
                                },
                                "restricted": {
                                    "type": "boolean",
                                    "description": "Indicates if the event is invitation-only, even when publicly posted."
                                },
                                "custom_fields": {
                                    "type": "array",
                                    "description": "Custom field values; file-type custom fields are exposed as `null` in the public API and are only accessible via the user interface."
                                }
                            },
                            "required": [
                                "custom_fields",
                                "event_type",
                                "external_id",
                                "instant_notifications",
                                "late_bids",
                                "restricted",
                                "revise_bids",
                                "spend_amount",
                                "title"
                            ]
                        }
                    },
                    "required": [
                        "attributes",
                        "id",
                        "id",
                        "type"
                    ]
                }
            },
            "required": [
                "data",
                "id"
            ]
        }
    },
    {
        "name": "update_event_worksheet_line_item_by_id",
        "description": "Update an existing line item, ensuring the request body's `id` attribute matches the provided line item identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "A unique identifier for the event that contains the line item."
                },
                "worksheet_id": {
                    "type": "integer",
                    "description": "Unique identifier of the worksheet to which the line item belongs."
                },
                "id": {
                    "type": "integer",
                    "description": "The unique identifier of the line item to update."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary containing updated line item properties, which must include its `id`, `type` (always 'line_items'), `attributes` (with column `data_identifier`-`value` pairs), and `relationships` (for the associated `worksheet`).",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "The object type, which must be \"line_items\"."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary of line item attributes, containing a `data` hashmap that maps worksheet column identifiers to their respective cell values.",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "description": "A hashmap where keys are worksheet column data identifier strings, and values are objects containing a `data_identifier` string and the associated cell `value`.",
                                    "properties": {
                                        "data_identifier": {
                                            "type": "string",
                                            "description": "A string that identifies a worksheet column."
                                        },
                                        "value": {
                                            "type": "object",
                                            "description": "The value of a cell within a worksheet line item."
                                        }
                                    },
                                    "required": [
                                        "data_identifier",
                                        "value"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "description": "A dictionary containing line item relationships, including the associated worksheet.",
                            "properties": {
                                "worksheet": {
                                    "type": "object",
                                    "description": "A dictionary containing the associated worksheet's type (which must be `'worksheets'`) and its identifier.",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "The object type, always 'worksheets'."
                                        },
                                        "id": {
                                            "type": "integer",
                                            "description": "A string that identifies the worksheet."
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "type"
                                    ]
                                }
                            },
                            "required": [
                                "worksheet"
                            ]
                        }
                    },
                    "required": [
                        "attributes",
                        "relationships",
                        "type"
                    ]
                }
            },
            "required": [
                "data",
                "event_id",
                "id",
                "worksheet_id"
            ]
        }
    },
    {
        "name": "update_field_by_external_id",
        "description": "Updates an existing field's details by its external ID, requiring the body to include a matching external ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The external ID of the field to update."
                },
                "body": {
                    "type": "object",
                    "description": "A dictionary containing updated field properties, including `external_id` (must match the URL parameter), `name`, `type`, `required`, `description`, and `configurations`; defaults to `None`.",
                    "properties": {
                        "external_id": {
                            "type": "string",
                            "description": "Must match the `external_id` specified as a URL path parameter."
                        },
                        "name": {
                            "type": "string",
                            "description": "The updated field name."
                        },
                        "type": {
                            "type": "string",
                            "description": "Updated data type of the field."
                        },
                        "required": {
                            "type": "boolean",
                            "description": "A boolean indicating the field's updated required status."
                        },
                        "description": {
                            "type": "string",
                            "description": "The updated description for the field."
                        },
                        "configurations": {
                            "type": "object",
                            "description": "A dictionary of updated field-specific settings."
                        }
                    },
                    "required": [
                        "configurations",
                        "description",
                        "external_id",
                        "name",
                        "required",
                        "type"
                    ]
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "update_field_details_by_id",
        "description": "Updates an existing field's details by its internal identifier, requiring the `options` parameter to include a matching `id`.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal identifier of the field to update."
                },
                "options": {
                    "type": "object",
                    "description": "A dictionary containing field properties to update, which must include an 'id' field matching the path parameter and may include other updatable properties.",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "The field's type."
                        },
                        "group": {
                            "type": "string",
                            "description": "A field group identifier string."
                        },
                        "name": {
                            "type": "string",
                            "description": "The field's name, with a maximum length of 255 characters."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary of field properties, including its name, target object type, internal type description, and whether it is required.",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The field's name, limited to 255 characters."
                                },
                                "target_object": {
                                    "type": "string",
                                    "description": "Field object type, one of `PROJECT`, `RFP`, or `SUPPLIER_COMPANY`."
                                },
                                "type_description": {
                                    "type": "string",
                                    "description": "The field's internal name and meaning, chosen from: Checkbox, File, Short Text, Paragraph, Date, Integer, Currency, Decimal, Single Select, Multiple Select, URL, Lookup, or Related."
                                },
                                "required": {
                                    "type": "boolean",
                                    "description": "Indicates if the field is required."
                                }
                            },
                            "required": [
                                "name",
                                "required",
                                "target_object",
                                "type_description"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "description": "A dictionary containing the field's group reference, which must be null if `target_object` is 'RFP' and required otherwise.",
                            "properties": {
                                "group": {
                                    "type": "object",
                                    "description": "Reference to the field group where the field belongs; it must be null if `target_object` is `RFP` and is required otherwise."
                                }
                            },
                            "required": [
                                "group"
                            ]
                        }
                    },
                    "required": [
                        "attributes",
                        "group",
                        "name",
                        "relationships",
                        "type"
                    ]
                }
            },
            "required": [
                "id",
                "options"
            ]
        }
    },
    {
        "name": "update_field_group_by_id",
        "description": "Updates the details of an existing field group.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the field group to update."
                },
                "options": {
                    "type": "object",
                    "description": "A dictionary containing the updated properties for the field group.",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "The object type, always set to \"field_groups\"."
                        },
                        "id": {
                            "type": "integer",
                            "description": "The field group identifier string, identical to the function's `id` parameter."
                        },
                        "fields": {
                            "type": "object",
                            "description": "List of fields belonging to this group."
                        },
                        "name": {
                            "type": "string",
                            "description": "The field group name, limited to 255 characters."
                        },
                        "description": {
                            "type": "string",
                            "description": "Field group description, limited to 255 characters."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary of field group attributes, containing the `target_object` type (one of 'PROJECT', 'SUPPLIER_COMPANY', or 'RFP') and the field group `name` (max 255 characters).",
                            "properties": {
                                "target_object": {
                                    "type": "string",
                                    "description": "A string representing the field group object type, one of `PROJECT`, `SUPPLIER_COMPANY`, or `RFP`."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "The field group name, limited to 255 characters."
                                }
                            },
                            "required": [
                                "name",
                                "target_object"
                            ]
                        }
                    },
                    "required": [
                        "attributes",
                        "description",
                        "fields",
                        "id",
                        "name",
                        "type"
                    ]
                }
            },
            "required": [
                "id",
                "options"
            ]
        }
    },
    {
        "name": "update_field_options_by_id",
        "description": "Update the options list for a field option identified by its ID with a new list of options.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique identifier of the field option to update."
                },
                "new_options": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {}
                    },
                    "description": "A list of dictionaries containing new options to set for the field option."
                }
            },
            "required": [
                "id",
                "new_options"
            ]
        }
    },
    {
        "name": "update_payment_currency_by_external_id",
        "description": "Update the details of an existing payment currency using its external identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The external identifier of the currency to update."
                },
                "alpha": {
                    "type": "string",
                    "description": "New three-letter currency code (e.g., USD, EUR)."
                },
                "numeric": {
                    "type": "string",
                    "description": "The new three-digit numeric currency code."
                }
            },
            "required": [
                "alpha",
                "external_id",
                "numeric"
            ]
        }
    },
    {
        "name": "update_payment_currency_by_id",
        "description": "Updates the details of an existing payment currency using its internal identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Internal identifier of the currency to update."
                },
                "alpha": {
                    "type": "string",
                    "description": "New three-letter currency code (e.g., USD, EUR)."
                },
                "numeric": {
                    "type": "string",
                    "description": "The new three-digit numeric currency code."
                },
                "external_id": {
                    "type": "string",
                    "description": "The new external identifier for the currency, with a maximum of 255 characters."
                }
            },
            "required": [
                "alpha",
                "id",
                "numeric"
            ]
        }
    },
    {
        "name": "update_payment_term_by_external_id",
        "description": "Updates a payment term by its external identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "External identifier of the payment term to update."
                },
                "name": {
                    "type": "string",
                    "description": "The new name for the payment term, such as \"Net 30\" or \"Net 60\"."
                }
            },
            "required": [
                "external_id",
                "name"
            ]
        }
    },
    {
        "name": "update_payment_term_by_id",
        "description": "Updates the details of an existing payment term using its internal identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Internal identifier for the payment term to update."
                },
                "name": {
                    "type": "string",
                    "description": "The name for the payment term, up to 255 characters."
                },
                "external_id": {
                    "type": "string",
                    "description": "External identifier for the payment term."
                }
            },
            "required": [
                "id",
                "name"
            ]
        }
    },
    {
        "name": "update_payment_type_by_external_id",
        "description": "Update an existing payment type's details by its external identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "External identifier of the payment type to update."
                },
                "name": {
                    "type": "string",
                    "description": "The new name for the payment type."
                },
                "payment_method": {
                    "type": "string",
                    "description": "The new payment method, one of: \"Direct Deposit\", \"Check\", \"EFT\", \"Cash\", \"Credit Card\", \"Wire\", \"Manual\", \"Direct Debit\", \"PayPal\", or \"EFT with Reference\"."
                }
            },
            "required": [
                "external_id",
                "name"
            ]
        }
    },
    {
        "name": "update_payment_type_by_id",
        "description": "Updates the details of an existing payment type using its internal identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal identifier of the payment type to update."
                },
                "name": {
                    "type": "string",
                    "description": "The new name for the payment type."
                },
                "payment_method": {
                    "type": "string",
                    "description": "The new payment method, which must be one of: \"Direct Deposit\", \"Check\", \"EFT\", \"Cash\", \"Credit Card\", \"Wire\", \"Manual\", \"Direct Debit\", \"PayPal\", or \"EFT with Reference\"."
                },
                "external_id": {
                    "type": "string",
                    "description": "The new external identifier for the payment type (maximum 255 characters)."
                }
            },
            "required": [
                "id",
                "name"
            ]
        }
    },
    {
        "name": "update_project_by_external_id",
        "description": "Update an existing project using its external identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "Unique external identifier of the project to update."
                },
                "project_data": {
                    "type": "object",
                    "description": "A dictionary of updated project details that must include an `external_id` field matching the provided ID.",
                    "properties": {
                        "type_id": {
                            "type": "string",
                            "description": "The ID of the project's type."
                        },
                        "id": {
                            "type": "string",
                            "description": "A unique identifier for the project."
                        },
                        "external_id": {
                            "type": "string",
                            "description": "The project's external identifier, which must be the same as the ID used to identify the project in the request."
                        },
                        "supplier_companies": {
                            "type": "object",
                            "description": "An array of objects representing supplier companies."
                        },
                        "supplier_contacts": {
                            "type": "object",
                            "description": "An array of supplier contact objects."
                        },
                        "status": {
                            "type": "string",
                            "description": "The updated status of the project."
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the project."
                                },
                                "description": {
                                    "type": "string",
                                    "description": "The updated description for the project."
                                },
                                "state": {
                                    "type": "string",
                                    "description": "The state of the project. Must be one of: `draft`, `requested`, `planned`, `active`, `completed`, `canceled`, or `on_hold`."
                                },
                                "target_start_date": {
                                    "type": "object",
                                    "description": "The target start date for the project."
                                },
                                "target_end_date": {
                                    "type": "object",
                                    "description": "The target end date for the project."
                                },
                                "actual_spend_amount": {
                                    "type": "number",
                                    "description": "The actual spend amount for the project."
                                },
                                "approved_spend_amount": {
                                    "type": "number",
                                    "description": "The approved spend amount for the project."
                                },
                                "estimated_savings_amount": {
                                    "type": "number",
                                    "description": "The estimated savings amount for the project."
                                },
                                "estimated_spend_amount": {
                                    "type": "number",
                                    "description": "The estimated spend amount for the project."
                                },
                                "canceled_note": {
                                    "type": "string",
                                    "description": "A note detailing the reason for the project's cancellation."
                                },
                                "canceled_reason": {
                                    "type": "string",
                                    "description": "The reason for canceling the project."
                                },
                                "on_hold_note": {
                                    "type": "string",
                                    "description": "A note explaining why the project is on hold."
                                },
                                "on_hold_reason": {
                                    "type": "string",
                                    "description": "The reason the project is on hold."
                                },
                                "needs_attention": {
                                    "type": "boolean",
                                    "description": "Indicates whether the project needs attention."
                                },
                                "marked_as_needs_attention_at": {
                                    "type": "object",
                                    "description": "The timestamp for when the project was marked as needing attention."
                                },
                                "needs_attention_note": {
                                    "type": "string",
                                    "description": "A note explaining why the project needs attention."
                                },
                                "needs_attention_reason": {
                                    "type": "string",
                                    "description": "The reason why the project needs attention."
                                }
                            },
                            "description": "An object of project attributes.",
                            "required": [
                                "actual_spend_amount",
                                "approved_spend_amount",
                                "description",
                                "estimated_savings_amount",
                                "estimated_spend_amount",
                                "name",
                                "needs_attention",
                                "state",
                                "target_end_date",
                                "target_start_date"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "properties": {
                                "attachments": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    },
                                    "description": "An array of attachment objects."
                                },
                                "creator": {
                                    "type": "object",
                                    "description": "The stakeholder object representing the project creator."
                                },
                                "requester": {
                                    "type": "object",
                                    "description": "The stakeholder object for the project requester."
                                },
                                "owner": {
                                    "type": "object",
                                    "description": "The object representing the project owner."
                                },
                                "project_type": {
                                    "type": "object",
                                    "description": "An object specifying the project's type."
                                }
                            },
                            "description": "An object containing the project's relationships.",
                            "required": [
                                "attachments",
                                "creator",
                                "owner",
                                "project_type",
                                "requester"
                            ]
                        }
                    },
                    "required": [
                        "attributes",
                        "external_id",
                        "id",
                        "relationships",
                        "status",
                        "supplier_companies",
                        "supplier_contacts",
                        "type_id"
                    ]
                }
            },
            "required": [
                "external_id",
                "project_data"
            ]
        }
    },
    {
        "name": "update_project_details_by_id",
        "description": "Updates the details of an existing project using its unique internal identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "An integer, the unique internal identifier of the project to update."
                },
                "project_data": {
                    "type": "object",
                    "description": "A dictionary of updated project details, validated against `ProjectDataInputModel`, that must contain an `id` field whose string value matches the provided path ID.",
                    "properties": {
                        "type_id": {
                            "type": "string",
                            "description": "A string indicating the object's type."
                        },
                        "id": {
                            "type": "string",
                            "description": "A project identifier string."
                        },
                        "external_id": {
                            "type": "string",
                            "description": "The project's external identifier string."
                        },
                        "supplier_companies": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {}
                            },
                            "description": "An array of supplier company objects."
                        },
                        "supplier_contacts": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {}
                            },
                            "description": "An array of supplier contact objects."
                        },
                        "status": {
                            "type": "string",
                            "description": "Specifies the project status."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary containing project attributes such as `name`, `description`, `state`, target dates, and financial amounts."
                        },
                        "relationships": {
                            "type": "object",
                            "description": "A dictionary containing the project's attachments, creator, requester, owner, and project type."
                        }
                    },
                    "required": [
                        "attributes",
                        "external_id",
                        "id",
                        "relationships",
                        "status",
                        "supplier_companies",
                        "supplier_contacts",
                        "type_id"
                    ]
                }
            },
            "required": [
                "id",
                "project_data"
            ]
        }
    },
    {
        "name": "update_spend_category_by_id",
        "description": "Updates an existing spend category by its unique ID, only updating fields provided in the payload.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "Unique ID of the spend category to update."
                },
                "name": {
                    "type": "string",
                    "description": "An optional name for the spend category, limited to 255 characters."
                },
                "new_external_id": {
                    "type": "string",
                    "description": "Optional external system ID, up to 255 characters."
                },
                "usages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optional list of applicable contexts, chosen from `\\\"procurement\\\"`, `\\\"expense\\\"`, `\\\"ad_hoc_payment\\\"`, or `\\\"supplier_invoice\\\"`."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "update_spend_category_details_by_external_id",
        "description": "Updates an existing spend category by its internal identifier from the URL path; only provided optional fields are updated.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "An internal integer identifier for the spend category to update."
                },
                "name": {
                    "type": "string",
                    "description": "The updated name (max 255 characters)."
                },
                "external_id": {
                    "type": "string",
                    "description": "An external identifier, new or existing, with a maximum length of 255 characters."
                },
                "usages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of usages to update, where each item must be `procurement`, `expense`, `ad_hoc_payment`, or `supplier_invoice`."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "update_supplier_company_by_external_id",
        "description": "Updates an existing supplier company by its external identifier, where the request body `id` must match the identifier in the path.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The required external identifier for the supplier company (e.g., \"1234-5678-abcd-efgh\")."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of related resources to include in the response, which can be one or more of: `attachments`, `supplier_category`, `supplier_groups`, `default_payment_term`, `payment_types`, `default_payment_type`, `payment_currencies`, `default_payment_currency`, `supplier_classification_values`."
                },
                "body": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "The resource type, which must be `supplier_companies`."
                        },
                        "id": {
                            "type": "integer",
                            "description": "The unique identifier for the supplier company."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "The supplier company attributes to update.",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Required company name, with a maximum of 255 characters."
                                },
                                "description": {
                                    "type": "string",
                                    "description": "An optional description of the supplier company."
                                },
                                "public": {
                                    "type": "boolean",
                                    "description": "Specifies if the company is publicly visible."
                                },
                                "risk": {
                                    "type": "string",
                                    "description": "The slug identifier for the company's risk level."
                                },
                                "segmentation": {
                                    "type": "string",
                                    "description": "The unique identifier (slug) for the segment."
                                },
                                "segmentation_status": {
                                    "type": "string",
                                    "description": "A slug representing the segmentation status."
                                },
                                "segmentation_notes": {
                                    "type": "string",
                                    "description": "Notes regarding segmentation."
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "Classification tags."
                                },
                                "url": {
                                    "type": "string",
                                    "description": "URL of the supplier's website."
                                },
                                "duns_number": {
                                    "type": "string",
                                    "description": "The supplier's D-U-N-S® Number."
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "A user-defined external identifier."
                                },
                                "self_registered": {
                                    "type": "boolean",
                                    "description": "Indicates if the supplier self-registered."
                                },
                                "onboarding_form_completion_status": {
                                    "type": "string",
                                    "description": "The onboarding status, which must be `null`, `'not_started'`, `'in_progress'`, or `'completed'`."
                                },
                                "accept_all_currencies": {
                                    "type": "boolean",
                                    "description": "Specifies whether all currencies are accepted."
                                },
                                "custom_fields": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Name of the custom field."
                                            },
                                            "value": {
                                                "type": "object",
                                                "description": "Value, based on field type."
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "value"
                                        ]
                                    },
                                    "description": "An array of custom fields."
                                }
                            },
                            "required": [
                                "accept_all_currencies",
                                "custom_fields",
                                "description",
                                "duns_number",
                                "external_id",
                                "name",
                                "onboarding_form_completion_status",
                                "public",
                                "risk",
                                "segmentation",
                                "segmentation_notes",
                                "segmentation_status",
                                "self_registered",
                                "tags",
                                "url"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "description": "An object for updating linked resources, such as supplier category, groups, payment terms, types, and currencies. Specify resources using their internal ID (e.g., `supplier_category`) or external ID (e.g., `external_supplier_category`).",
                            "properties": {
                                "attachments": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    },
                                    "description": "An object containing the attachment's `id` and a `type` property with the value `\"attachments\"`."
                                }
                            },
                            "required": [
                                "attachments"
                            ]
                        }
                    },
                    "description": "The supplier company fields to update.",
                    "required": [
                        "attributes",
                        "id",
                        "relationships",
                        "type"
                    ]
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "update_supplier_company_by_id",
        "description": "Updates a supplier company's attributes and relationships, replacing the entire existing relationship with the provided values.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The required, unique identifier for the supplier company (e.g., `1`)."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of related resources to include in the response, with allowed values being `attachments`, `supplier_category`, `supplier_groups`, `default_payment_term`, `payment_types`, `default_payment_type`, `payment_currencies`, `default_payment_currency`, and `supplier_classification_values`."
                },
                "body": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Must be `supplier_companies`."
                        },
                        "id": {
                            "type": "integer",
                            "description": "The supplier company's unique identifier, which must match the ID in the request path."
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Required name of the supplier (maximum 255 characters)."
                                },
                                "description": {
                                    "type": "string",
                                    "description": "A description of the company."
                                },
                                "public": {
                                    "type": "boolean",
                                    "description": "Indicates if the company is publicly listed."
                                },
                                "risk": {
                                    "type": "string",
                                    "description": "An organization-defined slug for the risk."
                                },
                                "segmentation": {
                                    "type": "string",
                                    "description": "A unique identifier (slug) for the segmentation."
                                },
                                "segmentation_status": {
                                    "type": "string",
                                    "description": "The unique slug representing the segmentation status."
                                },
                                "segmentation_notes": {
                                    "type": "string",
                                    "description": "Notes regarding the segmentation."
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "Tags assigned to the supplier."
                                },
                                "url": {
                                    "type": "string",
                                    "description": "The supplier's website URL."
                                },
                                "duns_number": {
                                    "type": "string",
                                    "description": "The D-U-N-S® Number."
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "Your internal identifier for the supplier."
                                },
                                "self_registered": {
                                    "type": "boolean",
                                    "description": "Indicates if the supplier self-registered."
                                },
                                "onboarding_form_completion_status": {
                                    "type": "string",
                                    "description": "Specifies the completion status of the onboarding form, which must be `null`, `not_started`, `in_progress`, or `completed`."
                                },
                                "accept_all_currencies": {
                                    "type": "boolean",
                                    "description": "Indicates if all currencies are accepted."
                                },
                                "custom_fields": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {}
                                    },
                                    "description": "A list of custom field entries of a supported type: `Checkbox`, `Short Text`, `Paragraph`, `Date`, `Integer`, `Currency`, `Decimal`, `Single Select`, `Multiple Select`, `URL`, `Lookup`, or `Related`. Note that file-type fields are unsupported and return `null`."
                                }
                            },
                            "description": "",
                            "required": [
                                "accept_all_currencies",
                                "custom_fields",
                                "name",
                                "onboarding_form_completion_status",
                                "public",
                                "self_registered",
                                "tags"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "properties": {},
                            "description": "An object of supplier relationships that replaces all existing data, including fields for `supplier_category`, `supplier_groups`, payment details, `attachments`, and `supplier_classification_values`."
                        }
                    },
                    "description": "An object with the `SupplierCompanyUpdate` fields to update.",
                    "required": [
                        "attributes",
                        "id",
                        "relationships",
                        "type"
                    ]
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "update_supplier_company_contact_by_id",
        "description": "Update an existing supplier company contact's details by company ID and contact ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer",
                    "description": "The unique internal ID used by the system to reference the supplier company."
                },
                "contact_id": {
                    "type": "integer",
                    "description": "The unique identifier of the contact, which is the internal ID used by the system to reference it."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of related resources to include in the response; not fully implemented in simulation."
                },
                "body": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The contact's full name."
                        },
                        "email": {
                            "type": "string",
                            "description": "The contact's email address."
                        },
                        "phone": {
                            "type": "string",
                            "description": "The contact's phone number."
                        },
                        "role": {
                            "type": "string",
                            "description": "The contact's role in the company."
                        },
                        "status": {
                            "type": "string",
                            "description": "The contact's status."
                        }
                    },
                    "description": "A dictionary containing contact fields to update; at least one field must be provided.",
                    "required": [
                        "email",
                        "name",
                        "phone",
                        "role",
                        "status"
                    ]
                }
            },
            "required": [
                "company_id",
                "contact_id"
            ]
        }
    },
    {
        "name": "update_supplier_contact_by_external_id",
        "description": "Updates a supplier contact's details using its external ID, requiring the internal `id` in the request body to match the contact being modified.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The required and unique external identifier for the supplier contact (e.g., `CNT-17`)."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of related resources to include in the response. Allowed values: `supplier_company`, `contact_types`, `phones`."
                },
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "object",
                            "properties": {},
                            "description": ""
                        },
                        "type": {
                            "type": "string",
                            "description": "Must be set to `supplier_contacts`."
                        },
                        "id": {
                            "type": "integer",
                            "description": "The required internal ID of the contact being updated."
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The contact's full name, up to 255 characters. Required unless both `first_name` and `last_name` are provided."
                                },
                                "first_name": {
                                    "type": "string",
                                    "description": "The first name, with a maximum length of 255 characters."
                                },
                                "last_name": {
                                    "type": "string",
                                    "description": "The last name, with a maximum length of 255 characters."
                                },
                                "email": {
                                    "type": "string",
                                    "description": "The required email address, with a maximum length of 255 characters."
                                },
                                "notes": {
                                    "type": "string",
                                    "description": "Optional notes about the contact."
                                },
                                "phone_number": {
                                    "type": "string",
                                    "description": "Deprecated in favor of the `phones` relationship."
                                },
                                "job_title": {
                                    "type": "string",
                                    "description": "The contact's job title."
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "The contact's external ID."
                                },
                                "is_suggested": {
                                    "type": "boolean",
                                    "description": "Indicates if the contact is a suggestion awaiting approval."
                                }
                            },
                            "description": "",
                            "required": [
                                "email",
                                "name"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "properties": {
                                "contact_types": {
                                    "type": "object",
                                    "properties": {},
                                    "description": "A list of objects, each containing an `id` (integer) and `type` (string)."
                                },
                                "phones": {
                                    "type": "object",
                                    "properties": {},
                                    "description": "A list of resource identifiers, each an object containing an integer `id` and a string `type`."
                                }
                            },
                            "description": ""
                        }
                    },
                    "description": "An object containing the supplier's updated contact details.",
                    "required": [
                        "attributes",
                        "data",
                        "id",
                        "relationships",
                        "type"
                    ]
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "update_supplier_contact_by_id",
        "description": "Updates a supplier contact's attributes and optionally its related contact types and phone records, requiring the contact `id` in the request body to match the `id` in the path.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique identifier of the supplier contact to update."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of related resources to include in the response. Allowed values: `supplier_company`, `contact_types`, and `phones`."
                },
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "object",
                            "properties": {},
                            "description": ""
                        },
                        "type": {
                            "type": "string",
                            "description": "The resource type, which must be `supplier_contacts`."
                        },
                        "id": {
                            "type": "integer",
                            "description": "A required ID that must match the `id` in the URL path."
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Required unless both `first_name` and `last_name` are provided; specifies the contact's full name, with a maximum of 255 characters."
                                },
                                "first_name": {
                                    "type": "string",
                                    "description": "The first name, with a maximum of 255 characters."
                                },
                                "last_name": {
                                    "type": "string",
                                    "description": "The last name, with a maximum length of 255 characters."
                                },
                                "email": {
                                    "type": "string",
                                    "description": "The required email address, with a maximum length of 255 characters."
                                },
                                "notes": {
                                    "type": "string",
                                    "description": "Additional notes about the contact."
                                },
                                "phone_number": {
                                    "type": "string",
                                    "description": "Deprecated in favor of the `phones` relationship."
                                },
                                "job_title": {
                                    "type": "string",
                                    "description": "The contact's job title."
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "A unique identifier from an external system."
                                },
                                "is_suggested": {
                                    "type": "boolean",
                                    "description": "Specifies if the contact is unapproved or suggested."
                                }
                            },
                            "description": "",
                            "required": [
                                "email",
                                "name"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "properties": {
                                "contact_types": {
                                    "type": "object",
                                    "properties": {},
                                    "description": "A list of objects, each with an `id` (integer) and a `type` (string)."
                                },
                                "phones": {
                                    "type": "object",
                                    "properties": {},
                                    "description": "A list of resource identifier objects, each containing an integer `id` and a string `type`."
                                }
                            },
                            "description": ""
                        }
                    },
                    "description": "An object containing the updated supplier contact information.",
                    "required": [
                        "attributes",
                        "data",
                        "id",
                        "relationships",
                        "type"
                    ]
                }
            },
            "required": [
                "id"
            ]
        }
    }
]