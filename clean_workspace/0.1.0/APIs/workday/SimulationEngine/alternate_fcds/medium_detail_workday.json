[
    {
        "name": "add_supplier_companies_to_event_by_external_id",
        "description": "Add suppliers to an event using external identifiers. This operation is only supported for events of type RFP.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_external_id": {
                    "type": "string",
                    "description": "The unique external identifier for the event, specifying where suppliers will be added."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary containing supplier information. It must include `supplier_external_ids` (a list of supplier external IDs) and a `type` key with the value \"supplier_companies\".",
                    "properties": {
                        "supplier_external_ids": {
                            "type": "array",
                            "description": "A list containing the external identifiers of suppliers to be added to the event."
                        },
                        "type": {
                            "type": "string",
                            "description": "Specifies the object type, which must always be `supplier_companies`."
                        }
                    },
                    "required": [
                        "supplier_external_ids",
                        "type"
                    ]
                }
            },
            "required": [
                "data",
                "event_external_id"
            ]
        }
    },
    {
        "name": "add_supplier_companies_to_event_by_internal_id",
        "description": "Adds suppliers to an event, an operation exclusively supported for events of type RFP.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the event to which suppliers will be added."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary containing the supplier information. It must include a `supplier_ids` key, which is a list of supplier IDs to be added to the event, and a `type` key, which must be the string 'supplier_companies'.",
                    "properties": {
                        "supplier_ids": {
                            "type": "array",
                            "description": "Specifies a list of supplier IDs to be added to the event."
                        },
                        "type": {
                            "type": "string",
                            "description": "Specifies the object type, which must always be \"supplier_companies\"."
                        }
                    },
                    "required": [
                        "supplier_ids",
                        "type"
                    ]
                }
            },
            "required": [
                "data",
                "event_id"
            ]
        }
    },
    {
        "name": "add_supplier_companies_to_project",
        "description": "Adds one or more supplier companies to a specified project. The `supplier_ids` parameter must be a list of integers, and for optimal performance, it's recommended to add 10 or fewer suppliers per request.",
        "parameters": {
            "type": "object",
            "properties": {
                "project_id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the project."
                },
                "supplier_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of supplier company IDs to add to the project. For optimal performance, it is recommended to include 10 or fewer supplier IDs in a single request."
                }
            },
            "required": [
                "project_id",
                "supplier_ids"
            ]
        }
    },
    {
        "name": "add_supplier_companies_to_project_by_external_id",
        "description": "Adds one or more supplier companies to a project. The project is identified by its external ID, and the supplier companies are specified as a list of their external IDs.",
        "parameters": {
            "type": "object",
            "properties": {
                "project_external_id": {
                    "type": "string",
                    "description": "The external identifier for the project."
                },
                "supplier_external_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a list of external identifiers for supplier companies to be added to the project."
                }
            },
            "required": [
                "project_external_id",
                "supplier_external_ids"
            ]
        }
    },
    {
        "name": "add_supplier_contacts_to_event_by_external_ids",
        "description": "Add suppliers to an event using their external contact identifiers. This operation only supports events of type 'RFP' and requires the unique event external identifier used during creation. The entire operation rolls back on any failure, preventing invitations from being sent, and for best performance, invite 10 or fewer supplier contacts per request.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_external_id": {
                    "type": "string",
                    "description": "The unique external identifier, a string, for the event where suppliers will be added."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary containing supplier contact information. It must include a `supplier_contact_external_ids` key (a list of external IDs) and a `type` key, which must always be \"supplier_contacts\".",
                    "properties": {
                        "supplier_contact_external_ids": {
                            "type": "array",
                            "description": "A list of external IDs for supplier contacts that are to be added to the event."
                        },
                        "type": {
                            "type": "string",
                            "description": "The object type, which must always be \"supplier_contacts\"."
                        }
                    },
                    "required": [
                        "supplier_contact_external_ids",
                        "type"
                    ]
                }
            },
            "required": [
                "data",
                "event_external_id"
            ]
        }
    },
    {
        "name": "add_supplier_contacts_to_event_by_internal_id",
        "description": "Adds supplier contacts to a specified event. This function supports only events of type RFP.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the event to which supplier contacts will be added."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary containing the supplier contact information. It must include `supplier_contact_ids` as a list of IDs and `type` as a string, which should always be \"supplier_contacts\".",
                    "properties": {
                        "supplier_contact_ids": {
                            "type": "array",
                            "description": "A list of supplier contact IDs to be added to the event."
                        },
                        "type": {
                            "type": "string",
                            "description": "The object type for the data, which must always be 'supplier_contacts'."
                        }
                    },
                    "required": [
                        "supplier_contact_ids",
                        "type"
                    ]
                }
            },
            "required": [
                "data",
                "event_id"
            ]
        }
    },
    {
        "name": "add_supplier_contacts_to_project_by_external_ids",
        "description": "Adds supplier contacts to an existing project. It links the provided supplier contacts, identified by their external IDs, to a specific project, identified by its external ID, facilitating bulk additions of registered suppliers.",
        "parameters": {
            "type": "object",
            "properties": {
                "project_external_id": {
                    "type": "string",
                    "description": "Specifies the external ID of the project to which suppliers will be added."
                },
                "supplier_contact_external_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of external identifiers for the supplier contacts to be added to the project."
                }
            },
            "required": [
                "project_external_id",
                "supplier_contact_external_ids"
            ]
        }
    },
    {
        "name": "add_supplier_contacts_to_project_by_internal_id",
        "description": "Adds one or more supplier contacts, provided as a list of IDs, to the project identified by its unique ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "project_id": {
                    "type": "integer",
                    "description": "The unique integer identifier for the project."
                },
                "supplier_contact_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of integer identifiers for supplier contacts to be added to the project."
                }
            },
            "required": [
                "project_id",
                "supplier_contact_ids"
            ]
        }
    },
    {
        "name": "create_attachment",
        "description": "Create a new attachment in the system using the provided data. This function checks for duplicate external IDs and generates a new unique internal ID for the attachment.",
        "parameters": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "object",
                            "description": "Specifies the object type. This parameter must always be set to 'attachments'."
                        },
                        "name": {
                            "type": "object",
                            "description": "The required string representing the file name for the attachment."
                        },
                        "uploaded_by": {
                            "type": "string",
                            "description": "The email address or unique identifier of the user who uploaded the attachment."
                        },
                        "external_id": {
                            "type": "object",
                            "description": "A unique external identifier for the attachment. It must be a string with a maximum length of 255 characters."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary specifying optional attachment attributes such as `title` (string, max 255 chars), `size` (string for bytes), `external_id` (string, max 255 chars), `download_url` (string), `download_url_expires_at` (datetime), and `uploaded_at` (datetime).",
                            "properties": {
                                "title": {
                                    "type": "object",
                                    "description": "The title of the attachment, specified as a string with a maximum length of 255 characters."
                                },
                                "size": {
                                    "type": "string",
                                    "description": "The attachment file size, specified in bytes. This value must be provided as a string."
                                },
                                "external_id": {
                                    "type": "object",
                                    "description": "A unique external identifier for the attachment. It must be a string with a maximum length of 255 characters."
                                },
                                "download_url": {
                                    "type": "string",
                                    "description": "Specifies the URL for downloading the attachment. This parameter is a string."
                                },
                                "download_url_expires_at": {
                                    "type": "object",
                                    "description": "The expiration time for the attachment's download URL, provided as a `datetime` object."
                                },
                                "uploaded_at": {
                                    "type": "object",
                                    "description": "The timestamp indicating when the attachment was uploaded, represented as a datetime object."
                                }
                            },
                            "required": [
                                "download_url",
                                "download_url_expires_at",
                                "external_id",
                                "size",
                                "title",
                                "uploaded_at"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "description": "A dictionary representing a relationship to an associated object. It must specify one of `Contract`, `Event`, `Project`, or `Supplier Company` as the related entity. This dictionary requires a `type` key (string) for the object type and an `id` key (integer) for the object identifier.",
                            "properties": {
                                "type": {
                                    "type": "object",
                                    "description": "Specifies the type of the related object, which must be 'Contract', 'Event', 'Project', or 'Supplier Company'."
                                },
                                "id": {
                                    "type": "object",
                                    "description": "A required integer that uniquely identifies the related object."
                                }
                            },
                            "required": [
                                "id",
                                "type"
                            ]
                        }
                    },
                    "description": "A dictionary representing attachment data. It requires `type` (must be \"attachments\") and `name` (the attachment's file name), and optionally accepts `uploaded_by` (email/identifier) and `external_id` (max 255 characters). The dictionary can also include `attributes` (an object with optional `title` (max 255 characters), `size`, `external_id` (max 255 characters), `download_url`, `download_url_expires_at`, and `uploaded_at`) and `relationships` (an object linking to a `Contract`, `Event`, `Project`, or `Supplier Company` via their required `type` and `id` (integer identifier)).",
                    "required": [
                        "attributes",
                        "external_id",
                        "name",
                        "relationships",
                        "type",
                        "uploaded_by"
                    ]
                }
            },
            "required": [
                "data"
            ]
        }
    },
    {
        "name": "create_contact_type",
        "description": "Creates a new contact type in the system, accepting a dictionary that specifies its properties and configuration. This dictionary must include `type` (set to 'contact_types'), `external_id` (max 255 characters), and `name` (max 255 characters).",
        "parameters": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "description": "A dictionary defining the properties and configuration for the new contact type. It must include: `type` (string, always 'contact_types'), `external_id` (string, maximum 255 characters), and `name` (string, maximum 255 characters).",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Specifies the object type for the new contact type; it must always be \"contact_types\"."
                        },
                        "external_id": {
                            "type": "string",
                            "description": "An external identifier for the contact type, limited to a maximum of 255 characters."
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the contact type, limited to a maximum of 255 characters."
                        }
                    },
                    "required": [
                        "external_id",
                        "name",
                        "type"
                    ]
                }
            }
        }
    },
    {
        "name": "create_contract",
        "description": "Create a new contract. The `body` parameter must be a dictionary containing the required contract data, including its `type`, `attributes` (which require a `title` and `state`), and `relationships` (which require `owner`, `supplier_company`, and `contract_type`).",
        "parameters": {
            "type": "object",
            "properties": {
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of relationships to include in the response. Supported values are \"contract_type\", \"spend_category\", \"supplier_company\", \"docusign_envelopes\", and \"adobe_sign_agreements\"."
                },
                "body": {
                    "type": "object",
                    "description": "An optional dictionary providing the data for creating a new contract. If provided, it must include the `type` (string), `attributes` (dictionary), and `relationships` (dictionary) as top-level keys. The `attributes` dictionary contains core contract properties like `title` and `state`, while `relationships` defines associations such as `owner`, `supplier_company`, and `contract_type`.",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "A required string that specifies the object type for the contract being created."
                        },
                        "supplier_id": {
                            "type": "string",
                            "description": "The identifier for the supplier, provided as a string."
                        },
                        "start_date": {
                            "type": "string",
                            "description": "The contract start date, provided as a string."
                        },
                        "end_date": {
                            "type": "string",
                            "description": "The contract's end date. This parameter accepts a string value."
                        },
                        "external_id": {
                            "type": "string",
                            "description": "Specifies an external identifier for the contract."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "Required. A dictionary containing the various attributes for the new contract. It must define a `title` (maximum 255 characters) and a `state`, which must be one of 'draft', 'requested', 'in_progress', 'out_for_approval', 'approved', 'active', 'expired', or 'terminated'. Many other optional attributes, such as `description`, are also supported.",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "The required title of the contract. This field must not exceed 255 characters."
                                },
                                "description": {
                                    "type": "string",
                                    "description": "An optional string that provides a description for the contract."
                                },
                                "state": {
                                    "type": "string",
                                    "description": "The required current state of the contract. This parameter must be one of the following values: \"draft\", \"requested\", \"in_progress\", \"out_for_approval\", \"approved\", \"active\", \"expired\", or \"terminated\"."
                                },
                                "state_label": {
                                    "type": "string",
                                    "description": "An optional, customer-specific label for the contract's state."
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "An optional, customer-provided unique identifier for the contract."
                                },
                                "actual_start_date": {
                                    "type": "string",
                                    "description": "An optional string representing the actual contract start date."
                                },
                                "actual_end_date": {
                                    "type": "string",
                                    "description": "An optional string representing the actual end date of the contract."
                                },
                                "actual_spend_amount": {
                                    "type": "number",
                                    "description": "Optional, this float parameter specifies the actual spend amount for the contract."
                                },
                                "auto_renewal": {
                                    "type": "string",
                                    "description": "Optional. Specifies the auto-renewal mode for the contract. It must be one of \"yes\", \"no\", or \"evergreen\"."
                                },
                                "marked_as_needs_attention_at": {
                                    "type": "string",
                                    "description": "Specifies the optional date and time when the contract was flagged as needing attention."
                                },
                                "needs_attention": {
                                    "type": "boolean",
                                    "description": "A boolean value indicating whether the contract requires attention."
                                },
                                "needs_attention_note": {
                                    "type": "string",
                                    "description": "An optional string providing notes that explain why the contract requires attention."
                                },
                                "needs_attention_reason": {
                                    "type": "string",
                                    "description": "An optional string that specifies the reason why the contract requires attention."
                                },
                                "renew_number_of_times": {
                                    "type": "integer",
                                    "description": "An optional integer specifying the number of times a contract should be renewed."
                                },
                                "renewal_term_unit": {
                                    "type": "string",
                                    "description": "Optional. Specifies the term unit for contract renewals. Valid values include 'days', 'weeks', 'months', or 'years'."
                                },
                                "renewal_term_value": {
                                    "type": "integer",
                                    "description": "An optional integer that defines the duration, in units like days, weeks, months, or years, between contract renewals."
                                },
                                "renewal_termination_notice_unit": {
                                    "type": "string",
                                    "description": "Specifies the optional term unit for the renewal termination notice. Valid units include 'days', 'weeks', 'months', and 'years'."
                                },
                                "renewal_termination_notice_value": {
                                    "type": "integer",
                                    "description": "An integer indicating the number of term units by which a termination notice must precede the contract's end date."
                                },
                                "renewal_termination_reminder_unit": {
                                    "type": "string",
                                    "description": "An optional string specifying the unit of duration for the termination reminder."
                                },
                                "renewal_termination_reminder_value": {
                                    "type": "integer",
                                    "description": "Optional. Specifies the integer number of units for a reminder about an upcoming termination notice. This reminder is triggered this many units before the termination notice period begins, with the unit type (e.g., 'days', 'weeks') defined by `renewal_termination_reminder_unit`."
                                },
                                "terminated_note": {
                                    "type": "string",
                                    "description": "An optional string field for recording notes related to the termination of the contract."
                                },
                                "terminated_reason": {
                                    "type": "string",
                                    "description": "An optional field that specifies the reason for a contract's termination."
                                },
                                "custom_fields": {
                                    "type": "array",
                                    "description": "An optional list containing custom field values."
                                },
                                "approval_rounds": {
                                    "type": "integer",
                                    "description": "An optional integer representing the number of times the contract has been sent for approval."
                                },
                                "public": {
                                    "type": "boolean",
                                    "description": "An optional boolean parameter that determines the public visibility of the contract."
                                }
                            },
                            "required": [
                                "actual_end_date",
                                "actual_spend_amount",
                                "actual_start_date",
                                "approval_rounds",
                                "auto_renewal",
                                "custom_fields",
                                "description",
                                "external_id",
                                "marked_as_needs_attention_at",
                                "needs_attention",
                                "needs_attention_note",
                                "needs_attention_reason",
                                "public",
                                "renew_number_of_times",
                                "renewal_term_unit",
                                "renewal_term_value",
                                "renewal_termination_notice_unit",
                                "renewal_termination_notice_value",
                                "renewal_termination_reminder_unit",
                                "renewal_termination_reminder_value",
                                "state",
                                "state_label",
                                "terminated_note",
                                "terminated_reason",
                                "title"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "description": "A required dictionary that defines the contract's relationships. It must include `owner`, `supplier_company`, and `contract_type`, and can optionally include `spend_category` and `payment_currency`. Each of these relationship objects must specify a `type` and an `id`.",
                            "properties": {
                                "owner": {
                                    "type": "object",
                                    "description": "Required. Specifies the contract owner. This must be a dictionary that includes a required `type` (string) and a required `id` (integer) for the owner.",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "A required string that specifies the object type for the contract owner."
                                        },
                                        "id": {
                                            "type": "integer",
                                            "description": "The required integer identifier for the contract owner."
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "type"
                                    ]
                                },
                                "supplier_company": {
                                    "type": "object",
                                    "description": "A required dictionary that represents the associated supplier company. It must include a `type` field, which is always \"supplier_companies\", and an `id` field, which is the integer identifier for the supplier company.",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "The object type for the associated supplier company. This field is required and must always be set to \"supplier_companies\"."
                                        },
                                        "id": {
                                            "type": "integer",
                                            "description": "A required integer that uniquely identifies the supplier company."
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "type"
                                    ]
                                },
                                "contract_type": {
                                    "type": "object",
                                    "description": "Required. A dictionary specifying the contract type. It must contain a `type` key set to \"contract_types\" and an `id` key that is the contract type identifier.",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "Required. Specifies the object type for the contract type, which must always be `contract_types`."
                                        },
                                        "id": {
                                            "type": "integer",
                                            "description": "The required integer identifier for the contract type."
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "type"
                                    ]
                                },
                                "spend_category": {
                                    "type": "object",
                                    "description": "An optional dictionary defining the spend category. It requires a `type` key, which must always be 'spend_categories', and an `id` key, which is the spend category's unique identifier.",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "Specify the object type for the spend category. This required field must always be \"spend_categories\"."
                                        },
                                        "id": {
                                            "type": "integer",
                                            "description": "A required integer that identifies the spend category."
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "type"
                                    ]
                                },
                                "payment_currency": {
                                    "type": "object",
                                    "description": "An optional dictionary that specifies the payment currency. It must contain a `type` field set to \"payment_currencies\" and an `id` field for the payment currency identifier.",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "Specifies the object type for the payment currency. This field is required and must always be set to `payment_currencies`."
                                        },
                                        "id": {
                                            "type": "integer",
                                            "description": "The required integer identifier for the payment currency."
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "type"
                                    ]
                                }
                            },
                            "required": [
                                "contract_type",
                                "owner",
                                "payment_currency",
                                "spend_category",
                                "supplier_company"
                            ]
                        }
                    },
                    "required": [
                        "attributes",
                        "end_date",
                        "external_id",
                        "relationships",
                        "start_date",
                        "supplier_id",
                        "type"
                    ]
                }
            }
        }
    },
    {
        "name": "create_contract_type",
        "description": "Create a new contract type. Provide contract creation data as a dictionary, which must include the contract `name`, an `external_id`, and a `type` field set to \"contract_types\".",
        "parameters": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "description": "A dictionary containing data for creating a new contract type. It can include the `type` (which must always be \"contract_types\"), `name`, and `external_id` keys.",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Specifies the object type, which must always be `contract_types`."
                        },
                        "name": {
                            "type": "string",
                            "description": "A string representing the name of the contract type."
                        },
                        "external_id": {
                            "type": "string",
                            "description": "An external identifier for the contract type."
                        }
                    },
                    "required": [
                        "external_id",
                        "name",
                        "type"
                    ]
                }
            }
        }
    },
    {
        "name": "create_custom_field",
        "description": "Create a field using the provided parameters. The `group` relationship must be omitted if the field's `target_object` is \"RFP\", but it is required for all other `target_object` types.",
        "parameters": {
            "type": "object",
            "properties": {
                "new_id": {
                    "type": "string",
                    "description": "The unique identifier for the new field. If this is not provided, the system will automatically generate a new ID."
                },
                "options": {
                    "type": "object",
                    "description": "A dictionary containing the configuration options for the new field. It includes `type`, `group`, and `name` (max 255 characters), along with detailed `attributes` like `target_object` (e.g., \"PROJECT\", \"RFP\", \"SUPPLIER_COMPANY\") and `type_description` (e.g., \"Checkbox\", \"Paragraph\"). It also defines `relationships`, where the `group` reference must be null for fields targeting \"RFP\" objects and is required for all other target objects.",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Defines the primary type of the field to be created. This parameter accepts a string value."
                        },
                        "group": {
                            "type": "string",
                            "description": "A string that identifies the field group to which the field belongs."
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the field. It has a maximum length of 255 characters."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary specifying the field's attributes. It includes the `name` (max 255 characters), the `target_object` (e.g., \"PROJECT\", \"RFP\", \"SUPPLIER_COMPANY\"), the `type_description` (e.g., \"Checkbox\", \"File\", \"Short Text\"), and a boolean indicating if the field is `required`.",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the field. This value must not exceed 255 characters."
                                },
                                "target_object": {
                                    "type": "string",
                                    "description": "Specifies the field object type. It must be one of \"PROJECT\", \"RFP\", or \"SUPPLIER_COMPANY\"."
                                },
                                "type_description": {
                                    "type": "string",
                                    "description": "Specifies the internal name and meaning for a field's type. It must be one of the following values: \"Checkbox\", \"File\", \"Short Text\", \"Paragraph\", \"Date\", \"Integer\", \"Currency\", \"Decimal\", \"Single Select\", \"Multiple Select\", \"URL\", \"Lookup\", or \"Related\"."
                                },
                                "required": {
                                    "type": "boolean",
                                    "description": "A boolean value indicating whether the field is required."
                                }
                            },
                            "required": [
                                "name",
                                "required",
                                "target_object",
                                "type_description"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "description": "A dictionary that defines the field's relationships. It contains a `group` dictionary, which references the field group where the field belongs. This `group` must be `null` for fields where `target_object` is set to \"RFP\", but is required for all other `target_object` types.",
                            "properties": {
                                "group": {
                                    "type": "object",
                                    "description": "A reference to the field group where the field belongs. This parameter must be `null` if the field's `target_object` is `RFP`, and it is required for all other `target_object` types."
                                }
                            },
                            "required": [
                                "group"
                            ]
                        }
                    },
                    "required": [
                        "attributes",
                        "group",
                        "name",
                        "relationships",
                        "type"
                    ]
                }
            }
        }
    },
    {
        "name": "create_event",
        "description": "Creates a new event from the provided `data` dictionary. This dictionary accepts top-level keys like `external_id`, `name`, `type` (e.g., 'RFP', 'AUCTION'), `suppliers`, `supplier_contacts`, and nested `attributes` and `relationships` dictionaries. The function returns the complete newly created event object.",
        "parameters": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "external_id": {
                            "type": "string",
                            "description": "A string that identifies the event."
                        },
                        "name": {
                            "type": "string",
                            "description": "Specifies the event name as a string."
                        },
                        "type": {
                            "type": "string",
                            "description": "Specifies the event type. Valid values include 'RFP', 'AUCTION', 'AUCTION_WITH_LOTS', 'AUCTION_LOT', 'PERFORMANCE_REVIEW_EVENT', 'PERFORMANCE_REVIEW_SCORE_CARD_ONLY_EVENT', 'SUPPLIER_REVIEW_EVENT', and 'SUPPLIER_REVIEW_MASTER_EVENT'."
                        },
                        "suppliers": {
                            "type": "array",
                            "description": "A list containing suppliers."
                        },
                        "supplier_contacts": {
                            "type": "array",
                            "description": "A list of supplier contacts to be associated with the event."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary that contains various event-specific attributes.",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "A string that specifies the title for the event."
                                },
                                "event_type": {
                                    "type": "string",
                                    "description": "The event type, which must be one of the specified enum values: \"RFP\", \"AUCTION\", \"AUCTION_WITH_LOTS\", \"AUCTION_LOT\", \"PERFORMANCE_REVIEW_EVENT\", \"PERFORMANCE_REVIEW_SCORE_CARD_ONLY_EVENT\", \"SUPPLIER_REVIEW_EVENT\", or \"SUPPLIER_REVIEW_MASTER_EVENT\"."
                                },
                                "state": {
                                    "type": "string",
                                    "description": "The current state of the event. It must be one of the following string values: \"draft\", \"scheduled\", \"published\", \"live_editing\", \"closed\", or \"canceled\"."
                                },
                                "duplication_state": {
                                    "type": "string",
                                    "description": "The current state of an event's duplication process. This value must be one of 'scheduled', 'started', 'finished', or 'failed'."
                                },
                                "spend_amount": {
                                    "type": "number",
                                    "description": "The actual spend amount, specified as a float."
                                },
                                "request_type": {
                                    "type": "string",
                                    "description": "A string that specifies the type of request for the event."
                                },
                                "late_bids": {
                                    "type": "boolean",
                                    "description": "A boolean value indicating whether late bid submissions are permitted."
                                },
                                "revise_bids": {
                                    "type": "boolean",
                                    "description": "A boolean value indicating whether suppliers are allowed to re-submit bids for the event."
                                },
                                "instant_notifications": {
                                    "type": "boolean",
                                    "description": "A boolean flag that determines whether notifications for the event are sent immediately."
                                },
                                "supplier_rsvp_deadline": {
                                    "type": "string",
                                    "description": "Specifies the date and time string by which suppliers must RSVP."
                                },
                                "supplier_question_deadline": {
                                    "type": "string",
                                    "description": "A string specifying the date and time by which questions from suppliers must be submitted."
                                },
                                "bid_submission_deadline": {
                                    "type": "string",
                                    "description": "Specifies the deadline for bid submissions for the event. This parameter must be a date and time string."
                                },
                                "created_at": {
                                    "type": "string",
                                    "description": "A string representing the date and time when the event was created."
                                },
                                "closed_at": {
                                    "type": "string",
                                    "description": "Specifies the date and time when the event is closed, provided as a string."
                                },
                                "published_at": {
                                    "type": "string",
                                    "description": "The date and time an event was published. This value is expected as a string."
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "A string identifier for the event, as managed by the system internally."
                                },
                                "is_public": {
                                    "type": "boolean",
                                    "description": "A boolean value indicating whether the event is accessible for self-registration."
                                },
                                "restricted": {
                                    "type": "boolean",
                                    "description": "Indicates whether the event is restricted to invited participants only."
                                },
                                "custom_fields": {
                                    "type": "array",
                                    "description": "A list containing custom field values."
                                }
                            },
                            "required": [
                                "bid_submission_deadline",
                                "closed_at",
                                "created_at",
                                "custom_fields",
                                "duplication_state",
                                "event_type",
                                "external_id",
                                "instant_notifications",
                                "is_public",
                                "late_bids",
                                "published_at",
                                "request_type",
                                "restricted",
                                "revise_bids",
                                "spend_amount",
                                "state",
                                "supplier_question_deadline",
                                "supplier_rsvp_deadline",
                                "title"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "description": "A dictionary that specifies related entities for the event, including `attachments` (list), an associated `project` (dictionary), an associated `spend_category` (dictionary), the `event_template` (dictionary) used, and `commodity_codes` (list).",
                            "properties": {
                                "attachments": {
                                    "type": "array",
                                    "description": "A list containing event attachments."
                                },
                                "project": {
                                    "type": "object",
                                    "description": "A dictionary representing the associated project."
                                },
                                "spend_category": {
                                    "type": "object",
                                    "description": "A dictionary representing the associated spend category."
                                },
                                "event_template": {
                                    "type": "object",
                                    "description": "A dictionary that specifies the event template used for this event."
                                },
                                "commodity_codes": {
                                    "type": "array",
                                    "description": "A list of commodity codes associated with the event."
                                }
                            },
                            "required": [
                                "attachments",
                                "commodity_codes",
                                "event_template",
                                "project",
                                "spend_category"
                            ]
                        }
                    },
                    "description": "A dictionary containing data for creating a new event. It accepts keys for core event properties such as `name` and `type`, lists for related entities like `suppliers`, and nested dictionaries like `attributes` and `relationships` for comprehensive event details.",
                    "required": [
                        "attributes",
                        "external_id",
                        "name",
                        "relationships",
                        "supplier_contacts",
                        "suppliers",
                        "type"
                    ]
                }
            },
            "required": [
                "data"
            ]
        }
    },
    {
        "name": "create_event_worksheet_line_item",
        "description": "Creates a new line item with specified cell values and properties. The `data` parameter defines the line item, including its `type` (always \"line_items\"), `relationships` to the associated worksheet, and `attributes.data` which maps worksheet column identifiers to their corresponding cell values.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the event to which the line item will belong."
                },
                "worksheet_id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the worksheet to which the line item will belong."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary containing the properties for the new line item. It must include a `type` field set to \"line_items\", and `relationships` containing the associated `worksheet` with its `type` as \"worksheets\" and its `id`. Additionally, it requires an `attributes` dictionary, which must contain a `data` mapping where keys are worksheet column identifiers and values are dictionaries with `data_identifier` (matching the key) and the cell `value`.",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "The object type for the line item. This parameter must always be set to \"line_items\"."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary containing the attributes for the line item. This dictionary includes a `data` field, which is a hashmap. In this hashmap, keys are data identifier strings for worksheet columns, and values are cell value dictionaries, each specifying the `data_identifier` (string) and the `value` (any) for the cell.",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "description": "A hashmap where keys are data identifier strings for the columns in the worksheet. Each value is a dictionary containing the `data_identifier` (the worksheet column identifier string) and the `value` (the actual worksheet line item cell value).",
                                    "properties": {
                                        "data_identifier": {
                                            "type": "string",
                                            "description": "A string that identifies a specific column within the worksheet. This identifier is included with a cell's value to specify the column to which that value belongs."
                                        },
                                        "value": {
                                            "type": "object",
                                            "description": "Specifies the content of a single cell within a worksheet line item. This value can be of any data type and is associated with a specific worksheet column, identified by its `data_identifier`."
                                        }
                                    },
                                    "required": [
                                        "data_identifier",
                                        "value"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "description": "A dictionary defining the line item's relationships. It must include a `worksheet` key, whose value is an object containing the associated worksheet's `type` (always 'worksheets') and its unique `id`.",
                            "properties": {
                                "worksheet": {
                                    "type": "object",
                                    "description": "Specifies the associated worksheet for the line item. This dictionary must contain the `type`, which should always be 'worksheets', and the `id`, which is the unique integer identifier of the worksheet.",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "The object type for the associated worksheet. This value must always be 'worksheets'."
                                        },
                                        "id": {
                                            "type": "integer",
                                            "description": "A unique integer identifier for the associated worksheet."
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "type"
                                    ]
                                }
                            },
                            "required": [
                                "worksheet"
                            ]
                        }
                    },
                    "required": [
                        "attributes",
                        "relationships",
                        "type"
                    ]
                }
            },
            "required": [
                "data",
                "event_id",
                "worksheet_id"
            ]
        }
    },
    {
        "name": "create_field_group",
        "description": "Creates a new field group, requiring a `name` and optionally a `description` which defaults to an empty string. An optional `data` dictionary configures the field group, containing a `type` (always 'field_groups'), a `name` for the field group (max 255 characters), a `fields` list, and `attributes`. The `attributes` include a `target_object` (must be 'PROJECT', 'SUPPLIER_COMPANY', or 'RFP') and another `name` for the field group (max 255 characters).",
        "parameters": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the field group to be created. This name is limited to a maximum of 255 characters."
                },
                "description": {
                    "type": "string",
                    "description": "A detailed description of the field group, which defaults to an empty string."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary containing the field group configuration options. This dictionary can include `type` (a string that must be \"field_groups\"), `name` (a string up to 255 characters), and `fields` (a list of fields belonging to the group). It may also contain an `attributes` dictionary, which specifies the `target_object` (one of \"PROJECT\", \"SUPPLIER_COMPANY\", or \"RFP\") and a `name` (a string up to 255 characters).",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Defines the object type for the field group; this value must always be \"field_groups\"."
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the field group, which must not exceed 255 characters."
                        },
                        "fields": {
                            "type": "object",
                            "description": "A list of fields associated with this group."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary containing specific attributes for the field group. It includes `target_object`, which is the field group object type (e.g., 'PROJECT', 'SUPPLIER_COMPANY', 'RFP'), and `name`, which is the field group name (maximum 255 characters).",
                            "properties": {
                                "target_object": {
                                    "type": "string",
                                    "description": "Specifies the field group object type, which must be a string set to one of 'PROJECT', 'SUPPLIER_COMPANY', or 'RFP'."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Specifies the name of the field group, with a maximum length of 255 characters."
                                }
                            },
                            "required": [
                                "name",
                                "target_object"
                            ]
                        }
                    },
                    "required": [
                        "attributes",
                        "fields",
                        "name",
                        "type"
                    ]
                }
            },
            "required": [
                "name"
            ]
        }
    },
    {
        "name": "create_field_options",
        "description": "Creates a new field option by associating a list of options with a field ID. The field ID can be explicitly provided or automatically generated if not specified.",
        "parameters": {
            "type": "object",
            "properties": {
                "new_id": {
                    "type": "string",
                    "description": "The field ID to associate the options with. If not provided, a new field ID will be automatically generated."
                },
                "options": {
                    "type": "object",
                    "description": "A `List` of options to be associated with the field."
                }
            }
        }
    },
    {
        "name": "create_multiple_event_worksheet_line_items",
        "description": "Adds multiple line items to a specified event worksheet.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "The unique identifier of the event to which the line items will be added."
                },
                "worksheet_id": {
                    "type": "integer",
                    "description": "The unique identifier for the worksheet where the new line items will be added."
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": "Object type, should always be \"line_items\""
                            },
                            "attributes": {
                                "type": "object",
                                "description": "LineItem attributes containing:",
                                "properties": {
                                    "data": {
                                        "type": "object",
                                        "description": "A hashmap where keys are data identifier strings for the columns in the worksheet, and values are cell values, where each value contains:",
                                        "properties": {
                                            "data_identifier": {
                                                "type": "string",
                                                "description": "Worksheet column identifier string"
                                            },
                                            "value": {
                                                "type": "object",
                                                "description": "Worksheet line item cell value"
                                            }
                                        },
                                        "required": [
                                            "data_identifier",
                                            "value"
                                        ]
                                    }
                                },
                                "required": [
                                    "data"
                                ]
                            },
                            "relationships": {
                                "type": "object",
                                "description": "Line item relationships containing:",
                                "properties": {
                                    "worksheet": {
                                        "type": "object",
                                        "description": "Associated worksheet containing:",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "description": "Object type, should always be \"worksheets\""
                                            },
                                            "id": {
                                                "type": "integer",
                                                "description": "Worksheet identifier string"
                                            }
                                        },
                                        "required": [
                                            "id",
                                            "type"
                                        ]
                                    }
                                },
                                "required": [
                                    "worksheet"
                                ]
                            }
                        },
                        "required": [
                            "attributes",
                            "relationships",
                            "type"
                        ]
                    },
                    "description": "A list where each item is a dictionary defining the properties for a new line item."
                }
            },
            "required": [
                "data",
                "event_id",
                "worksheet_id"
            ]
        }
    },
    {
        "name": "create_payment_currency",
        "description": "Creates a new payment currency entry in the system. This requires specifying a three-letter alphabetic currency code (e.g., USD, EUR) and a numeric currency code. An optional external identifier, limited to 255 characters, can also be provided.",
        "parameters": {
            "type": "object",
            "properties": {
                "alpha": {
                    "type": "string",
                    "description": "A three-letter currency code, such as USD or EUR."
                },
                "numeric": {
                    "type": "string",
                    "description": "A three-digit numeric currency code."
                },
                "external_id": {
                    "type": "string",
                    "description": "An optional external identifier for the currency. This identifier is limited to a maximum of 255 characters."
                }
            },
            "required": [
                "alpha",
                "numeric"
            ]
        }
    },
    {
        "name": "create_payment_term",
        "description": "Creates a new payment term entry in the system. Specify a `name` for the term (e.g., \"Net 30\") and optionally provide an `external_id`.",
        "parameters": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the payment term, such as 'Net 30' or 'Net 60'. This string field supports up to 255 characters."
                },
                "external_id": {
                    "type": "string",
                    "description": "An optional string that provides an external identifier for the payment term. This identifier has a maximum length of 255 characters."
                }
            },
            "required": [
                "name"
            ]
        }
    },
    {
        "name": "create_payment_type",
        "description": "Creates a new payment type with a specified name and payment method, along with an optional external identifier. The `payment_method` must be one of \"Direct Deposit\", \"Check\", \"EFT\", \"Cash\", \"Credit Card\", \"Wire\", \"Manual\", \"Direct Debit\", \"PayPal\", or \"EFT with Reference\". The optional `external_id` supports a maximum of 255 characters.",
        "parameters": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the payment type (e.g., \"Credit Card\", \"Bank Transfer\")."
                },
                "payment_method": {
                    "type": "string",
                    "description": "Specifies the method of payment for the payment type. This string parameter must be one of the following accepted values: \"Direct Deposit\", \"Check\", \"EFT\", \"Cash\", \"Credit Card\", \"Wire\", \"Manual\", \"Direct Debit\", \"PayPal\", or \"EFT with Reference\"."
                },
                "external_id": {
                    "type": "string",
                    "description": "An optional external identifier for the payment type, limited to a maximum of 255 characters."
                }
            },
            "required": [
                "name",
                "payment_method"
            ]
        }
    },
    {
        "name": "create_project",
        "description": "Creates a new project based on the specified attributes.",
        "parameters": {
            "type": "object",
            "properties": {
                "project_data": {
                    "type": "object",
                    "properties": {
                        "type_id": {
                            "type": "string",
                            "description": "Specifies the type of object, which defaults to `projects`."
                        },
                        "id": {
                            "type": "string",
                            "description": "A unique string used to identify the project."
                        },
                        "external_id": {
                            "type": "string",
                            "description": "A string that serves as an external identifier for the project, used to link it to a record in another system."
                        },
                        "supplier_companies": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {}
                            },
                            "description": "An array of objects, where each object represents a supplier company."
                        },
                        "supplier_contacts": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {}
                            },
                            "description": "An array of objects, where each object contains the contact information for a supplier."
                        },
                        "status": {
                            "type": "string",
                            "description": "Specifies the current status of the project."
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The mandatory name of the project."
                                },
                                "description": {
                                    "type": "string",
                                    "description": "A text description providing details about the project."
                                },
                                "state": {
                                    "type": "string",
                                    "description": "The current state of the project. This must be one of the following string values: `draft`, `requested`, `planned`, `active`, `completed`, `canceled`, or `on_hold`."
                                },
                                "target_start_date": {
                                    "type": "object",
                                    "description": "The planned or intended start date for the project."
                                },
                                "target_end_date": {
                                    "type": "object",
                                    "description": "The target date for the project's completion."
                                },
                                "actual_spend_amount": {
                                    "type": "number",
                                    "description": "The actual amount of money spent on the project."
                                },
                                "approved_spend_amount": {
                                    "type": "number",
                                    "description": "The total monetary amount that has been approved for spending on the project."
                                },
                                "estimated_savings_amount": {
                                    "type": "number",
                                    "description": "An estimate of the savings amount attributed to the project."
                                },
                                "estimated_spend_amount": {
                                    "type": "number",
                                    "description": "The estimated total amount of money expected to be spent on the project."
                                },
                                "canceled_note": {
                                    "type": "string",
                                    "description": "A note providing the reason for the project's cancellation."
                                },
                                "canceled_reason": {
                                    "type": "string",
                                    "description": "A descriptive reason explaining why the project was canceled."
                                },
                                "on_hold_note": {
                                    "type": "string",
                                    "description": "A note explaining the reason a project is on hold."
                                },
                                "on_hold_reason": {
                                    "type": "string",
                                    "description": "The reason for placing the project in an on-hold status."
                                },
                                "needs_attention": {
                                    "type": "boolean",
                                    "description": "A status indicating if the project requires attention."
                                },
                                "marked_as_needs_attention_at": {
                                    "type": "object",
                                    "description": "A timestamp indicating the date and time when the project was marked as requiring attention."
                                },
                                "needs_attention_note": {
                                    "type": "string",
                                    "description": "A note that provides the reason why the project requires attention."
                                },
                                "needs_attention_reason": {
                                    "type": "string",
                                    "description": "A description explaining why the project is flagged as requiring special attention."
                                }
                            },
                            "description": "An object containing the attributes for the project.",
                            "required": [
                                "actual_spend_amount",
                                "approved_spend_amount",
                                "description",
                                "estimated_savings_amount",
                                "estimated_spend_amount",
                                "name",
                                "needs_attention",
                                "state",
                                "target_end_date",
                                "target_start_date"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "properties": {
                                "attachments": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    },
                                    "description": "An array of objects, where each object represents an attachment to be associated with the project."
                                },
                                "creator": {
                                    "type": "object",
                                    "description": "An object that identifies the stakeholder who is the creator of the project."
                                },
                                "requester": {
                                    "type": "object",
                                    "description": "An object that identifies the stakeholder requesting the project."
                                },
                                "owner": {
                                    "type": "object",
                                    "description": "An object that identifies the stakeholder who owns the project."
                                },
                                "project_type": {
                                    "type": "object",
                                    "description": "A relationship object that links the project to its designated type."
                                }
                            },
                            "description": "An object containing the relationships between the project and other resources.",
                            "required": [
                                "attachments",
                                "creator",
                                "owner",
                                "project_type",
                                "requester"
                            ]
                        }
                    },
                    "description": "A dictionary containing project attributes. This dictionary must include an `attributes` key, which requires at least a `name`. If an `id` key is not provided, a new unique ID will be generated automatically.",
                    "required": [
                        "attributes",
                        "external_id",
                        "id",
                        "relationships",
                        "status",
                        "supplier_companies",
                        "supplier_contacts",
                        "type_id"
                    ]
                }
            },
            "required": [
                "project_data"
            ]
        }
    },
    {
        "name": "create_scim_user",
        "description": "Creates a new user with the specified attributes. This SCIM-compliant operation requires a payload defining the user details and supports external identifiers for integration with client systems.",
        "parameters": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "externalId": {
                            "type": "string",
                            "description": "An optional, client-assigned unique identifier."
                        },
                        "userName": {
                            "type": "string",
                            "description": "The required email address of the user."
                        },
                        "name": {
                            "type": "object",
                            "properties": {
                                "givenName": {
                                    "type": "string",
                                    "description": "The required first name of the user, provided as a string."
                                },
                                "familyName": {
                                    "type": "string",
                                    "description": "The last name of the user, provided as a string."
                                }
                            },
                            "description": "A required object that defines the user's full name. It must be a dictionary containing `givenName` for the first name and `familyName` for the last name.",
                            "required": [
                                "familyName",
                                "givenName"
                            ]
                        },
                        "active": {
                            "type": "boolean",
                            "description": "Indicates whether the user account is active. This optional parameter accepts a boolean value."
                        },
                        "roles": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Optional. A list of strings representing roles assigned to the user."
                        },
                        "meta": {
                            "type": "object",
                            "properties": {},
                            "description": "An optional dictionary containing metadata about the user."
                        }
                    },
                    "description": "The user resource to create, structured according to the SCIM User schema. This object requires `userName` (the user's email address) and a `name` object (containing `givenName` and `familyName`). Optional fields include `externalId`, `active` (user account status), `roles`, and `meta`.",
                    "required": [
                        "active",
                        "externalId",
                        "meta",
                        "name",
                        "roles",
                        "userName"
                    ]
                }
            },
            "required": [
                "body"
            ]
        }
    },
    {
        "name": "create_spend_category",
        "description": "Creates a new spend category with specified attributes. Spend categories classify spend for procurement, expense, ad-hoc payment, or supplier invoice use cases. Only categories with \"procurement\" usage can be used in requisitions.",
        "parameters": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The required string that specifies the name of the spend category."
                },
                "external_id": {
                    "type": "string",
                    "description": "An external identifier for the category, limited to a maximum of 255 characters."
                },
                "usages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list specifying the applicable usage contexts for the spend category. Allowed values include \"procurement\", \"expense\", \"ad_hoc_payment\", and \"supplier_invoice\"."
                }
            },
            "required": [
                "name"
            ]
        }
    },
    {
        "name": "create_supplier_company",
        "description": "Creates a new supplier company with specified attributes, linked resources, and optional custom fields. To define relationships, you can reference resources using an `external_` prefix for external IDs. Use the `include` parameter to return the new company along with its related resources in a single response.",
        "parameters": {
            "type": "object",
            "properties": {
                "_include": {
                    "type": "string",
                    "description": "Specifies related resources to include in the response as a comma-separated string. Allowed values are `attachments`, `supplier_category`, `supplier_groups`, `default_payment_term`, `payment_types`, `default_payment_type`, `payment_currencies`, `default_payment_currency`, and `supplier_classification_values`."
                },
                "body": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "The type of resource, which must be the string `supplier_companies`."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "An object containing the attributes for the supplier company.",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The required name of the supplier's company."
                                },
                                "description": {
                                    "type": "string",
                                    "description": "An optional description providing details about the company."
                                },
                                "public": {
                                    "type": "boolean",
                                    "description": "Optional. A boolean value that specifies whether the company is public."
                                },
                                "risk": {
                                    "type": "string",
                                    "description": "An optional slug that represents the risk classification."
                                },
                                "segmentation": {
                                    "type": "string",
                                    "description": "An optional segmentation type, provided as a slug."
                                },
                                "segmentation_status": {
                                    "type": "string",
                                    "description": "An optional slug that represents the segmentation status."
                                },
                                "segmentation_notes": {
                                    "type": "string",
                                    "description": "Optional notes for classifying or grouping the supplier."
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "An optional collection of tags for categorizing or labeling the supplier company."
                                },
                                "url": {
                                    "type": "string",
                                    "description": "The optional URL of the supplier's website."
                                },
                                "duns_number": {
                                    "type": "string",
                                    "description": "An optional D-U-N-S® number used to identify the company."
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "An optional identifier for internal use."
                                },
                                "self_registered": {
                                    "type": "boolean",
                                    "description": "Indicates whether the supplier self-registered. This field is optional."
                                },
                                "onboarding_form_completion_status": {
                                    "type": "string",
                                    "description": "An optional field specifying the completion status of the onboarding form. The value must be one of the following: `null`, `\"not_started\"`, `\"in_progress\"`, or `\"completed\"`."
                                },
                                "accept_all_currencies": {
                                    "type": "boolean",
                                    "description": "An optional flag that specifies whether the supplier company accepts all currencies."
                                },
                                "custom_fields": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Field name."
                                            },
                                            "value": {
                                                "type": "object",
                                                "description": "Field value."
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "value"
                                        ]
                                    },
                                    "description": "An optional array of custom fields."
                                }
                            },
                            "required": [
                                "accept_all_currencies",
                                "custom_fields",
                                "description",
                                "duns_number",
                                "external_id",
                                "name",
                                "onboarding_form_completion_status",
                                "public",
                                "risk",
                                "segmentation",
                                "segmentation_notes",
                                "segmentation_status",
                                "self_registered",
                                "tags",
                                "url"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "properties": {},
                            "description": "An optional object that links the supplier company to related resources. The valid relationship keys are `supplier_category`, `supplier_groups`, `default_payment_term`, `payment_types`, `default_payment_type`, `payment_currencies`, `default_payment_currency`, `attachments`, and `supplier_classification_values`."
                        }
                    },
                    "description": "An object containing the properties and information required to create a new supplier company.",
                    "required": [
                        "attributes",
                        "relationships",
                        "type"
                    ]
                }
            }
        }
    },
    {
        "name": "create_supplier_company_segmentation",
        "description": "Creates a new segmentation category to organize supplier companies. This category is defined by a label, a display order, and an optional slug for programmatic reference.",
        "parameters": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "object",
                    "properties": {
                        "label": {
                            "type": "string",
                            "description": "A required display label for the segmentation. The label must not exceed 255 characters."
                        },
                        "order": {
                            "type": "integer",
                            "description": "Required. A numerical index that specifies the display order for this item in a user interface."
                        },
                        "slug": {
                            "type": "string",
                            "description": "An optional programmatic identifier with a maximum length of 255 characters."
                        }
                    },
                    "description": "A data payload that defines the details for the segmentation.",
                    "required": [
                        "label",
                        "order"
                    ]
                }
            }
        }
    },
    {
        "name": "create_supplier_contact",
        "description": "Creates a new supplier contact and links it to an existing supplier company by its ID or external ID. This function also supports assigning contact types and a phone reference. The full created contact object, with all relationships resolved, is returned in the response.",
        "parameters": {
            "type": "object",
            "properties": {
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of related resources to include in the response. The allowed values are `supplier_company`, `contact_types`, and `phones`."
                },
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "object",
                            "properties": {},
                            "description": ""
                        },
                        "type": {
                            "type": "string",
                            "description": "A required field that specifies the resource type, which must be set to \"supplier_contacts\"."
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The contact's full name, with a maximum length of 255 characters. This parameter is required unless both `first_name` and `last_name` are provided."
                                },
                                "first_name": {
                                    "type": "string",
                                    "description": "The first name of the supplier contact, with a maximum length of 255 characters."
                                },
                                "last_name": {
                                    "type": "string",
                                    "description": "The contact's last name, which must not exceed 255 characters."
                                },
                                "email": {
                                    "type": "string",
                                    "description": "Required. The contact's email address, which cannot exceed 255 characters."
                                },
                                "notes": {
                                    "type": "string",
                                    "description": "Any additional notes or comments about the contact."
                                },
                                "phone_number": {
                                    "type": "string",
                                    "description": "This property is deprecated and should no longer be used. Use the `phones` relationship to manage phone numbers instead."
                                },
                                "job_title": {
                                    "type": "string",
                                    "description": "The job title of the contact."
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "An identifier from an external system used to reference the supplier contact."
                                },
                                "is_suggested": {
                                    "type": "boolean",
                                    "description": "Indicates that the contact has been suggested but is not yet approved."
                                }
                            },
                            "description": "",
                            "required": [
                                "email",
                                "name"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "properties": {
                                "supplier_company": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "description": "A unique identifier for the supplier company. This can be either the internal system ID or an external ID."
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "description": "The type of the related resource, which must be `supplier_companies`."
                                                }
                                            },
                                            "description": "",
                                            "required": [
                                                "id",
                                                "type"
                                            ]
                                        }
                                    },
                                    "description": "A required relationship that links to the supplier company.",
                                    "required": [
                                        "data"
                                    ]
                                },
                                "contact_types": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "Contact type ID."
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": "Must be \"contact_types\"."
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "type"
                                                ]
                                            },
                                            "description": ""
                                        }
                                    },
                                    "description": "",
                                    "required": [
                                        "data"
                                    ]
                                },
                                "phones": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "description": "Phone ID."
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": "Must be \"phones\"."
                                                    }
                                                },
                                                "required": [
                                                    "id",
                                                    "type"
                                                ]
                                            },
                                            "description": "A list containing a maximum of one resource identifier for the phone associated with this contact."
                                        }
                                    },
                                    "description": "",
                                    "required": [
                                        "data"
                                    ]
                                }
                            },
                            "description": "",
                            "required": [
                                "supplier_company"
                            ]
                        }
                    },
                    "description": "A data object containing the details required to create a new supplier contact.",
                    "required": [
                        "attributes",
                        "data",
                        "relationships",
                        "type"
                    ]
                }
            }
        }
    },
    {
        "name": "deactivate_scim_user_by_id",
        "description": "Deactivates a user identified by their unique identifier, marking them as inactive. Logic for preventing self-deactivation (resulting in a 403 error) and handling non-existent users (404 error) is managed by the broader system.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique SCIM user identifier for the user to be deactivated. This parameter must be a string."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_attachment_by_external_id",
        "description": "Deletes an attachment identified by its external ID. The `external_id` parameter must be a string.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The string representing the external identifier of the attachment to be deleted."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_attachment_by_id",
        "description": "Deletes an attachment identified by its internal integer ID. Returns `True` upon successful deletion or `False` if the attachment is not found.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal ID of the attachment to be deleted."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_contact_type_by_external_id",
        "description": "Deletes a contact type from the system using its external ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "A unique string used as an external identifier for the specific contact type to be deleted."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_contact_type_by_id",
        "description": "Deletes a contact type from the system. The deletion is performed using the contact type's unique internal identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A unique, internal integer identifier for the contact type to be deleted."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_contract_by_external_id",
        "description": "Deletes a contract using its external ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The external identifier of the contract to be deleted. This parameter expects a string value."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_contract_by_id",
        "description": "Deletes a contract using its internal integer ID. Raises a `KeyError` if no contract exists with the specified ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal identifier for the contract to be deleted."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_contract_type_by_external_id",
        "description": "Deletes a contract type by its external ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The external identifier (string) of the contract type to be deleted."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_contract_type_by_id",
        "description": "Deletes a contract type using its unique internal integer identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "An integer representing the internal identifier of the contract type to delete."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_event_by_id",
        "description": "Delete an event by its unique identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique integer identifier for the event to delete."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_event_worksheet_line_item_by_id",
        "description": "Deletes a specific line item from the system. The line item is identified by its unique ID and must belong to the specified event and worksheet for successful deletion. It returns `True` upon success, or `False` if the line item does not exist or does not match the provided event and worksheet identifiers.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the event to which the line item belongs."
                },
                "worksheet_id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the worksheet to which the line item belongs."
                },
                "id": {
                    "type": "integer",
                    "description": "The unique identifier for the line item to be deleted."
                }
            },
            "required": [
                "event_id",
                "id",
                "worksheet_id"
            ]
        }
    },
    {
        "name": "delete_field_by_external_id",
        "description": "Deletes a specific field from the system identified by its string external ID. The function searches through all fields to find a match for the provided external ID before performing the deletion.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "Specifies the external identifier for the field to be deleted."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_field_by_id",
        "description": "Deletes a field using its internal identifier, which can be either an integer or a string. Returns `True` if the field is successfully deleted, or `False` if the field does not exist.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal identifier of the field to delete. This parameter accepts either an integer or a string value."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_field_group_by_id",
        "description": "Deletes a specific field group from the system using its unique string identifier. Returns `True` if the field group is successfully deleted, and `False` if the field group does not exist or the provided ID format is invalid.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "A string representing the unique identifier of the field group to delete."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_field_options_by_id",
        "description": "Deletes a field option from the system using its unique identifier. The operation returns true upon successful deletion, or false if the field option does not exist or the provided ID format is invalid.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique string identifier for the field option to delete."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_payment_currency_by_external_id",
        "description": "Deletes a payment currency using its external identifier. It returns `True` if the currency was successfully deleted or did not exist, and `False` if the operation failed.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "A string representing the external identifier of the currency to be deleted."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_payment_currency_by_id",
        "description": "Deletes a payment currency using its internal integer identifier. Returns `True` if the currency was deleted or did not exist, `False` otherwise.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal integer identifier of the currency to delete."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_payment_term_by_external_id",
        "description": "Deletes a payment term using its external string identifier. The function returns `True` if the payment term was deleted or did not exist, and `False` if the operation failed.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The string representing the external identifier of the payment term to be deleted."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_payment_term_by_id",
        "description": "Deletes a payment term using its internal integer identifier. Returns `True` if the term was deleted or did not exist, or `False` if the operation failed.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The integer representing the internal identifier of the payment term to delete."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_payment_type_by_external_id",
        "description": "Deletes a payment type using its external identifier. The function returns `True` if the payment type was successfully deleted or did not exist, and `False` if the deletion operation failed.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "A string representing the external identifier of the payment type to be deleted."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_payment_type_by_id",
        "description": "Deletes a payment type by its internal integer identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The integer representing the internal identifier of the payment type to be deleted."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_project_by_external_id",
        "description": "Deletes a project identified by its unique external identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "A unique identifier for a project. This external identifier is used to specify which project to delete."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_project_by_id",
        "description": "Deletes a project using its unique internal integer identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Specifies the unique internal identifier of the project to be deleted."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_spend_category_by_external_id",
        "description": "Deletes an existing spend category using its internal identifier. The internal ID must match the one provided in the URL path.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal integer identifier for the spend category to be deleted. This ID must match the one provided in the URL path."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_spend_category_by_id",
        "description": "Deletes an existing spend category using its unique identifier. This identifier must precisely match the one returned during category creation, as the operation is irreversible and permanently removes the category.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "A unique string identifier for the spend category to delete. This ID must match the one returned during spend category creation."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_supplier_company_by_external_id",
        "description": "Deletes a supplier company using its external identifier. This operation permanently removes the specified company, requiring the exact external ID assigned during its creation, such as \"1234-5678-abcd-efgh\".",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The required external ID of the supplier company to delete. For example, use a string like `1234-5678-abcd-efgh`."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_supplier_company_by_id",
        "description": "Deletes a supplier company by its unique identifier. This operation permanently removes the supplier company record from the system; you must provide the specific ID that was returned upon its creation.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A required, unique integer identifier for a Supplier Company, such as `1`."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "delete_supplier_company_contact_by_id",
        "description": "Deletes a supplier company contact from the system. This function uses both the company ID and contact ID to uniquely identify the contact for removal.",
        "parameters": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the supplier company. This is the internal ID used by the system to reference the company."
                },
                "contact_id": {
                    "type": "integer",
                    "description": "The unique integer identifier for the contact. This internal ID is used by the system to reference a specific contact."
                }
            },
            "required": [
                "company_id",
                "contact_id"
            ]
        }
    },
    {
        "name": "delete_supplier_contact_by_external_id",
        "description": "Permanently deletes a supplier contact from the system. The contact is identified by its unique `external_id`, which is a required string parameter (e.g., `CNT-17`).",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The required, unique external identifier for the supplier contact, such as \"CNT-17\"."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "delete_supplier_contact_by_id",
        "description": "Deletes a supplier contact from the system. It permanently removes the specified contact using its unique identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A required, unique integer identifier for the supplier contact to be deleted."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "describe_bid_fields",
        "description": "Returns a list of field names available for bid objects. These fields are derived from the first bid object found in the database, assuming all bid objects share the same schema structure.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "describe_bid_line_items_fields",
        "description": "Retrieves a comprehensive list of all fields that can be present in bid line item objects. Each field name is returned as a string within the list.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "describe_supplier_company_fields",
        "description": "Returns a list of field names for the Supplier Company resource. This metadata helps understand the available fields for supplier company data. The function returns a tuple containing the list of field names (strings) and an HTTP status code.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_attachment_by_external_id",
        "description": "Retrieve a specific attachment by its external ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The external ID used to retrieve a specific attachment. This string identifier has a maximum length of 255 characters."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "get_attachment_by_id",
        "description": "Retrieve a specific attachment using its internal ID. If found, the function returns the attachment as a dictionary containing relevant details like its name, type, and associated attributes. Otherwise, it returns None.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal identifier of the attachment to be retrieved."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_award_line_item_by_id",
        "description": "Retrieve details of a specific award line item using its unique identifier. Optionally, include related resources like \"supplier_company\" or \"worksheet\" by specifying them in the `_include` parameter.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique string identifier of the award line item to retrieve."
                },
                "_include": {
                    "type": "string",
                    "description": "Requests related resources to be returned along with the primary resource. Supported values are \"supplier_company\" and \"worksheet\"."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_bid_by_id",
        "description": "Retrieve the details of an existing bid. Supply the unique bid identifier, which was returned upon bid creation, to specify the bid.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique internal identifier for the bid to retrieve, which is typically returned upon bid creation and must be a positive integer."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated string to specify additional related data to include in the response. Common options include 'event' to include associated event details or 'supplier_company' for supplier information. This parameter defaults to None."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_bid_line_item_by_id",
        "description": "Retrieves the complete details of an existing bid line item. This function locates the item using its unique identifier and returns its details if found.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique integer identifier for the bid line item to retrieve."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_contract_award_by_id",
        "description": "Retrieves comprehensive information for a specific contract award, including all its associated data, configurations, and metrics.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique internal integer identifier for the award to retrieve."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_contract_award_line_item_by_id",
        "description": "Retrieves comprehensive information about a specific contract award line item. This includes all its associated data, configurations, and relevant metrics, providing complete visibility.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "A unique string identifier for the award line item to retrieve."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_contract_by_external_id",
        "description": "Retrieve details of a specific contract using its unique external ID. Optionally, include related entities in the response by providing a comma-separated list of relationships, such as \"contract_type\" or \"supplier_company\".",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "Specifies the external identifier (string) for the contract to be retrieved."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list specifying relationships to include in the response. Supported values include 'contract_type', 'spend_category', 'supplier_company', 'docusign_envelopes', and 'adobe_sign_agreements'."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "get_contract_by_id",
        "description": "Retrieves details for a specific contract using its internal ID. Optionally, specify a comma-separated list of relationships to include in the response, such as 'contract_type' or 'supplier_company'.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The integer representing the internal identifier of the contract to retrieve."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list specifying relationships to include in the response. Supported values are `contract_type`, `spend_category`, `supplier_company`, `docusign_envelopes`, and `adobe_sign_agreements`."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_contract_fields_description",
        "description": "Retrieve a list of all available field names for the contract object.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_contract_milestone_report_schema",
        "description": "Retrieves the contract milestone report schema. This schema defines the structure and expected data types for each field in a contract milestone report entry, and is used for dynamically generating forms, validating input, or formatting report data.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_contract_report_entries",
        "description": "Retrieves all available contract report entries, which are aggregated data related to contract performance, values, timelines, or milestones. Each entry in the returned list is a dictionary containing an `id`, `contract_id`, and `summary`.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_contract_report_schema",
        "description": "Retrieves the schema definition for contract report entries. The schema outlines available fields as a list of objects, each detailing the field's `name` and `type` (e.g., \"text\", \"date\", \"integer\", \"select\", \"string\"). This information aids in dynamically interpreting contract data for UIs and integrations.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_contract_type_by_external_id",
        "description": "Retrieves details of a specific contract type by its external ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "An external string identifier used to specify the contract type for retrieval."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "get_contract_type_by_id",
        "description": "Retrieves details of a specific contract type using its internal integer identifier. The function returns a dictionary containing the contract type's `type`, `id`, `name`, and `external_id`. A `KeyError` is raised if no contract type is found for the specified ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal identifier (ID) of the contract type to retrieve. This parameter must be an integer."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_event_by_id",
        "description": "Retrieve details of a specific event using its unique identifier. Returns the event object if found, or None otherwise.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the event to retrieve."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_event_report_entries_by_report_id",
        "description": "Retrieves a paginated list of detailed event report entries for a specific event report, identified by its `event_report_id`.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_report_id": {
                    "type": "integer",
                    "description": "An integer that uniquely identifies the event report from which to retrieve entries."
                }
            },
            "required": [
                "event_report_id"
            ]
        }
    },
    {
        "name": "get_event_report_schema",
        "description": "Retrieves the schema definition for event report entries. This schema provides metadata for the available fields, presented as a list detailing each field's name and data type, enabling dynamic interpretation and rendering of event report data.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_event_template_by_id",
        "description": "Retrieves the details of an existing event template. It requires a unique integer ID and returns the template details as a dictionary, or `None` if no template exists with the given ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique internal integer identifier of the event template to retrieve."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_event_worksheet_by_id",
        "description": "Retrieves the details of an existing worksheet. Provide the unique worksheet identifier that was returned upon worksheet creation.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "The unique integer identifier for the event associated with the worksheet."
                },
                "id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the worksheet to retrieve."
                }
            },
            "required": [
                "event_id",
                "id"
            ]
        }
    },
    {
        "name": "get_event_worksheet_line_item_by_id",
        "description": "Retrieve the details of an existing line item. Supply the unique line item identifier that was returned upon line item creation.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "The unique identifier of the event to which the line item belongs."
                },
                "worksheet_id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the worksheet to which the line item belongs."
                },
                "id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the line item to retrieve."
                }
            },
            "required": [
                "event_id",
                "id",
                "worksheet_id"
            ]
        }
    },
    {
        "name": "get_field_by_external_id",
        "description": "Retrieves the complete details of a specific field, identified by its external identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "A string representing the external identifier of the field to retrieve."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "get_field_details_by_id",
        "description": "Retrieves the details of an existing field using its internal identifier. The `id` parameter accepts either an integer or a string. This function returns the full field object as a dictionary if found, or `None` if the field does not exist.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal identifier of the field to retrieve, which can be provided as either an integer or a string."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_field_group_by_id",
        "description": "Retrieves the complete details of a specific field group using its unique identifier. The function supports both string and integer ID formats for the identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique identifier for the field group to retrieve. This parameter supports both string and integer ID formats."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_performance_review_answer_report_schema",
        "description": "Retrieves the schema for performance review answer reports. This schema outlines the structure of performance review answers returned by the API. It is structured to include `data` and `attributes` keys, where `attributes` contains a `fields` list detailing each answer entry's structure with its human-readable `name` and its `type` (e.g., 'text', 'date', 'integer', 'select', 'string').",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_performance_review_report_schema",
        "description": "Retrieves the schema that defines the structure of performance review report entries, including field types and names. This schema is structured with \"id\" and \"type\" fields fixed to \"performance_review_schemas\", and includes an \"attributes.fields\" list where each field definition specifies its name and data type (e.g., \"text\", \"date\", \"integer\", \"select\", or \"string\"). It is useful for dynamically building forms, validating input, or rendering reports.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_project_by_external_id",
        "description": "Retrieves the details of a specific project using its unique external identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "A unique external identifier for the project. This parameter is used to retrieve the specific project."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "get_project_details_by_id",
        "description": "Retrieves the details of a specific project. It identifies the project using its unique internal identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "An integer representing the unique internal identifier of the project to retrieve."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_project_fields_description",
        "description": "Retrieves a list of all available fields for project objects. This list of strings is derived from the fields present in an example project from the database, and an empty list is returned if no projects exist.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_project_milestone_report_schema",
        "description": "Retrieves the schema definition for project milestone reports. This schema provides metadata describing available fields, each structured with a `name` and a `type` from a predefined set, such as \"text\", \"date\", or \"integer\".",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_project_report_entries_by_id",
        "description": "Retrieves a list of report entries for a specified project report. It accepts an optional `project_report_id` (an integer unique identifier) to scope results to a particular report, available in API versions 2019-01-01 and later.",
        "parameters": {
            "type": "object",
            "properties": {
                "project_report_id": {
                    "type": "integer",
                    "description": "The unique integer identifier for a project report. Use this to scope the retrieval of report entries to the specified report."
                }
            },
            "required": [
                "project_report_id"
            ]
        }
    },
    {
        "name": "get_project_report_schema",
        "description": "Retrieves the schema definition for project report entries. The schema provides metadata about the fields used in project reports, including their names and data types.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_project_type_by_id",
        "description": "Retrieves detailed information for a specific project type, identified by its unique integer ID. If found, the function returns a dictionary that includes the project type's unique ID, its full name and 4-character shortcode within an 'attributes' dictionary, and a 'type' field set to 'project_types'; otherwise, it returns None.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A unique integer identifier for the project type."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_savings_report_schema",
        "description": "Retrieves the schema definition for the savings report. This schema provides a list of fields and their types, which is essential for understanding the expected structure and available data fields in savings report entries.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_scim_resource_type_by_name",
        "description": "Retrieves metadata for a specific SCIM resource type. It provides the schema, endpoint path, and supported extensions, representing a focused subset of information from the general `/ResourceTypes` endpoint for a single resource.",
        "parameters": {
            "type": "object",
            "properties": {
                "resource": {
                    "type": "string",
                    "description": "The name of the SCIM resource type, such as \"User\"."
                }
            },
            "required": [
                "resource"
            ]
        }
    },
    {
        "name": "get_scim_resource_type_metadata_by_name",
        "description": "Retrieves metadata for a specific SCIM resource type, such as \"User\". It provides the schema, endpoint path, and any supported extensions, offering a focused subset of information from the general `/ResourceTypes` endpoint.",
        "parameters": {
            "type": "object",
            "properties": {
                "resource": {
                    "type": "string",
                    "description": "The name of the SCIM resource type, for example, 'User'."
                }
            },
            "required": [
                "resource"
            ]
        }
    },
    {
        "name": "get_scim_schema_by_uri",
        "description": "Retrieves a specific SCIM schema using its URI. This schema defines the structure and metadata for a SCIM resource type, such as `User` or `Group`, including all its attributes and constraints.",
        "parameters": {
            "type": "object",
            "properties": {
                "uri": {
                    "type": "string",
                    "description": "A Schema URI that identifies the SCIM resource type. For example, it follows the format \"urn:ietf:params:scim:schemas:core:2.0:User\"."
                }
            },
            "required": [
                "uri"
            ]
        }
    },
    {
        "name": "get_scim_service_provider_config",
        "description": "Retrieves the SCIM service provider configuration, detailing its supported features and capabilities. This configuration provides metadata about the SCIM implementation, including patch, filter, bulk, and authentication schemes, as specified in Section 5 of RFC 7643.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_scim_user_by_id",
        "description": "Retrieves the details of a single user using their SCIM resource ID. This function conforms to SCIM 2.0 RFC 7644 Section 3.4.1, returning user metadata, core attributes, and optional related roles or identifiers.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Specifies the unique SCIM identifier of the user to retrieve."
                },
                "attributes": {
                    "type": "string",
                    "description": "An optional comma-separated list of attributes to include in the response. Only the following attributes are allowed: \"userName\", \"name.familyName\", \"name.givenName\", \"roles\", \"roles.value\", \"externalId\", \"active\", \"meta.lastModified\", and \"meta.created\"."
                },
                "filter": {
                    "type": "string",
                    "description": "An optional parameter intended to filter user search results. This filter is currently not implemented."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_spend_category_by_id",
        "description": "Retrieves the details of a specific spend category by its unique identifier. Spend categories classify various types of organizational spend, such as procurement, expenses, and supplier invoices.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "A unique string identifier for the spend category."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "get_spend_category_details_by_external_id",
        "description": "Retrieves the details of an existing spend category using its unique internal identifier. This identifier is primarily used for direct referencing of spend categories in internal operations.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal integer identifier for the spend category."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_supplier_by_id",
        "description": "Retrieves details for an existing supplier company by its unique integer ID. This function returns the supplier object if found, or None if not.",
        "parameters": {
            "type": "object",
            "properties": {
                "supplier_id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the supplier company to retrieve."
                }
            },
            "required": [
                "supplier_id"
            ]
        }
    },
    {
        "name": "get_supplier_company_by_external_id",
        "description": "Retrieve a supplier company by its unique external identifier. Optionally include related resources by specifying them as a comma-separated list via the `include` query parameter.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "A required string representing the external identifier of the supplier company. For example: `1234-5678-abcd-efgh`."
                },
                "_include": {
                    "type": "string",
                    "description": "Specifies related resources to include in the response. Provide a comma-separated list of desired resources, choosing from `attachments`, `supplier_category`, `supplier_groups`, `default_payment_term`, `payment_types`, `default_payment_type`, `payment_currencies`, `default_payment_currency`, or `supplier_classification_values`."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "get_supplier_company_by_id",
        "description": "Retrieves all metadata and linked relationships for an existing supplier company using its unique identifier. Related resources can optionally be included by providing a comma-separated list of allowed values for the `_include` parameter.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "A required, unique integer identifier for the supplier company. For example, use `1`."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of related resources to include with the supplier company details. Allowed values are \"attachments\", \"supplier_category\", \"supplier_groups\", \"default_payment_term\", \"payment_types\", \"default_payment_type\", \"payment_currencies\", \"default_payment_currency\", and \"supplier_classification_values\"."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_supplier_company_contact_by_id",
        "description": "Retrieves the complete details of an existing supplier company contact. The function locates the contact using the provided company ID and contact ID, optionally including related resources specified as a comma-separated list.",
        "parameters": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer",
                    "description": "The unique identifier for the supplier company. This internal ID is used by the system to reference the company."
                },
                "contact_id": {
                    "type": "integer",
                    "description": "The unique, internal identifier used by the system to reference a specific contact."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list specifying related resources to include in the response. Note that this feature is not fully implemented in the simulation environment."
                }
            },
            "required": [
                "company_id",
                "contact_id"
            ]
        }
    },
    {
        "name": "get_supplier_company_contacts_by_external_id",
        "description": "Retrieves contacts associated with a supplier company using its external identifier, which must precisely match the one used during company creation. Optionally, filter the retrieved contacts based on additional criteria.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "A required external identifier for the supplier company, exemplified by \"COMP-001\"."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list specifying related resources to include. Note that this feature is not yet fully implemented."
                },
                "filter": {
                    "type": "object",
                    "properties": {},
                    "description": "An optional dictionary that specifies criteria to filter contacts. Each key-value pair within the dictionary is used to apply a corresponding filter."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "get_supplier_contact_by_external_id",
        "description": "Retrieves the full resource representation of an existing supplier contact, identified by its unique external ID. Optionally, include related entities such as `supplier_company`, `contact_types`, or `phones` by providing a comma-separated list.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "A required, unique external identifier for the supplier contact. For example: `CNT-17`."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of related resources to include in the response. Allowed values are \"supplier_company\", \"contact_types\", and \"phones\"."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "get_supplier_contact_by_id",
        "description": "Retrieves the full details of an existing supplier contact by ID. The response includes contact attributes and can optionally include related resources, such as contact types, phones, and the linked supplier company, specified as a comma-separated list.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The required, unique integer identifier for the supplier contact."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of related resources to include in the response. Allowed values are \"supplier_company\", \"contact_types\", and \"phones\"."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "get_supplier_report_schema",
        "description": "Retrieves the schema definition for supplier reports. This schema describes how report entries are structured, providing details such as field names, types (e.g., \"text\", \"date\", \"integer\"), and metadata within a structured dictionary format.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "get_supplier_review_report_schema",
        "description": "Returns the schema definition for supplier review reports. This schema describes the structure of review report entries, detailing the name and type of each field, where field types can be 'text', 'date', 'integer', 'select', or 'string'.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_all_attachments_with_filter",
        "description": "Returns a filtered list of attachments. Filtering is applied using the `filter_id_equals` parameter, which accepts a comma-separated string of attachment IDs. If no IDs are provided, all attachments are returned, with the result limited to a maximum of 50 attachments.",
        "parameters": {
            "type": "object",
            "properties": {
                "filter_id_equals": {
                    "type": "string",
                    "description": "A comma-separated string of attachment IDs used to filter the results. If not specified (defaults to None), all available attachments are returned up to the system limit."
                }
            }
        }
    },
    {
        "name": "list_all_bid_line_items",
        "description": "Returns a list of all bid line items, which can be optionally filtered. Provide a dictionary containing `field:value` pairs to specify exact matching criteria, for example: `{'bid_id': 123, 'status': 'active'}`.",
        "parameters": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "object",
                    "description": "A dictionary containing field-value pairs to filter bid line items. Each key represents a field name, and its corresponding value is the exact, case-sensitive value to match, for example: `{\"bid_id\": 123, \"status\": \"active\"}`. Defaults to `None`, which returns all bid line items."
                }
            }
        }
    },
    {
        "name": "list_all_suppliers",
        "description": "Retrieves all available supplier companies without any filtering or pagination. The function returns a list where each supplier object includes its unique `id`, `name`, `industry`, and `contact_email`.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_attachments_by_ids",
        "description": "Retrieve a filtered list of attachments by providing their IDs. Specify attachment IDs as a comma-separated string. A maximum of 50 attachments are returned per request.",
        "parameters": {
            "type": "object",
            "properties": {
                "filter_id_equals": {
                    "type": "string",
                    "description": "A comma-separated string of attachment IDs used to filter results."
                }
            },
            "required": [
                "filter_id_equals"
            ]
        }
    },
    {
        "name": "list_award_line_items_for_award",
        "description": "Retrieve line items associated with a specific award. Results can be filtered by their quoted status or by specific line item types, including \"STANDARD\", \"GOODS\", or \"SERVICES\". Related resources, such as \"supplier_company\" or \"worksheet\", can also be optionally included.",
        "parameters": {
            "type": "object",
            "properties": {
                "award_id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the award for which to retrieve line items."
                },
                "filter_is_quoted_equals": {
                    "type": "boolean",
                    "description": "Filters line items based on their quoted status. Set to `True` to include only quoted items, or `False` to include only non-quoted items."
                },
                "filter_line_item_type_equals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of line item types used to filter the award line items. Valid types include \"STANDARD\", \"GOODS\", and \"SERVICES\"."
                },
                "_include": {
                    "type": "string",
                    "description": "Requests related resources to be returned alongside the primary resource. Supported values are \"supplier_company\" and \"worksheet\"."
                }
            },
            "required": [
                "award_id"
            ]
        }
    },
    {
        "name": "list_awards_with_filters",
        "description": "Retrieves a list of awards based on specified filter criteria. This function supports filtering awards by their state and update timestamps, and multiple filters can be combined to narrow down the results.",
        "parameters": {
            "type": "object",
            "properties": {
                "filter_state_equals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of states used to filter awards. Only the following states are valid: \"draft\", \"confirmed\", \"awaiting_requisition_sync\", and \"requisition_created\"."
                },
                "filter_updated_at_from": {
                    "type": "string",
                    "description": "A timestamp string used to filter awards, ensuring only those updated on or after this time are returned."
                },
                "filter_updated_at_to": {
                    "type": "string",
                    "description": "Specifies a timestamp to filter awards. Only awards updated on or before this timestamp will be included in the results."
                }
            }
        }
    },
    {
        "name": "list_bid_line_items_for_bid",
        "description": "Returns a list of all line items associated with a specific bid ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "bid_id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the bid for which to retrieve line items."
                }
            },
            "required": [
                "bid_id"
            ]
        }
    },
    {
        "name": "list_contact_types",
        "description": "Retrieves a list of all contact types available in the system. Each contact type is represented as a dictionary, including its `type` (always \"contact_types\"), `id`, `external_id` (max 255 characters), and `name` (max 255 characters). The function also returns the HTTP status code (200 for success).",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_contract_award_line_items",
        "description": "Retrieve all line items associated with a specific contract award, identified by its unique ID. Each line item is returned as a dictionary containing detailed information about the award's components, such as name, quantity, and price. An empty list is returned if no line items are found for the specified award.",
        "parameters": {
            "type": "object",
            "properties": {
                "award_id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the award used to retrieve its associated line items."
                }
            },
            "required": [
                "award_id"
            ]
        }
    },
    {
        "name": "list_contract_awards",
        "description": "Retrieves a list of all contract awards from the Workday Strategic Sourcing system. This function returns comprehensive information for each award, including their associated data and configurations.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_contract_milestone_report_entries",
        "description": "Retrieves a paginated list of contract milestone report entries. These entries, submitted under contract reports, include pagination links for navigating result sets and are used for tracking progress or performance milestones across contracts.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_contract_types",
        "description": "Retrieves a list of all available contract types. Each contract type is represented as a dictionary containing its `type` (always \"contract_types\"), `id`, `name`, `external_id`, and a `links` dictionary with a `self` key.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_contracts",
        "description": "Retrieve a list of contracts based on specified criteria. It supports filtering by any attribute of the contract object, including specified relationships (e.g., `contract_type`, `supplier_company`), and paginating results with a defined page size.",
        "parameters": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "object",
                    "description": "A dictionary containing filter criteria for contracts. It supports various filters for attributes like dates, numbers, text, and boolean flags. Filters can accept values as strings, booleans, integers, or floats, while specific filters such as `auto_renewal`, `state_equals`, or `spend_category_id_equals` require a list of strings or integers, respectively.",
                    "properties": {
                        "updated_at_from": {
                            "type": "string",
                            "description": "Filters contracts to include only those updated on or after the specified timestamp. The timestamp must be provided as a string."
                        },
                        "updated_at_to": {
                            "type": "string",
                            "description": "Filters contracts to include only those updated on or before the specified timestamp. This timestamp must be provided as a string."
                        },
                        "number_from": {
                            "type": "string",
                            "description": "Return contracts with a contract number greater than or equal to the specified value. This parameter expects a string representation of the number."
                        },
                        "number_to": {
                            "type": "string",
                            "description": "Returns contracts where the contract number is less than or equal to the specified string value, which must represent an integer."
                        },
                        "title_contains": {
                            "type": "string",
                            "description": "Filters contracts to include only those where the title contains the specified string."
                        },
                        "title_not_contains": {
                            "type": "string",
                            "description": "A filter to retrieve contracts where the title does not contain the specified string."
                        },
                        "description_contains": {
                            "type": "string",
                            "description": "Filters contracts to include only those whose description contains the specified string. Provide the string value to search for within the contract's description."
                        },
                        "description_not_contains": {
                            "type": "string",
                            "description": "Filters contracts, returning only those where the contract's description does not contain the specified string."
                        },
                        "external_id_empty": {
                            "type": "boolean",
                            "description": "A boolean parameter that, when set to `True`, filters the results to return only contracts where the `external_id` is blank."
                        },
                        "external_id_not_empty": {
                            "type": "boolean",
                            "description": "A boolean filter option that, when set to `true`, returns contracts with a non-blank external ID."
                        },
                        "external_id_equals": {
                            "type": "string",
                            "description": "Filters contracts to return only those with a specific external ID. This parameter accepts a string representing the exact external ID to match."
                        },
                        "external_id_not_equals": {
                            "type": "string",
                            "description": "Filters contracts by excluding those with a specific external ID. The external ID to exclude must be provided as a string."
                        },
                        "actual_start_date_from": {
                            "type": "string",
                            "description": "A string representing a date. Contracts with an actual start date on or after this specified date will be returned."
                        },
                        "actual_start_date_to": {
                            "type": "string",
                            "description": "Filters contracts to include only those with an `actual_start_date` on or before the specified date. The date must be provided as a string."
                        },
                        "actual_end_date_from": {
                            "type": "string",
                            "description": "Filters contracts to include only those with an `actual_end_date` on or after the specified date string."
                        },
                        "actual_end_date_to": {
                            "type": "string",
                            "description": "Filters contracts whose actual end date is on or before the specified date string."
                        },
                        "actual_spend_amount_from": {
                            "type": "number",
                            "description": "Filters contracts to include only those where the `actual_spend_amount` is greater than or equal to the specified float value."
                        },
                        "actual_spend_amount_to": {
                            "type": "number",
                            "description": "Filters contracts, returning only those where the actual spend amount is less than or equal to the provided value."
                        },
                        "auto_renewal": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Filters contracts based on their auto-renewal mode. This parameter accepts a list of strings, where each string must be \"yes\", \"no\", or \"evergreen\"."
                        },
                        "needs_attention_equals": {
                            "type": "boolean",
                            "description": "Filters contracts based on their 'needs attention' status. This parameter expects a boolean value."
                        },
                        "needs_attention_not_equals": {
                            "type": "boolean",
                            "description": "Filters contracts, returning only those where the `needs_attention` status does not match the specified boolean value."
                        },
                        "renew_number_of_times_from": {
                            "type": "integer",
                            "description": "Filters for contracts that renew a number of times greater than or equal to the specified integer value."
                        },
                        "renew_number_of_times_to": {
                            "type": "integer",
                            "description": "Filters contracts based on the `renew_number_of_times` attribute, returning only those where the count is less than or equal to the specified integer value."
                        },
                        "state_equals": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Filters contracts to include only those with states matching the provided list of strings. Valid states for filtering include 'draft', 'requested', 'in_progress', 'out_for_approval', 'approved', 'active', 'expired', and 'terminated'."
                        },
                        "terminated_note_contains": {
                            "type": "string",
                            "description": "Filters contracts to include only those where the termination note contains the specified string."
                        },
                        "terminated_note_not_contains": {
                            "type": "string",
                            "description": "Specifies a string value used to filter contracts. Only contracts where the `terminated_note` field does not contain this string will be returned."
                        },
                        "terminated_note_empty": {
                            "type": "string",
                            "description": "The `terminated_note_empty` key, used within the `filter` dictionary, is a string parameter that returns contracts with an empty termination note."
                        },
                        "terminated_note_not_empty": {
                            "type": "string",
                            "description": "Includes contracts that contain a non-empty termination note."
                        },
                        "terminated_reason_contains": {
                            "type": "string",
                            "description": "Filters contracts based on their termination reason. Returns contracts whose `terminated_reason` attribute contains the specified string value."
                        },
                        "terminated_reason_not_contains": {
                            "type": "string",
                            "description": "Specifies a string. Contracts are returned only if their `terminated_reason` attribute does not contain this specified string."
                        },
                        "terminated_reason_empty": {
                            "type": "string",
                            "description": "Filters the list of retrieved contracts. When this filter is applied, only contracts that have an empty value for their termination reason are returned."
                        },
                        "terminated_reason_not_empty": {
                            "type": "string",
                            "description": "Filters the contract list to include only contracts that have a non-empty termination reason."
                        },
                        "contract_type_id_equals": {
                            "type": "integer",
                            "description": "Finds contracts matching a specific contract type, identified by its integer ID."
                        },
                        "contract_type_id_not_equals": {
                            "type": "integer",
                            "description": "Returns contracts that do not match the specified contract type ID (integer)."
                        },
                        "marked_as_needs_attention_at_from": {
                            "type": "string",
                            "description": "Return contracts that were marked as needing attention on or after a specified date. Provide the date as a string."
                        },
                        "marked_as_needs_attention_at_to": {
                            "type": "string",
                            "description": "Returns contracts that were marked as needing attention on or before the provided date string."
                        },
                        "needs_attention_note_contains": {
                            "type": "string",
                            "description": "Filters contracts to include only those where the needs attention note contains the specified string."
                        },
                        "needs_attention_note_not_contains": {
                            "type": "string",
                            "description": "Filters contracts where the 'needs attention' note does not contain the specified string."
                        },
                        "needs_attention_note_empty": {
                            "type": "string",
                            "description": "Filters contracts to include only those with an empty 'needs attention' note."
                        },
                        "needs_attention_note_not_empty": {
                            "type": "string",
                            "description": "When set to `True`, this parameter filters contracts to include only those with a non-empty needs attention note."
                        },
                        "needs_attention_reason_contains": {
                            "type": "string",
                            "description": "A string used to filter contracts. Only returns contracts whose `needs_attention_reason` attribute contains this string."
                        },
                        "needs_attention_reason_not_contains": {
                            "type": "string",
                            "description": "Filters contracts where the `needs_attention_reason` does not contain the specified string."
                        },
                        "needs_attention_reason_empty": {
                            "type": "string",
                            "description": "Filters the list of contracts to include only those where the 'needs attention reason' field is empty."
                        },
                        "needs_attention_reason_not_empty": {
                            "type": "string",
                            "description": "A boolean flag used to filter contracts. When enabled, it returns only those contracts that have a non-empty `needs_attention_reason` attribute."
                        },
                        "renewal_termination_notice_date_from": {
                            "type": "string",
                            "description": "Filters contracts to include only those with a termination notice date on or after the specified date. This parameter accepts a date as a string."
                        },
                        "renewal_termination_notice_date_to": {
                            "type": "string",
                            "description": "Filter contracts where the `renewal_termination_notice_date` is on or before the specified date. The date must be provided as a string."
                        },
                        "renewal_termination_reminder_date_from": {
                            "type": "string",
                            "description": "Returns contracts with a termination reminder date on or after the specified date string."
                        },
                        "renewal_termination_reminder_date_to": {
                            "type": "string",
                            "description": "Filters contracts where the termination reminder date is on or before the specified date. Provide the date as a string."
                        },
                        "spend_category_id_equals": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "description": "Find contracts using specified Spend Category IDs. This parameter expects a list of integer IDs for filtering."
                        }
                    },
                    "required": [
                        "actual_end_date_from",
                        "actual_end_date_to",
                        "actual_spend_amount_from",
                        "actual_spend_amount_to",
                        "actual_start_date_from",
                        "actual_start_date_to",
                        "auto_renewal",
                        "contract_type_id_equals",
                        "contract_type_id_not_equals",
                        "description_contains",
                        "description_not_contains",
                        "external_id_empty",
                        "external_id_equals",
                        "external_id_not_empty",
                        "external_id_not_equals",
                        "marked_as_needs_attention_at_from",
                        "marked_as_needs_attention_at_to",
                        "needs_attention_equals",
                        "needs_attention_not_equals",
                        "needs_attention_note_contains",
                        "needs_attention_note_empty",
                        "needs_attention_note_not_contains",
                        "needs_attention_note_not_empty",
                        "needs_attention_reason_contains",
                        "needs_attention_reason_empty",
                        "needs_attention_reason_not_contains",
                        "needs_attention_reason_not_empty",
                        "number_from",
                        "number_to",
                        "renew_number_of_times_from",
                        "renew_number_of_times_to",
                        "renewal_termination_notice_date_from",
                        "renewal_termination_notice_date_to",
                        "renewal_termination_reminder_date_from",
                        "renewal_termination_reminder_date_to",
                        "spend_category_id_equals",
                        "state_equals",
                        "terminated_note_contains",
                        "terminated_note_empty",
                        "terminated_note_not_contains",
                        "terminated_note_not_empty",
                        "terminated_reason_contains",
                        "terminated_reason_empty",
                        "terminated_reason_not_contains",
                        "terminated_reason_not_empty",
                        "title_contains",
                        "title_not_contains",
                        "updated_at_from",
                        "updated_at_to"
                    ]
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of relationships to include in the response. Supported values are: \"contract_type\", \"spend_category\", \"supplier_company\", \"docusign_envelopes\", and \"adobe_sign_agreements\"."
                },
                "page": {
                    "type": "object",
                    "description": "A dictionary that specifies pagination parameters. It supports a `size` parameter, an integer representing the number of results per page, which defaults to 10 and has a maximum of 100.",
                    "properties": {
                        "size": {
                            "type": "integer",
                            "description": "Specifies the number of results to return per page. The default value is 10, and the maximum allowed is 100."
                        }
                    },
                    "required": [
                        "size"
                    ]
                }
            }
        }
    },
    {
        "name": "list_custom_fields",
        "description": "Retrieves a list of custom fields. Optionally, provide a `filter` dictionary to specify criteria for selection, where supported keys include `group_id_equals` (string group ID) and `target_object_equals` (string target class name). If no filter is provided, all custom fields are returned.",
        "parameters": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "object",
                    "description": "A dictionary specifying field attributes and their desired values for filtering. If `None`, all fields are returned. Supported filters include `group_id_equals` (string, ID of the group) and `target_object_equals` (string, target class name).",
                    "properties": {
                        "group_id_equals": {
                            "type": "string",
                            "description": "A string ID representing the group for which fields should be selected."
                        },
                        "target_object_equals": {
                            "type": "string",
                            "description": "Filters custom fields by their target object type. Valid types include \"PROJECT\", \"RFP\", and \"SUPPLIER_COMPANY\"."
                        }
                    },
                    "required": [
                        "group_id_equals",
                        "target_object_equals"
                    ]
                }
            }
        }
    },
    {
        "name": "list_event_bids",
        "description": "Returns all bids linked to the specified event, but only for events of type Request for Proposal (RFP). The function supports comprehensive filtering, pagination, and optional inclusion of related data.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the event for which to retrieve bids."
                },
                "filter": {
                    "type": "object",
                    "description": "A dictionary containing filter criteria for bids. Each key represents a filter field, and its corresponding value provides the specific condition. Supported filter fields include bid IDs (`id_equals`, `supplier_company_id_equals`, `supplier_company_external_id_equals`), 'intend to bid' status (`intend_to_bid_equals`, `intend_to_bid_not_equals`), various timestamp ranges (e.g., `intend_to_bid_answered_at_from`, `submitted_at_to`), and bid `status_equals` which accepts a list of specific enumerated statuses.",
                    "properties": {
                        "id_equals": {
                            "type": "integer",
                            "description": "Filters bids to return the bid matching the specified integer identifier."
                        },
                        "intend_to_bid_equals": {
                            "type": "boolean",
                            "description": "Filters bids to include only those with the specified 'intent to bid' status (True or False)."
                        },
                        "intend_to_bid_not_equals": {
                            "type": "boolean",
                            "description": "Filters bids where the `intend_to_bid` status is not equal to the provided boolean value. For instance, setting this to `True` will return bids where the `intend_to_bid` status is `False`."
                        },
                        "intend_to_bid_answered_at_from": {
                            "type": "string",
                            "description": "A timestamp string used to filter bids. Only bids where the `intend_to_bid` status was updated on or after this timestamp are included."
                        },
                        "intend_to_bid_answered_at_to": {
                            "type": "string",
                            "description": "Filters bids to include only those where `intend_to_bid` was updated on or before the specified timestamp."
                        },
                        "submitted_at_from": {
                            "type": "string",
                            "description": "Filters bids where the `submitted_at` timestamp is on or after the specified value. The value must be a timestamp string."
                        },
                        "submitted_at_to": {
                            "type": "string",
                            "description": "Filters bids where the `submitted_at` value is on or before the specified timestamp."
                        },
                        "resubmitted_at_from": {
                            "type": "string",
                            "description": "Filters bids to include only those where the `resubmitted_at` timestamp is on or after the specified value."
                        },
                        "resubmitted_at_to": {
                            "type": "string",
                            "description": "Filters bids to include only those where the `resubmitted_at` timestamp is on or before the specified timestamp string."
                        },
                        "status_equals": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Filter bids by a list of acceptable statuses: `award_retracted`, `awarded`, `draft`, `rejected`, `rejection_retracted`, `resubmitted`, `revising`, `submitted`, `unclaimed`, or `update_requested`."
                        },
                        "supplier_company_id_equals": {
                            "type": "integer",
                            "description": "Filters bids by a specific Supplier Company ID, which must be an integer."
                        },
                        "supplier_company_external_id_equals": {
                            "type": "string",
                            "description": "Filters bids to include only those associated with a specific Supplier Company External ID. This parameter accepts a single string value."
                        }
                    },
                    "required": [
                        "id_equals",
                        "intend_to_bid_answered_at_from",
                        "intend_to_bid_answered_at_to",
                        "intend_to_bid_equals",
                        "intend_to_bid_not_equals",
                        "resubmitted_at_from",
                        "resubmitted_at_to",
                        "status_equals",
                        "submitted_at_from",
                        "submitted_at_to",
                        "supplier_company_external_id_equals",
                        "supplier_company_id_equals"
                    ]
                },
                "_include": {
                    "type": "string",
                    "description": "A string specifying additional related resources to include in the response. Supported values are \"event\" for event details and \"supplier_company\" for supplier company details. This parameter defaults to `None`."
                },
                "page": {
                    "type": "object",
                    "description": "A dictionary containing pagination parameters. It must include the `size` parameter, an integer that specifies the number of results per page, which defaults to 10 and has a maximum value of 100.",
                    "properties": {
                        "size": {
                            "type": "integer",
                            "description": "Specifies the number of results returned per page. The default value is 10, with a maximum of 100."
                        }
                    },
                    "required": [
                        "size"
                    ]
                }
            },
            "required": [
                "event_id"
            ]
        }
    },
    {
        "name": "list_event_report_entries",
        "description": "Retrieves a paginated list of event report entries, which are detailed records of events captured within the system, such as audit events, workflow triggers, or system updates. Traversal through the paginated results is supported via `next` and `prev` links.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_event_templates",
        "description": "Returns a list of all event templates, with each template represented as a dictionary. Each template's `attributes` key includes a `title` (maximum 255 characters) and an `event_type` selected from a predefined set of enum values.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_event_worksheet_line_items",
        "description": "Retrieves a list of line items, filtered by the specified event ID and worksheet ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the event to which the line items belong."
                },
                "worksheet_id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the worksheet to which the line items belong."
                }
            },
            "required": [
                "event_id",
                "worksheet_id"
            ]
        }
    },
    {
        "name": "list_event_worksheets",
        "description": "Retrieves a list of all worksheets associated with a specific event. Each worksheet is returned as a dictionary that includes its identifier, name, and associated event ID, along with an `attributes` dictionary containing details such as title, budget, notes, worksheet type, and column definitions.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "The unique integer identifier for the event. This ID specifies which event the retrieved worksheets belong to."
                }
            },
            "required": [
                "event_id"
            ]
        }
    },
    {
        "name": "list_events_with_filters",
        "description": "Returns a list of events based on specified filter criteria and pagination settings. The filter dictionary allows matching event attributes, while the page dictionary controls the number of results per page.",
        "parameters": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "object",
                    "description": "A dictionary used to specify filter criteria for events. Keys are event attributes, and values are the desired match criteria. Supported filters cover various aspects like timestamps (e.g., `updated_at_from`), string matching (e.g., `title_contains`), and specific IDs or states (e.g., `state_equals`), each expecting appropriate data types such as strings, lists, or booleans.",
                    "properties": {
                        "updated_at_from": {
                            "type": "string",
                            "description": "Filters events to return only those updated on or after the specified timestamp string."
                        },
                        "updated_at_to": {
                            "type": "string",
                            "description": "A string timestamp used to filter events updated on or before that date and time."
                        },
                        "title_contains": {
                            "type": "string",
                            "description": "Specifies a string used to filter events by their title. Only events with titles containing the provided string will be returned."
                        },
                        "title_not_contains": {
                            "type": "string",
                            "description": "A string that filters events by excluding those whose titles contain the specified value."
                        },
                        "spend_category_id_equals": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            },
                            "description": "Find events using specified Spend Category IDs. This parameter expects a list of integers."
                        },
                        "state_equals": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "A list of event states to filter results by. Supported states are \"draft\", \"scheduled\", \"published\", \"live_editing\", \"closed\", and \"canceled\"."
                        },
                        "event_type_equals": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Filters events by their type. This parameter accepts a list of specific event types, including 'RFP', 'AUCTION', 'AUCTION_WITH_LOTS', 'AUCTION_LOT', 'PERFORMANCE_REVIEW_EVENT', 'PERFORMANCE_REVIEW_SCORE_CARD_ONLY_EVENT', 'SUPPLIER_REVIEW_EVENT', and 'SUPPLIER_REVIEW_MASTER_EVENT'."
                        },
                        "request_type_equals": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Filters events to include only those matching the specified request types. Provide a list of strings for the desired types."
                        },
                        "supplier_rsvp_deadline_from": {
                            "type": "string",
                            "description": "Filters events to include only those with an RSVP deadline on or after the specified date. The date must be provided as a string."
                        },
                        "supplier_rsvp_deadline_to": {
                            "type": "string",
                            "description": "A date string used to filter events. Only events with an RSVP deadline on or before this specified date will be returned."
                        },
                        "supplier_rsvp_deadline_empty": {
                            "type": "boolean",
                            "description": "Set to `True` to include events that do not have a supplier RSVP deadline configured."
                        },
                        "supplier_rsvp_deadline_not_empty": {
                            "type": "boolean",
                            "description": "A boolean flag. Set this parameter to `True` to return only events that have an RSVP deadline configured."
                        },
                        "supplier_question_deadline_from": {
                            "type": "string",
                            "description": "Filters events to include only those where the supplier's question deadline is on or after the specified date. Provide the date as a string."
                        },
                        "supplier_question_deadline_to": {
                            "type": "string",
                            "description": "Filters events to include only those where the supplier's question deadline is on or before the specified date. This parameter expects a date string."
                        },
                        "supplier_question_deadline_empty": {
                            "type": "boolean",
                            "description": "A boolean parameter that, when set to `True`, returns events where the supplier questions deadline is not set."
                        },
                        "supplier_question_deadline_not_empty": {
                            "type": "boolean",
                            "description": "When set to `True`, this boolean filter returns events that have a questions deadline defined."
                        },
                        "bid_submission_deadline_from": {
                            "type": "string",
                            "description": "Filters events to include only those with a bid submission deadline on or after the specified date, provided as a string."
                        },
                        "bid_submission_deadline_to": {
                            "type": "string",
                            "description": "Filters events where the bid submission deadline is on or before the specified date."
                        },
                        "bid_submission_deadline_empty": {
                            "type": "boolean",
                            "description": "A boolean parameter. If `True`, it filters and returns events where the bid submission deadline is not set."
                        },
                        "bid_submission_deadline_not_empty": {
                            "type": "boolean",
                            "description": "Filters events to include only those with a bid submission deadline defined. Set this boolean parameter to `True` to apply the filter."
                        },
                        "created_at_from": {
                            "type": "string",
                            "description": "Filter events to include only those created on or after the specified timestamp. This parameter accepts a string value representing the timestamp."
                        },
                        "created_at_to": {
                            "type": "string",
                            "description": "Filters events to include only those created on or before the specified timestamp string."
                        },
                        "published_at_from": {
                            "type": "string",
                            "description": "Specifies a timestamp string to return events published on or after that date and time."
                        },
                        "published_at_to": {
                            "type": "string",
                            "description": "Returns events published on or before the specified timestamp, which must be provided as a string."
                        },
                        "published_at_empty": {
                            "type": "boolean",
                            "description": "Set to `True` to retrieve events that do not have a published timestamp."
                        },
                        "published_at_not_empty": {
                            "type": "boolean",
                            "description": "A boolean flag used to filter events. When set to `True`, it returns events that possess a published timestamp."
                        },
                        "closed_at_from": {
                            "type": "string",
                            "description": "Filters for events that were closed on or after the specified timestamp. This parameter expects a string representing the timestamp."
                        },
                        "closed_at_to": {
                            "type": "string",
                            "description": "Filters events to return those that were closed on or before a specified timestamp."
                        },
                        "closed_at_empty": {
                            "type": "boolean",
                            "description": "A boolean flag that, when set to `True`, returns events that do not have a closed timestamp."
                        },
                        "closed_at_not_empty": {
                            "type": "boolean",
                            "description": "A boolean parameter that, when set to `True`, filters for events that have a non-empty `closed_at` timestamp."
                        },
                        "spend_amount_from": {
                            "type": "number",
                            "description": "A float value that filters events, returning only those with a `spend_amount` greater than or equal to this specified value."
                        },
                        "spend_amount_to": {
                            "type": "number",
                            "description": "Filters events to include only those where the spend amount is less than or equal to the specified float value."
                        },
                        "spend_amount_empty": {
                            "type": "boolean",
                            "description": "A boolean flag that, when true, filters results to include only events where the spend amount is not set."
                        },
                        "spend_amount_not_empty": {
                            "type": "boolean",
                            "description": "A boolean parameter. When set to `True`, it filters events to include only those that have a spend amount defined."
                        },
                        "external_id_empty": {
                            "type": "boolean",
                            "description": "Filters events to include only those where the `external_id` is blank. Set this boolean parameter to `True` to apply the filter."
                        },
                        "external_id_not_empty": {
                            "type": "boolean",
                            "description": "A boolean flag that, when set to true, filters results to include only events where the `external_id` is not blank."
                        },
                        "external_id_equals": {
                            "type": "string",
                            "description": "Filters events to return only those that match the provided external ID string."
                        },
                        "external_id_not_equals": {
                            "type": "string",
                            "description": "Filters events by excluding those that match the specified external ID. This parameter expects a string value."
                        }
                    },
                    "required": [
                        "bid_submission_deadline_empty",
                        "bid_submission_deadline_from",
                        "bid_submission_deadline_not_empty",
                        "bid_submission_deadline_to",
                        "closed_at_empty",
                        "closed_at_from",
                        "closed_at_not_empty",
                        "closed_at_to",
                        "created_at_from",
                        "created_at_to",
                        "event_type_equals",
                        "external_id_empty",
                        "external_id_equals",
                        "external_id_not_empty",
                        "external_id_not_equals",
                        "published_at_empty",
                        "published_at_from",
                        "published_at_not_empty",
                        "published_at_to",
                        "request_type_equals",
                        "spend_amount_empty",
                        "spend_amount_from",
                        "spend_amount_not_empty",
                        "spend_amount_to",
                        "spend_category_id_equals",
                        "state_equals",
                        "supplier_question_deadline_empty",
                        "supplier_question_deadline_from",
                        "supplier_question_deadline_not_empty",
                        "supplier_question_deadline_to",
                        "supplier_rsvp_deadline_empty",
                        "supplier_rsvp_deadline_from",
                        "supplier_rsvp_deadline_not_empty",
                        "supplier_rsvp_deadline_to",
                        "title_contains",
                        "title_not_contains",
                        "updated_at_from",
                        "updated_at_to"
                    ]
                },
                "page": {
                    "type": "object",
                    "description": "A dictionary defining pagination parameters. It must include a `size` key (integer) to specify the number of results per page, with a default of 10 and a maximum of 100.",
                    "properties": {
                        "size": {
                            "type": "integer",
                            "description": "The number of results to display per page, defaulting to 10 with a maximum limit of 100."
                        }
                    },
                    "required": [
                        "size"
                    ]
                }
            }
        }
    },
    {
        "name": "list_field_groups",
        "description": "Returns a list of field groups. Each group is represented as a dictionary containing fields such as `type` (always \"field_groups\"), `id`, `fields` (a list), `name`, and `description`. The `name` and `description` fields are strings limited to 255 characters, while the `attributes` dictionary provides `target_object` (either \"PROJECT\", \"SUPPLIER_COMPANY\", or \"RFP\"), `name` (max 255 chars), and `position`.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_field_options_by_field_id",
        "description": "Retrieves a list of field options for the specified field. Each option is a dictionary structured with an object type (always 'fields'), a field identifier, its configured options, and attributes including the field's label (maximum 255 characters) and UI position.",
        "parameters": {
            "type": "object",
            "properties": {
                "field_id": {
                    "type": "string",
                    "description": "A unique string identifier for the field. Use this to retrieve the field's associated options."
                }
            },
            "required": [
                "field_id"
            ]
        }
    },
    {
        "name": "list_payment_currencies",
        "description": "Retrieves a list of all available payment currencies in the system. The returned list contains payment currency objects, each detailing its type (always 'payment_currencies'), a unique ID, a three-letter alphabetic code (e.g., 'USD'), a three-digit numeric code, and an optional external identifier (max 255 characters).",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_payment_terms",
        "description": "Retrieves a list of all available payment terms in the system. Each term is represented as an object with fields including `type` (always \"payment_terms\"), `id`, `name`, and an optional `external_id`. The term also contains an `attributes` dictionary, which further specifies `name` and `external_id`, each limited to 255 characters.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_payment_types",
        "description": "Retrieves a list of all available payment types in the system. Each type is an object with a fixed `type` value of 'payment_types', an `id`, and a `name`. Its `payment_method` must be one of several predefined values (e.g., 'Direct Deposit', 'Check', 'Credit Card'), and it may include an optional `external_id` limited to 255 characters.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_performance_review_answer_report_entries",
        "description": "Retrieves a list of detailed performance review answer entries. The response is paginated, providing `next` and `prev` links to navigate through the results.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_performance_review_report_entries",
        "description": "Retrieves detailed performance review report entries in a paginated format. Each entry contains attributes related to a performance review. Use pagination links to iterate through the complete results.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_project_milestone_report_entries",
        "description": "Retrieves a list of project milestone report entries. Each entry is a dictionary that includes a `type` field (always \"project_milestone_report_entries\"), a unique `id`, and an `attributes` dictionary providing details of the milestone.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_project_types",
        "description": "Retrieves a list of all available project types in the system. Each project type includes a name and a short code, which are useful for categorizing and identifying different types of projects.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_projects",
        "description": "Retrieves a list of projects, allowing for optional filtering via a dictionary of specific criteria (e.g., `updated_at_from` for datetimes, `title_contains` for strings) and pagination through a dictionary that includes a `size` parameter (default 10, max 100).",
        "parameters": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "object",
                    "description": "A dictionary containing filter criteria for projects, where keys correspond to specific project attributes and values define the filter condition. Examples include `updated_at_from` (datetime), `title_contains` (str), `state_equals` (List[str]), and `needs_attention_equals` (bool). If `None`, no filtering is applied.",
                    "properties": {
                        "updated_at_from": {
                            "type": "object",
                            "description": "Specify a `datetime` timestamp to return projects updated on or after this date and time."
                        },
                        "updated_at_to": {
                            "type": "object",
                            "description": "Filters projects to include only those updated on or before the specified `datetime` timestamp."
                        },
                        "number_from": {
                            "type": "integer",
                            "description": "Specifies a minimum project number. Only projects with a number equal to or greater than this integer value will be included."
                        },
                        "number_to": {
                            "type": "integer",
                            "description": "A filter criterion to find projects with a `number` equal to or less than the specified integer value."
                        },
                        "title_contains": {
                            "type": "string",
                            "description": "A string value used as a filter criterion. Projects are returned if their title contains the specified string."
                        },
                        "title_not_contains": {
                            "type": "string",
                            "description": "A string used to filter projects, returning only those whose titles do not contain the specified string."
                        },
                        "description_contains": {
                            "type": "string",
                            "description": "A string used to filter projects. Only projects whose description contains this string are returned."
                        },
                        "description_not_contains": {
                            "type": "string",
                            "description": "Filters projects by their description. Return projects whose descriptions do not contain the specified string value."
                        },
                        "external_id_empty": {
                            "type": "boolean",
                            "description": "A boolean flag used to filter projects. Set to `True` to retrieve only projects where the `external_id` is blank."
                        },
                        "external_id_not_empty": {
                            "type": "boolean",
                            "description": "A boolean parameter that, when set to `True`, filters the results to include only projects with a non-blank `external_id`."
                        },
                        "external_id_equals": {
                            "type": "string",
                            "description": "Use this filter key within the `filter` dictionary to find projects whose `external_id` exactly matches the provided string value."
                        },
                        "external_id_not_equals": {
                            "type": "string",
                            "description": "A string representing an external ID. Projects that match this specified external ID will be excluded from the results."
                        },
                        "actual_start_date_from": {
                            "type": "object",
                            "description": "A `date` value used to filter projects, returning only those with an actual start date on or after the specified date."
                        },
                        "actual_start_date_to": {
                            "type": "object",
                            "description": "Return projects started on or before the specified `date`."
                        },
                        "actual_end_date_from": {
                            "type": "object",
                            "description": "A date value to filter projects. Returns projects with an actual end date on or after this specified date."
                        },
                        "actual_end_date_to": {
                            "type": "object",
                            "description": "A `date` value that filters projects to include only those which ended on or before this specified date."
                        },
                        "target_start_date_from": {
                            "type": "object",
                            "description": "Filters projects to include only those with a target start date on or after the specified `date`."
                        },
                        "target_start_date_to": {
                            "type": "object",
                            "description": "A `date` parameter that filters projects targeted to start on or before its specified value."
                        },
                        "target_end_date_from": {
                            "type": "object",
                            "description": "The date used to filter projects, including only those whose target end date is on or after this value."
                        },
                        "target_end_date_to": {
                            "type": "object",
                            "description": "Filters projects that are targeted to end on or before the specified date. This parameter expects a `date` value."
                        },
                        "actual_spend_amount_from": {
                            "type": "number",
                            "description": "Filters projects to include only those with an actual spend amount greater than or equal to the specified float value."
                        },
                        "actual_spend_amount_to": {
                            "type": "number",
                            "description": "Filters projects to include only those where the actual spend amount is less than or equal to the specified value."
                        },
                        "approved_spend_amount_from": {
                            "type": "number",
                            "description": "Filters projects to include only those with an approved spend amount greater than or equal to the specified float value."
                        },
                        "approved_spend_amount_to": {
                            "type": "number",
                            "description": "A filter criterion that returns projects with an approved spend amount equal to or less than the provided float value."
                        },
                        "estimated_savings_amount_from": {
                            "type": "number",
                            "description": "Filters projects to include only those with an estimated savings amount equal to or greater than the specified float value."
                        },
                        "estimated_savings_amount_to": {
                            "type": "number",
                            "description": "Filters projects to include only those with an estimated savings amount less than or equal to the specified value."
                        },
                        "estimated_spend_amount_from": {
                            "type": "number",
                            "description": "Specifies a minimum estimated spend amount. Only projects with an estimated spend amount equal to or greater than this float value will be returned."
                        },
                        "estimated_spend_amount_to": {
                            "type": "number",
                            "description": "A filter to return projects where the estimated spend amount is less than or equal to the specified value. This parameter expects a float."
                        },
                        "canceled_note_contains": {
                            "type": "string",
                            "description": "Filters projects by returning only those where the cancelation note contains the specified string."
                        },
                        "canceled_note_not_contains": {
                            "type": "string",
                            "description": "A string used to filter projects. Only projects whose cancellation note does not contain this specified string will be returned."
                        },
                        "canceled_note_empty": {
                            "type": "string",
                            "description": "A string-based filter that returns projects with an empty cancelation note."
                        },
                        "canceled_note_not_empty": {
                            "type": "string",
                            "description": "A string parameter used as a filter to return projects with a non-empty cancelation note."
                        },
                        "canceled_reason_contains": {
                            "type": "string",
                            "description": "Filters projects, returning only those whose cancelation reason contains the provided string."
                        },
                        "canceled_reason_not_contains": {
                            "type": "string",
                            "description": "A string used to filter projects. Only projects whose cancellation reason does not contain this specified string will be returned."
                        },
                        "canceled_reason_empty": {
                            "type": "string",
                            "description": "Filters projects to include only those with an empty cancellation reason."
                        },
                        "canceled_reason_not_empty": {
                            "type": "string",
                            "description": "A string parameter within the `filter` dictionary. When included, it filters projects to return only those with a non-empty cancelation reason."
                        },
                        "on_hold_note_contains": {
                            "type": "string",
                            "description": "The string to match against project on-hold notes. Only projects with an on-hold note containing this string are returned."
                        },
                        "on_hold_note_not_contains": {
                            "type": "string",
                            "description": "Filters projects where the `on-hold` note does not contain the specified string."
                        },
                        "on_hold_note_empty": {
                            "type": "string",
                            "description": "Filters projects to return only those with an empty on-hold note. This parameter expects a string value."
                        },
                        "on_hold_note_not_empty": {
                            "type": "string",
                            "description": "A boolean parameter that, when set to `True`, filters projects to include only those with a non-empty on-hold note."
                        },
                        "on_hold_reason_contains": {
                            "type": "string",
                            "description": "Filters projects by their on-hold reason. Returns only projects where the on-hold reason contains the specified string."
                        },
                        "on_hold_reason_not_contains": {
                            "type": "string",
                            "description": "Filters projects to return only those whose on-hold reason does not contain the specified string. The value provided for this parameter must be a string."
                        },
                        "on_hold_reason_empty": {
                            "type": "string",
                            "description": "Filters projects to include only those with an empty on-hold reason. This parameter accepts an empty string (`\"\"`) to activate the filter."
                        },
                        "on_hold_reason_not_empty": {
                            "type": "string",
                            "description": "Includes projects with a non-empty on-hold reason."
                        },
                        "needs_attention_equals": {
                            "type": "boolean",
                            "description": "Specifies the desired 'needs attention' status for filtering projects. This parameter accepts a boolean value."
                        },
                        "needs_attention_not_equals": {
                            "type": "boolean",
                            "description": "Filters projects where the \"needs attention\" status does not equal the specified boolean value."
                        },
                        "state_equals": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "Filters projects by status, accepting a list of strings that represent allowed statuses (e.g., 'draft', 'requested', 'planned', 'active', 'completed', 'canceled', or 'on_hold')."
                        },
                        "marked_as_needs_attention_at_from": {
                            "type": "object",
                            "description": "Specifies a `datetime` to find projects marked as \"needs attention\" on or after the given date."
                        },
                        "marked_as_needs_attention_at_to": {
                            "type": "object",
                            "description": "A `datetime` value used to find projects marked as \"needs attention\" on or before the specified date."
                        },
                        "needs_attention_note_contains": {
                            "type": "string",
                            "description": "A string used to filter projects. Only projects where the 'needs attention' note contains this string will be returned."
                        },
                        "needs_attention_note_not_contains": {
                            "type": "string",
                            "description": "A string used to filter projects. Only projects whose 'needs attention' note does not contain this specified string will be returned."
                        },
                        "needs_attention_note_empty": {
                            "type": "string",
                            "description": "Filters projects to return only those with an empty \"needs attention\" note. This filter is applied by including `needs_attention_note_empty` as a key in the `filter` dictionary, expecting a string value."
                        },
                        "needs_attention_note_not_empty": {
                            "type": "string",
                            "description": "Filters projects to include only those that have a non-empty \"needs attention\" note."
                        },
                        "needs_attention_reason_contains": {
                            "type": "string",
                            "description": "A string used to filter projects. Only projects with a \"needs attention\" reason containing this string are returned."
                        },
                        "needs_attention_reason_not_contains": {
                            "type": "string",
                            "description": "A string used to filter projects, returning only those where the \"needs attention\" reason does not contain this specified string."
                        },
                        "needs_attention_reason_empty": {
                            "type": "string",
                            "description": "Filters projects to include only those where the \"needs attention\" reason is empty."
                        },
                        "needs_attention_reason_not_empty": {
                            "type": "string",
                            "description": "Filters projects to return only those with a non-empty 'needs attention' reason. This parameter expects a string value."
                        }
                    },
                    "required": [
                        "actual_end_date_from",
                        "actual_end_date_to",
                        "actual_spend_amount_from",
                        "actual_spend_amount_to",
                        "actual_start_date_from",
                        "actual_start_date_to",
                        "approved_spend_amount_from",
                        "approved_spend_amount_to",
                        "canceled_note_contains",
                        "canceled_note_empty",
                        "canceled_note_not_contains",
                        "canceled_note_not_empty",
                        "canceled_reason_contains",
                        "canceled_reason_empty",
                        "canceled_reason_not_contains",
                        "canceled_reason_not_empty",
                        "description_contains",
                        "description_not_contains",
                        "estimated_savings_amount_from",
                        "estimated_savings_amount_to",
                        "estimated_spend_amount_from",
                        "estimated_spend_amount_to",
                        "external_id_empty",
                        "external_id_equals",
                        "external_id_not_empty",
                        "external_id_not_equals",
                        "marked_as_needs_attention_at_from",
                        "marked_as_needs_attention_at_to",
                        "needs_attention_equals",
                        "needs_attention_not_equals",
                        "needs_attention_note_contains",
                        "needs_attention_note_empty",
                        "needs_attention_note_not_contains",
                        "needs_attention_note_not_empty",
                        "needs_attention_reason_contains",
                        "needs_attention_reason_empty",
                        "needs_attention_reason_not_contains",
                        "needs_attention_reason_not_empty",
                        "number_from",
                        "number_to",
                        "on_hold_note_contains",
                        "on_hold_note_empty",
                        "on_hold_note_not_contains",
                        "on_hold_note_not_empty",
                        "on_hold_reason_contains",
                        "on_hold_reason_empty",
                        "on_hold_reason_not_contains",
                        "on_hold_reason_not_empty",
                        "state_equals",
                        "target_end_date_from",
                        "target_end_date_to",
                        "target_start_date_from",
                        "target_start_date_to",
                        "title_contains",
                        "title_not_contains",
                        "updated_at_from",
                        "updated_at_to"
                    ]
                },
                "page": {
                    "type": "object",
                    "description": "A dictionary specifying pagination settings. It must contain a `'size'` parameter to limit the number of results per page (default: 10, max: 100). If this parameter is `None`, no pagination is applied."
                }
            }
        }
    },
    {
        "name": "list_savings_report_entries",
        "description": "Retrieves a list of savings report entries available to the authenticated user. Each entry is a dictionary that includes `type`, `id`, and `attributes`, where `attributes` contains report-specific fields, including a list of `fields` with their `type` and `name`.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_scim_resource_types",
        "description": "Lists SCIM resource types available on the service provider. This endpoint allows clients to discover all supported SCIM resource types and their associated metadata, including endpoint paths and schemas, based on Section 4 of RFC 7644.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_scim_schemas",
        "description": "Retrieve the list of supported SCIM schemas and their attribute definitions. This includes metadata for each schema, detailing its attributes and constraints. Refer to Section 3.4 of RFC 7644 for further schema discovery guidance.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_scim_users",
        "description": "Retrieves a list of users based on specified filtering, sorting, and pagination criteria. This function adheres to SCIM (System for Cross-domain Identity Management) standards, supporting complex filtering via SCIM filter syntax and offering a 100-item default page size.",
        "parameters": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "string",
                    "description": "A comma-separated list specifying the exact attributes to return for each user. Only the following values are permitted: \"userName\", \"name.familyName\", \"name.givenName\", \"roles\", \"roles.value\", \"externalId\", \"active\", \"meta.lastModified\", \"meta.created\", \"id\"."
                },
                "filter": {
                    "type": "string",
                    "description": "A SCIM-compliant filter expression used to search for users. It supports attributes such as `userName`, `name.familyName`, `name.givenName`, `roles`, `roles.value`, `externalId`, `active`, `meta.lastModified`, and `meta.created`, utilizing operators including `eq`, `ne`, `lt`, `le`, `gt`, `ge`, `pr`, `co`, `and`, `or`, and `not`. For example: `'userName eq \"jhon.doe@example.com\" and meta.lastModified gt \"2011-05-13T04:42:34Z'`.\""
                },
                "startIndex": {
                    "type": "integer",
                    "description": "Specifies the 1-based index of the first query result to return. This value must be greater than or equal to 1."
                },
                "count": {
                    "type": "integer",
                    "description": "Specifies the number of results to return per page; this value must be greater than or equal to 0."
                },
                "sortBy": {
                    "type": "string",
                    "description": "Specifies the attribute used to order the results. This parameter accepts 'id' or 'externalId'."
                },
                "sortOrder": {
                    "type": "string",
                    "description": "Specifies the direction for sorting results. It must be \"ascending\" for ascending order or \"descending\" for descending order."
                }
            }
        }
    },
    {
        "name": "list_spend_categories",
        "description": "Retrieves a list of all available spend categories. These categories include optional usage types and can be used to group procurement, expenses, ad-hoc payments, and supplier invoices.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_supplier_companies",
        "description": "Retrieves a list of supplier companies, supporting filtering and pagination. Compound document formatting is also supported via the `_include` parameter to reduce multiple requests.",
        "parameters": {
            "type": "object",
            "properties": {
                "filter": {
                    "type": "object",
                    "properties": {},
                    "description": "A dictionary containing criteria to filter supplier companies. Each key represents an attribute, and its corresponding value provides the criterion for filtering that attribute, allowing only one criterion per attribute."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of related resources to include in the response. Valid resources include 'attachments', 'supplier_category', 'supplier_groups', 'default_payment_term', 'payment_types', 'default_payment_type', 'payment_currencies', 'default_payment_currency', and 'supplier_classification_values'."
                },
                "page": {
                    "type": "object",
                    "properties": {},
                    "description": "A dictionary providing configuration details for pagination."
                }
            }
        }
    },
    {
        "name": "list_supplier_company_contacts_by_company_external_id",
        "description": "Retrieves a list of contacts for a specific supplier company, identified by its unique ID. This function supports detailed filtering using various parameters (e.g., timestamps, name, email), including related resources such as supplier company or contact types, and pagination options.",
        "parameters": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer",
                    "description": "A required, unique integer identifier for the supplier company. For example: 1."
                },
                "_include": {
                    "type": "string",
                    "description": "Specify related resources to include in the response as a comma-separated list. Allowed values are \"supplier_company\", \"contact_types\", and \"phones\"."
                },
                "filter": {
                    "type": "object",
                    "properties": {
                        "updated_at_from": {
                            "type": "string",
                            "description": "Filters contacts to return only those updated on or after the specified timestamp. The timestamp must be provided in ISO 8601 format."
                        },
                        "updated_at_to": {
                            "type": "string",
                            "description": "A timestamp used to filter contacts, including only those updated on or before this specified time."
                        }
                    },
                    "description": "A dictionary of parameters used to narrow down contact results. Supported filters allow for querying by timestamp ranges, string matching (e.g., `name_contains`, `email_equals`), boolean checks for empty/non-empty fields (e.g., `phone_number_empty`), and boolean equality (e.g., `is_suggested_equals`).",
                    "required": [
                        "updated_at_from",
                        "updated_at_to"
                    ]
                }
            },
            "required": [
                "company_id"
            ]
        }
    },
    {
        "name": "list_supplier_company_segmentations",
        "description": "Retrieves all supplier company segmentation definitions. Each definition includes label, order, and slug metadata used for categorizing or filtering supplier companies.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_supplier_report_entries",
        "description": "Retrieves all supplier report entries. Each entry is a dictionary with a `type` field (always 'supplier_report_entries'), a unique `id`, and an `attributes` dictionary.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_supplier_review_report_entries",
        "description": "Retrieves a list of supplier review report entries. This function supports pagination and includes metadata to navigate through result pages. Each returned entry is a dictionary resource containing a `type` field (always \"supplier_review_report_entries\"), a unique `id`, and an `attributes` dictionary whose structure depends on the specific report schema.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_user_owned_event_report_entries",
        "description": "Retrieves a list of event report entries specific to the authenticated user. This endpoint is deprecated, only supported in API version 2018-04-01, and was deprecated as of 2019-01-01.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "list_user_owned_project_report_entries",
        "description": "Retrieves a list of project report entries owned by the user. This deprecated endpoint is only available for API version `2018-04-01`, as it has been removed in versions released after `2019-01-01`.",
        "parameters": {
            "type": "object",
            "properties": {}
        }
    },
    {
        "name": "partially_update_scim_user_by_id",
        "description": "Applies partial updates to a User resource using a sequence of SCIM-compliant patch operations, supporting `add`, `remove`, and `replace`. Key constraints prevent users from deactivating their own accounts and require matching SSO domains when updating the `userName`.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique SCIM identifier that specifies the user to patch."
                },
                "body": {
                    "type": "object",
                    "properties": {
                        "schemas": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            },
                            "description": "A list of SCIM schema identifiers. This list must include the URI for the SCIM PATCH schema."
                        },
                        "Operations": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "op": {
                                        "type": "string",
                                        "description": "Type of operation.\n        - Enum: \"add\", \"remove\", \"replace\""
                                    },
                                    "path": {
                                        "type": "string",
                                        "description": "SCIM path to the attribute being modified. Required for \"remove\"."
                                    },
                                    "value": {
                                        "type": "object",
                                        "description": "Value to assign or append. Can be a primitive or nested structure."
                                    }
                                },
                                "required": [
                                    "op",
                                    "value"
                                ]
                            },
                            "description": "Specifies a list of operations to perform a partial update on a SCIM user."
                        }
                    },
                    "description": "A dictionary containing SCIM-compliant patch operations, which must include a specific set of required keys.",
                    "required": [
                        "Operations",
                        "schemas"
                    ]
                }
            },
            "required": [
                "body",
                "id"
            ]
        }
    },
    {
        "name": "remove_supplier_companies_from_event_by_external_id",
        "description": "Removes supplier companies from a specified event using their external identifiers. This function is only supported for events of type RFP.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_external_id": {
                    "type": "string",
                    "description": "The unique external identifier for the event from which suppliers will be removed."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary containing supplier information. It must include `supplier_external_ids`, a list of supplier external IDs to be removed from the event, and `type`, which must always be the string \"supplier_companies\".",
                    "properties": {
                        "supplier_external_ids": {
                            "type": "array",
                            "description": "A list containing the external IDs of supplier companies to be removed from the event."
                        },
                        "type": {
                            "type": "string",
                            "description": "The object type. This value must always be \"supplier_companies\"."
                        }
                    },
                    "required": [
                        "supplier_external_ids",
                        "type"
                    ]
                }
            },
            "required": [
                "data",
                "event_external_id"
            ]
        }
    },
    {
        "name": "remove_supplier_companies_from_event_by_internal_id",
        "description": "Removes suppliers from an event. This operation is only supported for events of type RFP.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the event from which suppliers will be removed."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary containing the supplier information required for the operation. It must include `supplier_ids` as a list of IDs to remove and `type` as the string \"supplier_companies\".",
                    "properties": {
                        "supplier_ids": {
                            "type": "array",
                            "description": "A list containing the unique identifiers of suppliers to be removed from the event."
                        },
                        "type": {
                            "type": "string",
                            "description": "Specifies the object type, which must always be \"supplier_companies\"."
                        }
                    },
                    "required": [
                        "supplier_ids",
                        "type"
                    ]
                }
            },
            "required": [
                "data",
                "event_id"
            ]
        }
    },
    {
        "name": "remove_supplier_companies_from_project",
        "description": "Removes one or more supplier companies from a project, specified as a list of supplier company IDs.",
        "parameters": {
            "type": "object",
            "properties": {
                "project_id": {
                    "type": "integer",
                    "description": "The unique integer identifier for the project."
                },
                "supplier_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of integer IDs representing the supplier companies to remove from the project."
                }
            },
            "required": [
                "project_id",
                "supplier_ids"
            ]
        }
    },
    {
        "name": "remove_supplier_companies_from_project_by_external_id",
        "description": "Removes one or more supplier companies from a project using their external identifiers. The `supplier_external_ids` parameter accepts a list of supplier external IDs, with a recommendation to include 10 or fewer for optimal performance per request.",
        "parameters": {
            "type": "object",
            "properties": {
                "project_external_id": {
                    "type": "string",
                    "description": "A string that serves as the external identifier for the project."
                },
                "supplier_external_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of external IDs for supplier companies to remove from the project. For optimal performance, it is recommended to include 10 or fewer supplier IDs per request."
                }
            },
            "required": [
                "project_external_id",
                "supplier_external_ids"
            ]
        }
    },
    {
        "name": "remove_supplier_contacts_from_event_by_external_ids",
        "description": "Remove supplier contacts from an event. This operation only supports 'RFP' events and requires the unique external identifiers for both the event and the supplier contacts. If the operation fails, it will be rolled back, ensuring invitations are not removed; for best performance, remove 10 or fewer supplier contacts in a single request.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_external_id": {
                    "type": "string",
                    "description": "A unique external identifier for the event from which supplier contacts will be removed."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary specifying the supplier contacts to be removed. It must contain `supplier_contact_external_ids` as a list of external IDs for the contacts, and `type`, which must always be set to 'supplier_contacts'.",
                    "properties": {
                        "supplier_contact_external_ids": {
                            "type": "array",
                            "description": "A list of external identifiers for supplier contacts to be removed from the event."
                        },
                        "type": {
                            "type": "string",
                            "description": "The object type, which must always be `supplier_contacts`."
                        }
                    },
                    "required": [
                        "supplier_contact_external_ids",
                        "type"
                    ]
                }
            },
            "required": [
                "data",
                "event_external_id"
            ]
        }
    },
    {
        "name": "remove_supplier_contacts_from_event_by_internal_id",
        "description": "Removes suppliers from an event by referencing their associated supplier contacts. This operation is only supported for events of type RFP.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the event from which supplier contacts will be removed."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary containing supplier contact information. It must include a `supplier_contact_ids` key, which is a list of IDs to be removed from the event, and a `type` key, which must be the string \"supplier_contacts\".",
                    "properties": {
                        "supplier_contact_ids": {
                            "type": "array",
                            "description": "A list of IDs for supplier contacts to be removed from the event."
                        },
                        "type": {
                            "type": "string",
                            "description": "Specifies the object type, which must always be \"supplier_contacts\"."
                        }
                    },
                    "required": [
                        "supplier_contact_ids",
                        "type"
                    ]
                }
            },
            "required": [
                "data",
                "event_id"
            ]
        }
    },
    {
        "name": "remove_supplier_contacts_from_project_by_external_ids",
        "description": "Removes supplier contacts from a specific project by disassociating them using their external identifiers.",
        "parameters": {
            "type": "object",
            "properties": {
                "project_external_id": {
                    "type": "string",
                    "description": "The external ID of the project from which suppliers are to be removed."
                },
                "supplier_contact_external_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of external identifiers for the supplier contacts to be removed from the project."
                }
            },
            "required": [
                "project_external_id",
                "supplier_contact_external_ids"
            ]
        }
    },
    {
        "name": "remove_supplier_contacts_from_project_by_internal_id",
        "description": "Removes one or more supplier contacts from a project, specified by its unique ID. Provide a list of supplier contact IDs to remove.",
        "parameters": {
            "type": "object",
            "properties": {
                "project_id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the project."
                },
                "supplier_contact_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "description": "A list of supplier contact IDs to remove from the project."
                }
            },
            "required": [
                "project_id",
                "supplier_contact_ids"
            ]
        }
    },
    {
        "name": "replace_scim_user_by_id",
        "description": "Replaces all updatable attributes of a User resource, in accordance with RFC 7644 Section 3.5.1. This operation updates only the attributes provided in the request payload, leaving any others intact. Users cannot deactivate themselves or modify their email domain unless it complies with configured SSO rules.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The unique SCIM identifier for the user to be updated."
                },
                "body": {
                    "type": "object",
                    "properties": {
                        "externalId": {
                            "type": "string",
                            "description": "An optional identifier that clients can define for their own external reference."
                        },
                        "userName": {
                            "type": "string",
                            "description": "The user's email address. This parameter is required and must match the configured SSO domain for updates."
                        },
                        "name": {
                            "type": "object",
                            "properties": {
                                "givenName": {
                                    "type": "string",
                                    "description": "The required first name of the user."
                                },
                                "familyName": {
                                    "type": "string",
                                    "description": "Specifies the user's required last name."
                                }
                            },
                            "description": "",
                            "required": [
                                "familyName",
                                "givenName"
                            ]
                        },
                        "active": {
                            "type": "boolean",
                            "description": "An optional boolean value that indicates whether the user account is active."
                        }
                    },
                    "description": "A dictionary containing the user attributes to update, which must include `userName` (str) as the user's email matching the configured SSO domain, and a `name` dictionary with required `givenName` (str) and `familyName` (str). Optional attributes include `externalId` (str) and `active` (bool).",
                    "required": [
                        "active",
                        "externalId",
                        "name",
                        "userName"
                    ]
                }
            },
            "required": [
                "body",
                "id"
            ]
        }
    },
    {
        "name": "update_attachment_by_external_id",
        "description": "Updates an existing attachment identified by its `external_id`. Provide a dictionary of fields to update; any `external_id` specified within this dictionary will be ignored in favor of the provided `external_id` argument.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "A string representing the external ID of the attachment to update."
                },
                "data": {
                    "type": "object",
                    "properties": {},
                    "description": "A dictionary specifying the fields to update along with their new values. Any `external_id` field included in this dictionary will be ignored, as it is overridden by the `external_id` parameter provided to the function."
                }
            },
            "required": [
                "data",
                "external_id"
            ]
        }
    },
    {
        "name": "update_attachment_by_id",
        "description": "Update an existing attachment using its internal ID. Provide the `id` of the attachment and a `data` dictionary containing the fields to update with their new values. Any `id` field within the `data` dictionary will be ignored and superseded by the `id` argument.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal ID of the attachment to update. This parameter must be an integer."
                },
                "data": {
                    "type": "object",
                    "properties": {},
                    "description": "A dictionary containing the fields to update and their new values. Any 'id' field provided within this dictionary will be ignored and replaced with the `id` argument of the function."
                }
            },
            "required": [
                "data",
                "id"
            ]
        }
    },
    {
        "name": "update_contact_type_by_external_id",
        "description": "Updates the details of an existing contact type using its external ID. The function performs validation checks to ensure the contact type exists and the update is valid, and it supports partial modification of contact type properties.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "Identifies the contact type for the update operation using its unique external identifier."
                },
                "body": {
                    "type": "object",
                    "description": "A dictionary specifying the updated properties for the contact type. This dictionary must include `type` (string, which must always be \"contact_types\"), `id` (integer), `external_id` (string, max 255 characters), and `name` (string, max 255 characters).",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Specifies the object type, which must always be \"contact_types\"."
                        },
                        "id": {
                            "type": "integer",
                            "description": "The integer identifier for the contact type."
                        },
                        "external_id": {
                            "type": "string",
                            "description": "The external identifier for the contact type, limited to a maximum of 255 characters."
                        },
                        "name": {
                            "type": "string",
                            "description": "The name for the contact type, limited to a maximum of 255 characters."
                        }
                    },
                    "required": [
                        "external_id",
                        "id",
                        "name",
                        "type"
                    ]
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "update_contact_type_by_id",
        "description": "Updates the details of an existing contact type, identified by its unique internal ID. The updated properties are specified in the `body` dictionary, which must include `type` (always \"contact_types\"), `id` (matching the URL ID), `external_id` (up to 255 characters), and `name` (up to 255 characters). This function performs a partial update, modifying only the fields provided in the body.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique internal integer identifier of the contact type to update."
                },
                "body": {
                    "type": "object",
                    "description": "A dictionary containing the updated properties for the contact type. This dictionary must include the following keys: `type` (string, always 'contact_types'), `id` (integer, the contact type identifier), `external_id` (string, maximum 255 characters), and `name` (string, maximum 255 characters).",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "The object type, which must always be \"contact_types\"."
                        },
                        "id": {
                            "type": "integer",
                            "description": "The unique identifier for the contact type within the update request body. This integer value must match the `id` provided in the URL parameter."
                        },
                        "external_id": {
                            "type": "string",
                            "description": "The external identifier for the contact type, limited to a maximum of 255 characters."
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the contact type, limited to a maximum of 255 characters."
                        }
                    },
                    "required": [
                        "external_id",
                        "id",
                        "name",
                        "type"
                    ]
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "update_contract_by_external_id",
        "description": "Updates an existing contract by its external identifier. The `body` parameter provides the update details and must include `type` (string) and `id` (integer) fields. Optionally, use the `_include` parameter to specify a comma-separated list of relationships to return in the response, such as `contract_type` or `supplier_company`.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The external identifier (string) of the contract to update. If the request body also contains an `external_id` field, its value must match this parameter."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of relationships to include in the response. Supported values are 'contract_type', 'spend_category', 'supplier_company', 'docusign_envelopes', and 'adobe_sign_agreements'."
                },
                "body": {
                    "type": "object",
                    "description": "A dictionary containing the fields to update for the contract. It must include the contract's `type` (string) and `id` (integer), and can optionally contain other contract attributes or relationships.",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Specifies the type of the object. This is a required string parameter within the request body."
                        },
                        "id": {
                            "type": "integer",
                            "description": "An integer that identifies the contract."
                        },
                        "supplier_id": {
                            "type": "string",
                            "description": "A string that serves as the identifier for a supplier."
                        },
                        "start_date": {
                            "type": "string",
                            "description": "The contract's start date. This parameter is a string."
                        },
                        "end_date": {
                            "type": "string",
                            "description": "The contract end date. This parameter must be a string."
                        },
                        "external_id": {
                            "type": "string",
                            "description": "Specifies the external identifier of the contract to update. This identifier, included in the request body, must match the `external_id` parameter provided in the request path."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary containing various properties and metadata of the contract, such as its title, description, state, and renewal settings.",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "The title of the contract. This string must not exceed 255 characters."
                                },
                                "description": {
                                    "type": "string",
                                    "description": "A string that provides a description for the contract."
                                },
                                "state": {
                                    "type": "string",
                                    "description": "The current state of the contract. This parameter accepts one of the following string values: \"draft\", \"requested\", \"in_progress\", \"out_for_approval\", \"approved\", \"active\", \"expired\", or \"terminated\"."
                                },
                                "state_label": {
                                    "type": "string",
                                    "description": "A customer-defined label that represents the current state of the contract."
                                },
                                "number": {
                                    "type": "integer",
                                    "description": "The contract number, an integer that is generated sequentially."
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "A unique contract identifier supplied by the customer."
                                },
                                "actual_start_date": {
                                    "type": "string",
                                    "description": "The contract's start date, provided as a string."
                                },
                                "actual_end_date": {
                                    "type": "string",
                                    "description": "The actual end date of the contract, provided as a string."
                                },
                                "actual_spend_amount": {
                                    "type": "number",
                                    "description": "The actual spend amount for the contract, provided as a floating-point number."
                                },
                                "auto_renewal": {
                                    "type": "string",
                                    "description": "Specifies the contract's auto-renewal mode. It must be one of \"yes\", \"no\", or \"evergreen\"."
                                },
                                "marked_as_needs_attention_at": {
                                    "type": "string",
                                    "description": "The date and time string indicating when the contract was flagged as needing attention."
                                },
                                "needs_attention": {
                                    "type": "boolean",
                                    "description": "A boolean flag indicating whether the contract requires attention."
                                },
                                "needs_attention_note": {
                                    "type": "string",
                                    "description": "Provides explanatory notes indicating why a contract has been flagged for attention."
                                },
                                "needs_attention_reason": {
                                    "type": "string",
                                    "description": "A string that specifies the reason why the contract is currently flagged as needing attention."
                                },
                                "renew_number_of_times": {
                                    "type": "integer",
                                    "description": "An integer specifying the number of times the contract should be renewed."
                                },
                                "renewal_term_unit": {
                                    "type": "string",
                                    "description": "Specifies the unit of time for contract renewal terms. Valid units include \"days\", \"weeks\", \"months\", and \"years\"."
                                },
                                "renewal_term_value": {
                                    "type": "integer",
                                    "description": "Specifies the number of term units between contract renewals. The type of unit (e.g., days, months) for these renewals is defined by the `renewal_term_unit` parameter."
                                },
                                "renewal_termination_notice_date": {
                                    "type": "string",
                                    "description": "Specifies the date for issuing a termination notice related to contract renewal."
                                },
                                "renewal_termination_notice_unit": {
                                    "type": "string",
                                    "description": "Specifies the unit of time for the termination notice period."
                                },
                                "renewal_termination_notice_value": {
                                    "type": "integer",
                                    "description": "Specifies the duration for a contract termination notice period. This integer value represents the number of units (e.g., days, months) before the contract's end date, with the unit type defined by the `renewal_termination_notice_unit` parameter."
                                },
                                "renewal_termination_reminder_date": {
                                    "type": "string",
                                    "description": "Specifies the date designated for a contract termination reminder. This value must be provided as a date string."
                                },
                                "renewal_termination_reminder_unit": {
                                    "type": "string",
                                    "description": "Specifies the unit of time for a contract's termination reminder. This unit works in conjunction with `renewal_termination_reminder_value` to define the reminder's timeframe."
                                },
                                "renewal_termination_reminder_value": {
                                    "type": "integer",
                                    "description": "Defines the number of term units that precede the termination notice date, used to schedule a reminder."
                                },
                                "terminated_note": {
                                    "type": "string",
                                    "description": "Provides additional details or commentary regarding the termination of the contract."
                                },
                                "terminated_reason": {
                                    "type": "string",
                                    "description": "A string indicating the reason a contract was terminated."
                                },
                                "updated_at": {
                                    "type": "string",
                                    "description": "The last modification date of the contract, provided as a string."
                                },
                                "custom_fields": {
                                    "type": "array",
                                    "description": "A list containing custom field values."
                                },
                                "approved_at": {
                                    "type": "string",
                                    "description": "A string representing the date and time when the contract was approved."
                                },
                                "approval_rounds": {
                                    "type": "integer",
                                    "description": "Represents the total count of how many times the contract has been sent for approval."
                                },
                                "first_sent_for_approval_at": {
                                    "type": "string",
                                    "description": "The date when the contract was first sent for approval, provided as a string."
                                },
                                "sent_for_approval_at": {
                                    "type": "string",
                                    "description": "Specifies the string representing the date the contract was last sent for approval."
                                },
                                "public": {
                                    "type": "boolean",
                                    "description": "Specifies whether the contract has public visibility. Set to `true` for public visibility or `false` for private."
                                }
                            },
                            "required": [
                                "actual_end_date",
                                "actual_spend_amount",
                                "actual_start_date",
                                "approval_rounds",
                                "approved_at",
                                "auto_renewal",
                                "custom_fields",
                                "description",
                                "external_id",
                                "first_sent_for_approval_at",
                                "marked_as_needs_attention_at",
                                "needs_attention",
                                "needs_attention_note",
                                "needs_attention_reason",
                                "number",
                                "public",
                                "renew_number_of_times",
                                "renewal_term_unit",
                                "renewal_term_value",
                                "renewal_termination_notice_date",
                                "renewal_termination_notice_unit",
                                "renewal_termination_notice_value",
                                "renewal_termination_reminder_date",
                                "renewal_termination_reminder_unit",
                                "renewal_termination_reminder_value",
                                "sent_for_approval_at",
                                "state",
                                "state_label",
                                "terminated_note",
                                "terminated_reason",
                                "title",
                                "updated_at"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "description": "A dictionary containing various contract relationships. It can include `attachments`, `supplier_company`, `creator`, `owner`, `docusign_envelopes`, `adobe_sign_agreements`, `contract_type`, and `spend_category`.",
                            "properties": {
                                "attachments": {
                                    "type": "array",
                                    "description": "A list containing attachments associated with the contract."
                                },
                                "supplier_company": {
                                    "type": "object",
                                    "description": "A dictionary representing the supplier company associated with the contract."
                                },
                                "creator": {
                                    "type": "object",
                                    "description": "A dictionary representing the contract creator."
                                },
                                "owner": {
                                    "type": "object",
                                    "description": "A dictionary that specifies the contract owner."
                                },
                                "docusign_envelopes": {
                                    "type": "array",
                                    "description": "A list of Docusign envelopes associated with the contract. This relationship can be included in the response by specifying it in the `_include` parameter."
                                },
                                "adobe_sign_agreements": {
                                    "type": "array",
                                    "description": "A list of Adobe Sign agreements associated with the contract. This relationship can be optionally included in the function's response."
                                },
                                "contract_type": {
                                    "type": "object",
                                    "description": "A dictionary representing the contract type. This is a relationship associated with the contract."
                                },
                                "spend_category": {
                                    "type": "object",
                                    "description": "Represents the spend category associated with a contract. This is a dictionary found within the contract's relationships, which can be included in the response by specifying `\"spend_category\"` in the `_include` parameter."
                                }
                            },
                            "required": [
                                "adobe_sign_agreements",
                                "attachments",
                                "contract_type",
                                "creator",
                                "docusign_envelopes",
                                "owner",
                                "spend_category",
                                "supplier_company"
                            ]
                        }
                    },
                    "required": [
                        "attributes",
                        "end_date",
                        "external_id",
                        "id",
                        "relationships",
                        "start_date",
                        "supplier_id",
                        "type"
                    ]
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "update_contract_by_id",
        "description": "Update an existing contract identified by its internal ID. Provide the `body` parameter as a dictionary containing the fields to update, including the required `type` and `id` keys. Optionally, use the `_include` parameter to specify a comma-separated list of relationships to include in the response.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal identifier of the contract to update. This parameter is an integer."
                },
                "_include": {
                    "type": "string",
                    "description": "Specifies a comma-separated list of relationships to include in the response. Supported values are `contract_type`, `spend_category`, `supplier_company`, `docusign_envelopes`, and `adobe_sign_agreements`."
                },
                "body": {
                    "type": "object",
                    "description": "A dictionary specifying the fields to update for the contract. It must include the `type` (string) and `id` (integer) keys, and can optionally contain other top-level fields like `supplier_id`, `start_date`, `end_date`, `external_id`, as well as nested `attributes` and `relationships` dictionaries.",
                    "properties": {
                        "type": {
                            "type": "object",
                            "description": "A required string that specifies the type of the object being updated."
                        },
                        "id": {
                            "type": "object",
                            "description": "A required integer that identifies the contract."
                        },
                        "supplier_id": {
                            "type": "string",
                            "description": "The identifier for the supplier, provided as a string."
                        },
                        "start_date": {
                            "type": "string",
                            "description": "The start date of the contract, provided as a string."
                        },
                        "end_date": {
                            "type": "string",
                            "description": "The contract's end date. This parameter accepts a string value."
                        },
                        "external_id": {
                            "type": "string",
                            "description": "Specifies the contract identifier provided by an external system. This parameter is a string."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary containing various contract attributes. These attributes represent updatable properties of the contract, such as its title, state, and renewal settings.",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "Specifies the contract title, limited to a maximum of 255 characters."
                                },
                                "description": {
                                    "type": "string",
                                    "description": "A string representing the description of the contract."
                                },
                                "state": {
                                    "type": "string",
                                    "description": "The current state of the contract. This value must be one of: \"draft\", \"requested\", \"in_progress\", \"out_for_approval\", \"approved\", \"active\", \"expired\", or \"terminated\"."
                                },
                                "state_label": {
                                    "type": "string",
                                    "description": "A customer-specific label that describes the current state of the contract."
                                },
                                "number": {
                                    "type": "integer",
                                    "description": "The contract number, which is generated sequentially."
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "A string serving as a unique contract identifier, provided by the customer."
                                },
                                "actual_start_date": {
                                    "type": "string",
                                    "description": "The start date of the contract, provided as a string."
                                },
                                "actual_end_date": {
                                    "type": "string",
                                    "description": "Specifies the contract's end date. This value must be provided as a string."
                                },
                                "actual_spend_amount": {
                                    "type": "number",
                                    "description": "The actual spend amount for the contract, provided as a floating-point number."
                                },
                                "auto_renewal": {
                                    "type": "string",
                                    "description": "Specifies the auto-renewal mode for the contract. This value must be one of \"yes\", \"no\", or \"evergreen\"."
                                },
                                "marked_as_needs_attention_at": {
                                    "type": "string",
                                    "description": "The date and time (as a string) when the contract was flagged as needing attention."
                                },
                                "needs_attention": {
                                    "type": "boolean",
                                    "description": "Indicates whether the contract requires attention. This parameter accepts a boolean value."
                                },
                                "needs_attention_note": {
                                    "type": "string",
                                    "description": "A string field that provides notes explaining why the contract requires attention."
                                },
                                "needs_attention_reason": {
                                    "type": "string",
                                    "description": "A string that specifies the reason why a contract needs attention."
                                },
                                "renew_number_of_times": {
                                    "type": "integer",
                                    "description": "The integer value specifying the number of times the contract should be renewed."
                                },
                                "renewal_term_unit": {
                                    "type": "string",
                                    "description": "Specifies the unit of time for contract renewals. Valid values are 'days', 'weeks', 'months', or 'years'."
                                },
                                "renewal_term_value": {
                                    "type": "integer",
                                    "description": "Defines the number of term units that elapse between contract renewals. The specific unit, such as 'days' or 'months', is determined by the `renewal_term_unit` parameter."
                                },
                                "renewal_termination_notice_date": {
                                    "type": "string",
                                    "description": "The date for the termination notice, provided as a string."
                                },
                                "renewal_termination_notice_unit": {
                                    "type": "string",
                                    "description": "A string representing the term unit for the termination notice."
                                },
                                "renewal_termination_notice_value": {
                                    "type": "integer",
                                    "description": "Number of term units used to calculate the termination notice date relative to the contract's end date."
                                },
                                "renewal_termination_reminder_date": {
                                    "type": "string",
                                    "description": "Specifies the date for issuing a termination reminder for the contract. This date is determined based on the termination notice date and the configured reminder period."
                                },
                                "renewal_termination_reminder_unit": {
                                    "type": "string",
                                    "description": "Specifies the time unit for the contract's termination reminder. This unit, typically \"days\", \"weeks\", \"months\", or \"years\", is used with `renewal_termination_reminder_value` to define how far in advance of a notice the reminder should occur."
                                },
                                "renewal_termination_reminder_value": {
                                    "type": "integer",
                                    "description": "The number of term units before the termination notice date when a contract termination reminder should be triggered. The unit of time (e.g., days, weeks, months) for this value is specified by `renewal_termination_reminder_unit`."
                                },
                                "terminated_note": {
                                    "type": "string",
                                    "description": "A string field used to record notes regarding a contract's termination."
                                },
                                "terminated_reason": {
                                    "type": "string",
                                    "description": "Defines the reason a contract has been terminated. This field provides specific details about why the contract's state transitioned to 'terminated'."
                                },
                                "updated_at": {
                                    "type": "string",
                                    "description": "A string representing the last modification date of the contract."
                                },
                                "custom_fields": {
                                    "type": "array",
                                    "description": "A list containing custom field values for the contract."
                                },
                                "approved_at": {
                                    "type": "string",
                                    "description": "The date and time when the contract received official approval. This value is provided as a string."
                                },
                                "approval_rounds": {
                                    "type": "integer",
                                    "description": "The integer value representing the number of times the contract has been sent for approval."
                                },
                                "first_sent_for_approval_at": {
                                    "type": "string",
                                    "description": "The date and time the contract was first submitted for approval."
                                },
                                "sent_for_approval_at": {
                                    "type": "string",
                                    "description": "Specifies the most recent date and time the contract was sent for approval."
                                },
                                "public": {
                                    "type": "boolean",
                                    "description": "Determines the public visibility of the contract. This field accepts a boolean value."
                                }
                            },
                            "required": [
                                "actual_end_date",
                                "actual_spend_amount",
                                "actual_start_date",
                                "approval_rounds",
                                "approved_at",
                                "auto_renewal",
                                "custom_fields",
                                "description",
                                "external_id",
                                "first_sent_for_approval_at",
                                "marked_as_needs_attention_at",
                                "needs_attention",
                                "needs_attention_note",
                                "needs_attention_reason",
                                "number",
                                "public",
                                "renew_number_of_times",
                                "renewal_term_unit",
                                "renewal_term_value",
                                "renewal_termination_notice_date",
                                "renewal_termination_notice_unit",
                                "renewal_termination_notice_value",
                                "renewal_termination_reminder_date",
                                "renewal_termination_reminder_unit",
                                "renewal_termination_reminder_value",
                                "sent_for_approval_at",
                                "state",
                                "state_label",
                                "terminated_note",
                                "terminated_reason",
                                "title",
                                "updated_at"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "description": "A dictionary defining the contract's associated relationships. It can contain `attachments`, `supplier_company`, `creator`, `owner`, `docusign_envelopes`, `adobe_sign_agreements`, `contract_type`, and `spend_category`.",
                            "properties": {
                                "attachments": {
                                    "type": "array",
                                    "description": "A list containing the attachments associated with the contract."
                                },
                                "supplier_company": {
                                    "type": "object",
                                    "description": "A dictionary representing the associated supplier company."
                                },
                                "creator": {
                                    "type": "object",
                                    "description": "A dictionary representing the entity that created the contract."
                                },
                                "owner": {
                                    "type": "object",
                                    "description": "A dictionary representing the contract owner."
                                },
                                "docusign_envelopes": {
                                    "type": "array",
                                    "description": "A list containing the DocuSign envelopes associated with the contract."
                                },
                                "adobe_sign_agreements": {
                                    "type": "array",
                                    "description": "A list of Adobe Sign agreements associated with the contract. This relationship can be included in the response."
                                },
                                "contract_type": {
                                    "type": "object",
                                    "description": "A dictionary representing the associated contract type."
                                },
                                "spend_category": {
                                    "type": "object",
                                    "description": "A dictionary representing the spend category associated with the contract."
                                }
                            },
                            "required": [
                                "adobe_sign_agreements",
                                "attachments",
                                "contract_type",
                                "creator",
                                "docusign_envelopes",
                                "owner",
                                "spend_category",
                                "supplier_company"
                            ]
                        }
                    },
                    "required": [
                        "attributes",
                        "end_date",
                        "external_id",
                        "id",
                        "relationships",
                        "start_date",
                        "supplier_id",
                        "type"
                    ]
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "update_contract_type_by_external_id",
        "description": "Update an existing contract type by its external ID. The update data must be provided as a dictionary (`body`) containing a matching `external_id` and a `type` field set to \"contract_types\"; an optional `name` field can also be included.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "This parameter specifies the external identifier for the contract type that needs to be updated."
                },
                "body": {
                    "type": "object",
                    "description": "A dictionary containing the fields to update for the contract type. It must include `external_id`, which must match the `external_id` parameter in the URL, and `type`, which must always be \"contract_types\". It can also contain the `name` of the contract type.",
                    "properties": {
                        "external_id": {
                            "type": "string",
                            "description": "The external identifier for the contract type. This identifier must match the `external_id` provided in the URL."
                        },
                        "type": {
                            "type": "string",
                            "description": "Specifies the object type, which must always be `contract_types`."
                        },
                        "name": {
                            "type": "string",
                            "description": "A string representing the name of the contract type."
                        }
                    },
                    "required": [
                        "external_id",
                        "external_id",
                        "name",
                        "type"
                    ]
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "update_contract_type_by_id",
        "description": "Updates an existing contract type, identified by its internal ID, using a provided dictionary of fields. This dictionary must include an `id` field (matching the function's `id` parameter) and a `type` field, which must be \"contract_types\"; optional fields like `name` or `external_id` can also be specified.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal integer identifier of the contract type to update."
                },
                "body": {
                    "type": "object",
                    "description": "A dictionary containing the fields to update for the contract type. It must include an `id` (integer) that matches the URL parameter and a `type` (string) set to 'contract_types'. It can optionally include a `name` (string) or an `external_id` (string).",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "description": "Specifies the internal identifier of the contract type. This ID must exactly match the `id` parameter provided in the URL."
                        },
                        "type": {
                            "type": "string",
                            "description": "Specifies the object type. This value must always be `contract_types`."
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the contract type, provided as a string."
                        },
                        "external_id": {
                            "type": "string",
                            "description": "A string that serves as the external identifier for the contract type."
                        }
                    },
                    "required": [
                        "external_id",
                        "id",
                        "name",
                        "type"
                    ]
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "update_event_by_id",
        "description": "Updates an existing event using its unique identifier. The `data` parameter is a dictionary containing the fields to update, which must include an `id` that matches the event's identifier. This dictionary can specify fields such as `type` or a nested `attributes` dictionary for properties like `title` and `event_type`.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the event to update."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary containing the fields to update for the event. It must include an `id` (integer) key that matches the `id` parameter in the URL and can optionally contain other event properties like `type` or an `attributes` dictionary with details such as `title`, `spend_amount`, or `late_bids`.",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "description": "Specifies an integer event identifier that must exactly match the `id` parameter provided in the URL."
                        },
                        "type": {
                            "type": "string",
                            "description": "Specifies the event type. This parameter must be one of the enumerated values: 'RFP', 'AUCTION', 'AUCTION_WITH_LOTS', 'AUCTION_LOT', 'PERFORMANCE_REVIEW_EVENT', 'PERFORMANCE_REVIEW_SCORE_CARD_ONLY_EVENT', 'SUPPLIER_REVIEW_EVENT', or 'SUPPLIER_REVIEW_MASTER_EVENT'."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary containing various modifiable attributes of an event. This includes properties such as the event's `title` (string), `event_type` (string enum), `spend_amount` (float), and `late_bids` (boolean), along with notification settings, external IDs, and custom fields.",
                            "properties": {
                                "title": {
                                    "type": "string",
                                    "description": "A string representing the title of the event."
                                },
                                "event_type": {
                                    "type": "string",
                                    "description": "Specifies the event type. This is an enumerated string that must be one of the following values: \"RFP\", \"AUCTION\", \"AUCTION_WITH_LOTS\", \"AUCTION_LOT\", \"PERFORMANCE_REVIEW_EVENT\", \"PERFORMANCE_REVIEW_SCORE_CARD_ONLY_EVENT\", \"SUPPLIER_REVIEW_EVENT\", \"SUPPLIER_REVIEW_MASTER_EVENT\"."
                                },
                                "spend_amount": {
                                    "type": "number",
                                    "description": "A float representing the actual spend amount. This value is used to calculate savings and maintain up-to-date reporting."
                                },
                                "late_bids": {
                                    "type": "boolean",
                                    "description": "Controls whether late bid submissions are permissible for the event. Set to `True` to allow late bids or `False` to prohibit them."
                                },
                                "revise_bids": {
                                    "type": "boolean",
                                    "description": "A boolean value indicating whether suppliers are permitted to re-submit their bids."
                                },
                                "instant_notifications": {
                                    "type": "boolean",
                                    "description": "Controls notification email delivery. If true, notification emails are sent immediately; if false, they are delivered as a digest every 3 hours."
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "The unique identifier (string) for the event in your internal database."
                                },
                                "restricted": {
                                    "type": "boolean",
                                    "description": "Indicates whether the event is restricted to invited participants. This status applies even if the event is posted on the public site."
                                },
                                "custom_fields": {
                                    "type": "array",
                                    "description": "A list of custom field values. Note that custom fields of type 'File' are only accessible through the user interface and will be exposed as `null` in the public API."
                                }
                            },
                            "required": [
                                "custom_fields",
                                "event_type",
                                "external_id",
                                "instant_notifications",
                                "late_bids",
                                "restricted",
                                "revise_bids",
                                "spend_amount",
                                "title"
                            ]
                        }
                    },
                    "required": [
                        "attributes",
                        "id",
                        "id",
                        "type"
                    ]
                }
            },
            "required": [
                "data",
                "id"
            ]
        }
    },
    {
        "name": "update_event_worksheet_line_item_by_id",
        "description": "Updates the details of an existing line item. Supply the unique line item identifier that was previously returned upon creation. The request body for the update must also include an `id` attribute, whose value must match this unique identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer",
                    "description": "The unique identifier of the event to which the line item belongs."
                },
                "worksheet_id": {
                    "type": "integer",
                    "description": "The unique integer identifier of the worksheet to which the line item belongs."
                },
                "id": {
                    "type": "integer",
                    "description": "The unique integer identifier for the line item to be updated."
                },
                "data": {
                    "type": "object",
                    "description": "A dictionary containing the updated properties for the line item. This dictionary must include the line item's `id` (matching the function's `id` parameter), its `type` (always \"line_items\"), `attributes` detailing column data with `data_identifier` and `value` pairs, and `relationships` including the associated `worksheet`'s `type` (\"worksheets\") and `id`.",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Specifies the object type, which must always be 'line_items'."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary containing line item properties. It includes a `data` dictionary, which is a hashmap where keys are worksheet column identifier strings, and values are objects, each containing a `data_identifier` string and the corresponding cell `value`.",
                            "properties": {
                                "data": {
                                    "type": "object",
                                    "description": "A hashmap where keys are data identifier strings for the columns in the worksheet. Each corresponding value is a dictionary containing the `data_identifier` (which is the worksheet column identifier string) and the specific `value` for that worksheet line item cell.",
                                    "properties": {
                                        "data_identifier": {
                                            "type": "string",
                                            "description": "A string that serves as the identifier for a specific column within the worksheet."
                                        },
                                        "value": {
                                            "type": "object",
                                            "description": "The value of a cell within a worksheet line item. This value can be of any data type."
                                        }
                                    },
                                    "required": [
                                        "data_identifier",
                                        "value"
                                    ]
                                }
                            },
                            "required": [
                                "data"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "description": "A dictionary specifying relationships for the line item. It must include a `worksheet` key, which is a dictionary containing the `type` (always 'worksheets') and `id` (worksheet identifier) for the associated worksheet.",
                            "properties": {
                                "worksheet": {
                                    "type": "object",
                                    "description": "A dictionary that specifies the associated worksheet. It must contain a `type` key with the value \"worksheets\" and an `id` key with the unique integer identifier of the worksheet.",
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "description": "Specifies the object type. This parameter must always have the value 'worksheets'."
                                        },
                                        "id": {
                                            "type": "integer",
                                            "description": "A string that uniquely identifies a worksheet."
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "type"
                                    ]
                                }
                            },
                            "required": [
                                "worksheet"
                            ]
                        }
                    },
                    "required": [
                        "attributes",
                        "relationships",
                        "type"
                    ]
                }
            },
            "required": [
                "data",
                "event_id",
                "id",
                "worksheet_id"
            ]
        }
    },
    {
        "name": "update_field_by_external_id",
        "description": "Updates the properties of an existing field identified by its external ID. The provided update properties must include the correct external ID for the update to proceed.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The external identifier of the field to update. This parameter is a string."
                },
                "body": {
                    "type": "object",
                    "description": "A dictionary specifying the updated properties for the field. This dictionary accepts `external_id` (which must match the URL's external_id), `name`, `type`, `required`, `description`, and `configurations`, along with any other defined field properties. Defaults to None.",
                    "properties": {
                        "external_id": {
                            "type": "string",
                            "description": "The external identifier for the field being updated, which must exactly match the `external_id` provided as a path parameter in the URL."
                        },
                        "name": {
                            "type": "string",
                            "description": "The updated name for the field, provided as a string."
                        },
                        "type": {
                            "type": "string",
                            "description": "The new data type for the field, provided as a string."
                        },
                        "required": {
                            "type": "boolean",
                            "description": "A boolean indicating the updated required status of the field."
                        },
                        "description": {
                            "type": "string",
                            "description": "A string containing the updated description for the field."
                        },
                        "configurations": {
                            "type": "object",
                            "description": "A dictionary containing the updated field-specific settings for the field."
                        }
                    },
                    "required": [
                        "configurations",
                        "description",
                        "external_id",
                        "name",
                        "required",
                        "type"
                    ]
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "update_field_details_by_id",
        "description": "Updates an existing field's details using its internal identifier. The request body must include an 'id' attribute whose value matches the identifier passed as an argument.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal identifier for the field to update. This identifier can be an integer or a string and must match the `id` specified within the `options` dictionary in the request body."
                },
                "options": {
                    "type": "object",
                    "description": "A dictionary containing the field properties to update. It must include an 'id' field that matches the path parameter and can contain any of the available updateable fields.",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "A string that identifies the field's type."
                        },
                        "group": {
                            "type": "string",
                            "description": "A string that serves as the identifier for a field group."
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the field, limited to a maximum of 255 characters."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary specifying the field's attributes. It includes the field's `name` (maximum 255 characters), the `target_object` (must be \"PROJECT\", \"RFP\", or \"SUPPLIER_COMPANY\"), and whether the field is `required` (boolean). Additionally, it defines the `type_description` for the field's internal name and meaning, such as \"Checkbox\", \"File\", \"Short Text\", \"Paragraph\", \"Date\", \"Integer\", \"Currency\", \"Decimal\", \"Single Select\", \"Multiple Select\", \"URL\", \"Lookup\", or \"Related\".",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The name of the field. This string is limited to a maximum of 255 characters."
                                },
                                "target_object": {
                                    "type": "string",
                                    "description": "Specifies the field object type. It must be one of \"PROJECT\", \"RFP\", or \"SUPPLIER_COMPANY\"."
                                },
                                "type_description": {
                                    "type": "string",
                                    "description": "Specifies the internal name and meaning of each field. This value must be one of: \"Checkbox\", \"File\", \"Short Text\", \"Paragraph\", \"Date\", \"Integer\", \"Currency\", \"Decimal\", \"Single Select\", \"Multiple Select\", \"URL\", \"Lookup\", or \"Related\"."
                                },
                                "required": {
                                    "type": "boolean",
                                    "description": "A boolean value indicating whether the field is required."
                                }
                            },
                            "required": [
                                "name",
                                "required",
                                "target_object",
                                "type_description"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "description": "A dictionary that specifies the field's relationships. It contains a `group` dictionary, which references the field group to which the field belongs. This `group` must be null if the field's `target_object` is 'RFP', and is required for all other field types.",
                            "properties": {
                                "group": {
                                    "type": "object",
                                    "description": "A reference to the field group to which the field belongs. This reference must be null if the `target_object` is set to `RFP`, and is required for all other field types."
                                }
                            },
                            "required": [
                                "group"
                            ]
                        }
                    },
                    "required": [
                        "attributes",
                        "group",
                        "name",
                        "relationships",
                        "type"
                    ]
                }
            },
            "required": [
                "id",
                "options"
            ]
        }
    },
    {
        "name": "update_field_group_by_id",
        "description": "Updates an existing field group by its unique identifier, applying a provided dictionary of updated properties.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "A unique string identifier for the field group to be updated."
                },
                "options": {
                    "type": "object",
                    "description": "A dictionary of updated properties for the field group. It can include `type`, `id`, `fields`, `name`, `description`, and an `attributes` dictionary, which itself contains `target_object` and `name`.",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Specifies the object type, which must always be \"field_groups\"."
                        },
                        "id": {
                            "type": "integer",
                            "description": "A field group identifier. It is an integer, yet functions as a string identifier that must match the primary `id` parameter of the function."
                        },
                        "fields": {
                            "type": "object",
                            "description": "A list containing the fields associated with this group."
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the field group, limited to a maximum of 255 characters."
                        },
                        "description": {
                            "type": "string",
                            "description": "A description for the field group, limited to a maximum of 255 characters."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary containing attributes for the field group. It includes `target_object`, which must be \"PROJECT\", \"SUPPLIER_COMPANY\", or \"RFP\", and `name`, which has a maximum length of 255 characters.",
                            "properties": {
                                "target_object": {
                                    "type": "string",
                                    "description": "A string specifying the field group object type. It must be one of: `PROJECT`, `SUPPLIER_COMPANY`, or `RFP`."
                                },
                                "name": {
                                    "type": "string",
                                    "description": "The name of the field group, limited to a maximum of 255 characters."
                                }
                            },
                            "required": [
                                "name",
                                "target_object"
                            ]
                        }
                    },
                    "required": [
                        "attributes",
                        "description",
                        "fields",
                        "id",
                        "name",
                        "type"
                    ]
                }
            },
            "required": [
                "id",
                "options"
            ]
        }
    },
    {
        "name": "update_field_options_by_id",
        "description": "Updates the options for a specified field. Identify the field using its unique ID, then provide a list of dictionaries as the new options to set.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique identifier (integer or string) of the field option to update."
                },
                "new_options": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {}
                    },
                    "description": "A list of new options to set for the field. Each option within the list must be a dictionary."
                }
            },
            "required": [
                "id",
                "new_options"
            ]
        }
    },
    {
        "name": "update_payment_currency_by_external_id",
        "description": "Updates the `alpha` (three-letter) and `numeric` codes of an existing payment currency, identified by its external identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The external identifier for the currency to update. This string typically has a maximum length of 255 characters."
                },
                "alpha": {
                    "type": "string",
                    "description": "The new three-letter currency code, such as `USD` or `EUR`."
                },
                "numeric": {
                    "type": "string",
                    "description": "The new numeric currency code. This must be a three-digit string."
                }
            },
            "required": [
                "alpha",
                "external_id",
                "numeric"
            ]
        }
    },
    {
        "name": "update_payment_currency_by_id",
        "description": "Updates an existing payment currency identified by its internal ID. It modifies the three-letter alphabetic code, the numeric code, and optionally the external identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal integer identifier of the currency to update."
                },
                "alpha": {
                    "type": "string",
                    "description": "Specifies the new three-letter currency code, such as USD or EUR."
                },
                "numeric": {
                    "type": "string",
                    "description": "Specifies the new numeric currency code, which must be a three-digit value."
                },
                "external_id": {
                    "type": "string",
                    "description": "The new external identifier for the currency. This optional string parameter has a maximum length of 255 characters."
                }
            },
            "required": [
                "alpha",
                "id",
                "numeric"
            ]
        }
    },
    {
        "name": "update_payment_term_by_external_id",
        "description": "Updates the name of an existing payment term. The payment term is identified by its `external_id`, and the new name can be descriptive, such as \"Net 30\" or \"Net 60\".",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The external identifier (string) of the payment term to update."
                },
                "name": {
                    "type": "string",
                    "description": "The new name for the payment term, such as \"Net 30\" or \"Net 60\". This string has a maximum length of 255 characters."
                }
            },
            "required": [
                "external_id",
                "name"
            ]
        }
    },
    {
        "name": "update_payment_term_by_id",
        "description": "Updates the name and optional external identifier for an existing payment term, identified by its internal integer ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal integer identifier of the payment term to update."
                },
                "name": {
                    "type": "string",
                    "description": "A string representing the name of the payment term."
                },
                "external_id": {
                    "type": "string",
                    "description": "An optional external identifier for the payment term. This string can be up to 255 characters long."
                }
            },
            "required": [
                "id",
                "name"
            ]
        }
    },
    {
        "name": "update_payment_type_by_external_id",
        "description": "Updates an existing payment type identified by its `external_id`. This function allows modifying the payment type's name and its payment method, which must be one of the following: 'Direct Deposit', 'Check', 'EFT', 'Cash', 'Credit Card', 'Wire', 'Manual', 'Direct Debit', 'PayPal', or 'EFT with Reference'.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "A string that serves as the external identifier for a payment type. It specifies the particular payment type to be updated."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the new name for the payment type."
                },
                "payment_method": {
                    "type": "string",
                    "description": "Specify the new payment method. It must be one of the following options: \"Direct Deposit\", \"Check\", \"EFT\", \"Cash\", \"Credit Card\", \"Wire\", \"Manual\", \"Direct Debit\", \"PayPal\", or \"EFT with Reference\"."
                }
            },
            "required": [
                "external_id",
                "name"
            ]
        }
    },
    {
        "name": "update_payment_type_by_id",
        "description": "Updates the details of an existing payment type, utilizing its internal integer identifier to locate and modify the record.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal integer identifier of the payment type to be updated."
                },
                "name": {
                    "type": "string",
                    "description": "The new name to assign to the payment type."
                },
                "payment_method": {
                    "type": "string",
                    "description": "Specifies the new payment method. It must be one of: \"Direct Deposit\", \"Check\", \"EFT\", \"Cash\", \"Credit Card\", \"Wire\", \"Manual\", \"Direct Debit\", \"PayPal\", or \"EFT with Reference\"."
                },
                "external_id": {
                    "type": "string",
                    "description": "The new external identifier for the payment type, limited to a maximum of 255 characters."
                }
            },
            "required": [
                "id",
                "name"
            ]
        }
    },
    {
        "name": "update_project_by_external_id",
        "description": "Updates the details of an existing project identified by its external identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "A unique external identifier used to specify which project to update."
                },
                "project_data": {
                    "type": "object",
                    "description": "A dictionary containing the updated project details. This dictionary must include an `external_id` key with a value that matches the ID of the project being updated.",
                    "properties": {
                        "type_id": {
                            "type": "string",
                            "description": "The identifier for the project type."
                        },
                        "id": {
                            "type": "string",
                            "description": "A string representing the project's identifier."
                        },
                        "external_id": {
                            "type": "string",
                            "description": "A string representing the project's external identifier, which must match the ID used to select the project for the update."
                        },
                        "supplier_companies": {
                            "type": "object",
                            "description": "An array of objects, where each object represents a single supplier company."
                        },
                        "supplier_contacts": {
                            "type": "object",
                            "description": "An array of objects, with each object containing the contact information for a single supplier."
                        },
                        "status": {
                            "type": "string",
                            "description": "The updated status of the project."
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The updated name for the project."
                                },
                                "description": {
                                    "type": "string",
                                    "description": "A description of the project."
                                },
                                "state": {
                                    "type": "string",
                                    "description": "The current state of the project, which must be one of the following predefined values: `draft`, `requested`, `planned`, `active`, `completed`, `canceled`, or `on_hold`."
                                },
                                "target_start_date": {
                                    "type": "object",
                                    "description": "The target date on which the project is planned to begin."
                                },
                                "target_end_date": {
                                    "type": "object",
                                    "description": "Specifies the target end date for the project."
                                },
                                "actual_spend_amount": {
                                    "type": "number",
                                    "description": "The actual amount spent on the project."
                                },
                                "approved_spend_amount": {
                                    "type": "number",
                                    "description": "The approved spending amount for the project."
                                },
                                "estimated_savings_amount": {
                                    "type": "number",
                                    "description": "The estimated savings amount for the project."
                                },
                                "estimated_spend_amount": {
                                    "type": "number",
                                    "description": "The estimated monetary amount expected to be spent on the project."
                                },
                                "canceled_note": {
                                    "type": "string",
                                    "description": "A note explaining the reason for the project's cancellation."
                                },
                                "canceled_reason": {
                                    "type": "string",
                                    "description": "The reason for the project's cancellation."
                                },
                                "on_hold_note": {
                                    "type": "string",
                                    "description": "A note providing the reason or context for placing the project on hold."
                                },
                                "on_hold_reason": {
                                    "type": "string",
                                    "description": "The reason for the project's on-hold status."
                                },
                                "needs_attention": {
                                    "type": "boolean",
                                    "description": "A boolean flag indicating whether the project requires attention."
                                },
                                "marked_as_needs_attention_at": {
                                    "type": "object",
                                    "description": "The timestamp indicating when the project was flagged as needing attention."
                                },
                                "needs_attention_note": {
                                    "type": "string",
                                    "description": "A note explaining why the project requires attention."
                                },
                                "needs_attention_reason": {
                                    "type": "string",
                                    "description": "The reason why the project requires attention."
                                }
                            },
                            "description": "An object containing key-value pairs that represent the project's attributes.",
                            "required": [
                                "actual_spend_amount",
                                "approved_spend_amount",
                                "description",
                                "estimated_savings_amount",
                                "estimated_spend_amount",
                                "name",
                                "needs_attention",
                                "state",
                                "target_end_date",
                                "target_start_date"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "properties": {
                                "attachments": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    },
                                    "description": "An array of objects, where each object represents a single attachment to be associated with the project."
                                },
                                "creator": {
                                    "type": "object",
                                    "description": "A stakeholder object that identifies the project's creator."
                                },
                                "requester": {
                                    "type": "object",
                                    "description": "An object representing the stakeholder who requested the project."
                                },
                                "owner": {
                                    "type": "object",
                                    "description": "An object that identifies the stakeholder designated as the project owner."
                                },
                                "project_type": {
                                    "type": "object",
                                    "description": "An object that defines the relationship to a project type. It must contain a `data` object with the `type` and `id` of the project type resource."
                                }
                            },
                            "description": "An object that defines the relationships associated with the project.",
                            "required": [
                                "attachments",
                                "creator",
                                "owner",
                                "project_type",
                                "requester"
                            ]
                        }
                    },
                    "required": [
                        "attributes",
                        "external_id",
                        "id",
                        "relationships",
                        "status",
                        "supplier_companies",
                        "supplier_contacts",
                        "type_id"
                    ]
                }
            },
            "required": [
                "external_id",
                "project_data"
            ]
        }
    },
    {
        "name": "update_project_details_by_id",
        "description": "Updates an existing project's details using its unique internal identifier. The provided `project_data` dictionary must include an `id` field whose string representation matches the specified identifier.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "Specifies the unique internal identifier of the project to update. This parameter must be an integer."
                },
                "project_data": {
                    "type": "object",
                    "description": "A dictionary containing the updated project details. This dictionary must include an 'id' field, and its string representation must match the project ID provided in the path.",
                    "properties": {
                        "type_id": {
                            "type": "string",
                            "description": "The string identifier for the object's type."
                        },
                        "id": {
                            "type": "string",
                            "description": "A string that uniquely identifies the project. This identifier must match the string representation of the project's unique internal identifier provided in the function's `id` parameter."
                        },
                        "external_id": {
                            "type": "string",
                            "description": "A string that serves as the project's external identifier."
                        },
                        "supplier_companies": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {}
                            },
                            "description": "A list of supplier company objects, with each object structured as a dictionary with string keys."
                        },
                        "supplier_contacts": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {}
                            },
                            "description": "A list of dictionaries, where each dictionary represents a supplier contact."
                        },
                        "status": {
                            "type": "string",
                            "description": "A string indicating the current status of the project."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "A dictionary containing various descriptive and operational attributes for the project. It includes fields such as `name` (string), `description` (string), `state` (string, with defined values like 'draft' or 'active'), date fields like `target_start_date`, financial details like `actual_spend_amount` (float), and boolean flags such as `needs_attention`."
                        },
                        "relationships": {
                            "type": "object",
                            "description": "A dictionary that defines the project's various relationships. It includes `attachments` (an array of attachment objects), `creator` (a project creator stakeholder object), `requester` (a project requester stakeholder object), `owner` (a project owner stakeholder object), and `project_type` (a project type object)."
                        }
                    },
                    "required": [
                        "attributes",
                        "external_id",
                        "id",
                        "relationships",
                        "status",
                        "supplier_companies",
                        "supplier_contacts",
                        "type_id"
                    ]
                }
            },
            "required": [
                "id",
                "project_data"
            ]
        }
    },
    {
        "name": "update_spend_category_by_id",
        "description": "Update an existing spend category using its unique identifier. This identifier must match the ID provided in the path. Only the attributes specified in the payload will be updated; other attributes remain unchanged.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "A unique string identifier for the spend category to be updated."
                },
                "name": {
                    "type": "string",
                    "description": "The optional name for the spend category. It must not exceed 255 characters."
                },
                "new_external_id": {
                    "type": "string",
                    "description": "An optional external system ID, limited to a maximum length of 255 characters."
                },
                "usages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Optional. A list of applicable contexts, where each context must be one of: \"procurement\", \"expense\", \"ad_hoc_payment\", or \"supplier_invoice\"."
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "update_spend_category_details_by_external_id",
        "description": "Updates the details of an existing spend category using its internal identifier, which must match the one provided in the URL path. All parameters for the update are optional, and only the provided fields will be modified.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The internal integer identifier for the spend category to be updated. This ID must match the one provided in the URL path."
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the updated name for the spend category, with a maximum length of 255 characters."
                },
                "external_id": {
                    "type": "string",
                    "description": "An external identifier for the spend category. This value can be new or the same as the existing one, and it must not exceed 255 characters."
                },
                "usages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "An updated list of usages for the spend category. Each usage in the list must be one of the following allowed values: 'procurement', 'expense', 'ad_hoc_payment', or 'supplier_invoice'."
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "update_supplier_company_by_external_id",
        "description": "Updates an existing supplier company identified by its external ID. The request body must include an `id` that matches the external identifier provided in the path.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "The required external identifier for the supplier company. For example: `1234-5678-abcd-efgh`."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of related resources to include in the response. Accepted values are `attachments`, `supplier_category`, `supplier_groups`, `default_payment_term`, `payment_types`, `default_payment_type`, `payment_currencies`, `default_payment_currency`, and `supplier_classification_values`."
                },
                "body": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "The type of resource, which must be the string `supplier_companies`."
                        },
                        "id": {
                            "type": "integer",
                            "description": "The identifier for the supplier company."
                        },
                        "attributes": {
                            "type": "object",
                            "description": "An object containing the supplier company attributes to update.",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The required name of the company, with a maximum length of 255 characters."
                                },
                                "description": {
                                    "type": "string",
                                    "description": "An optional description of the supplier company."
                                },
                                "public": {
                                    "type": "boolean",
                                    "description": "Controls the public visibility of the company's profile. A value of `true` makes the company visible to the public, while a value of `false` keeps it private."
                                },
                                "risk": {
                                    "type": "string",
                                    "description": "A unique, human-readable identifier (slug) that represents the company's risk level."
                                },
                                "segmentation": {
                                    "type": "string",
                                    "description": "The unique, human-readable identifier (slug) used for segmenting the supplier company."
                                },
                                "segmentation_status": {
                                    "type": "string",
                                    "description": "A URL-friendly string (slug) that represents the segmentation status. A slug is typically lowercase and uses hyphens to separate words."
                                },
                                "segmentation_notes": {
                                    "type": "string",
                                    "description": "Additional notes or comments regarding the segmentation of the supplier company."
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A collection of tags used to classify the supplier company."
                                },
                                "url": {
                                    "type": "string",
                                    "description": "The complete URL of the supplier's website."
                                },
                                "duns_number": {
                                    "type": "string",
                                    "description": "A unique nine-digit Data Universal Numbering System (D-U-N-S®) number that identifies the company."
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "A custom identifier used to reference the supplier company in an external system."
                                },
                                "self_registered": {
                                    "type": "boolean",
                                    "description": "Indicates whether the supplier completed the registration process themselves."
                                },
                                "onboarding_form_completion_status": {
                                    "type": "string",
                                    "description": "The completion status of the supplier's onboarding form. The value must be one of the following: `null`, `not_started`, `in_progress`, or `completed`."
                                },
                                "accept_all_currencies": {
                                    "type": "boolean",
                                    "description": "Specifies whether the supplier accepts all currencies."
                                },
                                "custom_fields": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "description": "Name of the custom field."
                                            },
                                            "value": {
                                                "type": "object",
                                                "description": "Value, based on field type."
                                            }
                                        },
                                        "required": [
                                            "name",
                                            "value"
                                        ]
                                    },
                                    "description": "A list of custom fields to be applied to the supplier company."
                                }
                            },
                            "required": [
                                "accept_all_currencies",
                                "custom_fields",
                                "description",
                                "duns_number",
                                "external_id",
                                "name",
                                "onboarding_form_completion_status",
                                "public",
                                "risk",
                                "segmentation",
                                "segmentation_notes",
                                "segmentation_status",
                                "self_registered",
                                "tags",
                                "url"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "description": "An object for updating linked resources, where each resource can be specified by either an internal ID (e.g., `supplier_category`) or an external ID (e.g., `external_supplier_category`). It supports single-item relationships like `default_payment_term` as a dictionary and multi-item relationships like `supplier_groups` as a list of dictionaries.",
                            "properties": {
                                "attachments": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    },
                                    "description": "A resource identifier object that specifies the attachments to be linked. This object must contain the attachment's unique identifier (`id`) and a `type` attribute with the literal string value \"attachments\"."
                                }
                            },
                            "required": [
                                "attachments"
                            ]
                        }
                    },
                    "description": "An object containing the fields and values to update for a supplier company.",
                    "required": [
                        "attributes",
                        "id",
                        "relationships",
                        "type"
                    ]
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "update_supplier_company_by_id",
        "description": "Updates the attributes and relationships of an existing supplier company. The request body must contain the unique identifier for the supplier, which must match the ID in the path. Note that when updating relationships, the entire existing relationship is replaced by the provided values.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The required, unique identifier for the supplier company. For example: `1`."
                },
                "_include": {
                    "type": "string",
                    "description": "Specifies related resources to include in the response, provided as a comma-separated list. Allowed values are `attachments`, `supplier_category`, `supplier_groups`, `default_payment_term`, `payment_types`, `default_payment_type`, `payment_currencies`, `default_payment_currency`, and `supplier_classification_values`."
                },
                "body": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "The type of resource, which must be the string `supplier_companies`."
                        },
                        "id": {
                            "type": "integer",
                            "description": "The unique identifier for the supplier company. This value must exactly match the company ID specified in the request's URL path."
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The required name for the supplier, which cannot exceed 255 characters."
                                },
                                "description": {
                                    "type": "string",
                                    "description": "A description of the supplier company."
                                },
                                "public": {
                                    "type": "boolean",
                                    "description": "Indicates whether the company is publicly listed."
                                },
                                "risk": {
                                    "type": "string",
                                    "description": "A unique slug representing a risk classification, which must be a value pre-defined by your organization."
                                },
                                "segmentation": {
                                    "type": "string",
                                    "description": "The unique, URL-friendly identifier (slug) for the company's segmentation."
                                },
                                "segmentation_status": {
                                    "type": "string",
                                    "description": "A unique, URL-friendly identifier (slug) for the segmentation status."
                                },
                                "segmentation_notes": {
                                    "type": "string",
                                    "description": "Specifies any additional notes or comments related to the supplier company's segmentation."
                                },
                                "tags": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "A collection of tags to be assigned to the supplier."
                                },
                                "url": {
                                    "type": "string",
                                    "description": "The URL of the supplier's website."
                                },
                                "duns_number": {
                                    "type": "string",
                                    "description": "The company's unique nine-digit Data Universal Numbering System (D-U-N-S®) number."
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "The unique identifier for the supplier as defined in your internal system."
                                },
                                "self_registered": {
                                    "type": "boolean",
                                    "description": "Indicates whether the supplier self-registered."
                                },
                                "onboarding_form_completion_status": {
                                    "type": "string",
                                    "description": "The completion status of the supplier's onboarding form. Must be one of the following values: `null`, `not_started`, `in_progress`, or `completed`."
                                },
                                "accept_all_currencies": {
                                    "type": "boolean",
                                    "description": "A boolean flag specifying if the supplier accepts all currencies (`true`) or if acceptance is restricted (`false`)."
                                },
                                "custom_fields": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {}
                                    },
                                    "description": "A list of custom field entries, where each entry must be one of the following supported types: Checkbox, Short Text, Paragraph, Date, Integer, Currency, Decimal, Single Select, Multiple Select, URL, Lookup, or Related. Please note that file-type custom fields are not accessible through the API and return `null`."
                                }
                            },
                            "description": "",
                            "required": [
                                "accept_all_currencies",
                                "custom_fields",
                                "name",
                                "onboarding_form_completion_status",
                                "public",
                                "self_registered",
                                "tags"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "properties": {},
                            "description": "An object containing supplier relationship data that replaces all existing relationship information. This object can include fields for `supplier_category`, `supplier_groups`, payment details, `attachments`, and `supplier_classification_values`."
                        }
                    },
                    "description": "A `SupplierCompanyUpdate` object that contains the fields and values to update for an existing supplier company.",
                    "required": [
                        "attributes",
                        "id",
                        "relationships",
                        "type"
                    ]
                }
            },
            "required": [
                "id"
            ]
        }
    },
    {
        "name": "update_supplier_company_contact_by_id",
        "description": "Updates the details of an existing supplier company contact. This function allows modification of contact information by providing updated values for specific fields, with the contact identified by both company ID and contact ID.",
        "parameters": {
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer",
                    "description": "The unique integer identifier for a supplier company. This ID is used by the system to reference the company."
                },
                "contact_id": {
                    "type": "integer",
                    "description": "The unique integer identifier for the contact. This internal ID is used by the system to reference the contact."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated list of related resources to include in the response; however, this functionality is not fully implemented in the simulation."
                },
                "body": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "The contact's full name, provided as a string."
                        },
                        "email": {
                            "type": "string",
                            "description": "Specifies the contact's email address as a string."
                        },
                        "phone": {
                            "type": "string",
                            "description": "Specifies the contact's phone number."
                        },
                        "role": {
                            "type": "string",
                            "description": "Specifies the contact's role within the company."
                        },
                        "status": {
                            "type": "string",
                            "description": "The current status of the contact."
                        }
                    },
                    "description": "A dictionary specifying the fields to update for the contact. It must contain at least one field, which can include \"name\", \"email\", \"phone\", \"role\", \"status\", or other contact-specific fields.",
                    "required": [
                        "email",
                        "name",
                        "phone",
                        "role",
                        "status"
                    ]
                }
            },
            "required": [
                "company_id",
                "contact_id"
            ]
        }
    },
    {
        "name": "update_supplier_contact_by_external_id",
        "description": "Updates the attributes and relationships, such as contact types and phone numbers, for an existing supplier contact identified by its external ID. The request body must include the contact's internal `id`, which must match the contact's identifier in the system.",
        "parameters": {
            "type": "object",
            "properties": {
                "external_id": {
                    "type": "string",
                    "description": "A required and unique external identifier for the supplier contact. For example: `CNT-17`."
                },
                "_include": {
                    "type": "string",
                    "description": "A comma-separated string of related resources to include in the response. Allowed values are `supplier_company`, `contact_types`, and `phones`."
                },
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "object",
                            "properties": {},
                            "description": ""
                        },
                        "type": {
                            "type": "string",
                            "description": "The type of resource. This field is required and must have the value \"supplier_contacts\"."
                        },
                        "id": {
                            "type": "integer",
                            "description": "The required internal identifier for the contact. This value must match the ID of the contact record being updated."
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The full name of the contact, with a maximum length of 255 characters. This parameter is required unless both `first_name` and `last_name` are provided."
                                },
                                "first_name": {
                                    "type": "string",
                                    "description": "The first name of the contact, with a maximum length of 255 characters."
                                },
                                "last_name": {
                                    "type": "string",
                                    "description": "The last name, which cannot exceed 255 characters."
                                },
                                "email": {
                                    "type": "string",
                                    "description": "A required email address, which cannot exceed 255 characters."
                                },
                                "notes": {
                                    "type": "string",
                                    "description": "Any optional notes or supplemental information about the contact."
                                },
                                "phone_number": {
                                    "type": "string",
                                    "description": "**DEPRECATED.** This property is deprecated; use the `phones` relationship instead."
                                },
                                "job_title": {
                                    "type": "string",
                                    "description": "The job title of the contact."
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "A unique identifier for the contact, assigned by or used in an external system."
                                },
                                "is_suggested": {
                                    "type": "boolean",
                                    "description": "Indicates that the contact is a suggestion that has not yet been approved."
                                }
                            },
                            "description": "",
                            "required": [
                                "email",
                                "name"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "properties": {
                                "contact_types": {
                                    "type": "object",
                                    "properties": {},
                                    "description": "A list of objects representing contact types, where each object must include an integer `id` and a string `type`."
                                },
                                "phones": {
                                    "type": "object",
                                    "properties": {},
                                    "description": "A list of resource identifier objects for the associated phones. Each object must contain an `id` as an integer and a `type` as a string."
                                }
                            },
                            "description": ""
                        }
                    },
                    "description": "An object that contains the updated contact details for the supplier.",
                    "required": [
                        "attributes",
                        "data",
                        "id",
                        "relationships",
                        "type"
                    ]
                }
            },
            "required": [
                "external_id"
            ]
        }
    },
    {
        "name": "update_supplier_contact_by_id",
        "description": "Updates the details of an existing supplier contact, with the option to modify related contact types and phone records. The request body must include the contact `id`, which is required to match the `id` provided in the path parameter.",
        "parameters": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The required and unique identifier for the supplier contact to be updated."
                },
                "_include": {
                    "type": "string",
                    "description": "Specifies a comma-separated list of related resources to include in the response. Allowed values are `supplier_company`, `contact_types`, and `phones`."
                },
                "body": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "object",
                            "properties": {},
                            "description": ""
                        },
                        "type": {
                            "type": "string",
                            "description": "Specifies the resource type. This field is required and must have the value `supplier_contacts`."
                        },
                        "id": {
                            "type": "integer",
                            "description": "The unique identifier for the supplier contact. This value is required and must match the `id` provided in the URL path."
                        },
                        "attributes": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "The contact's full name, with a maximum length of 255 characters. This parameter is required unless both `first_name` and `last_name` are provided."
                                },
                                "first_name": {
                                    "type": "string",
                                    "description": "The first name, which cannot exceed 255 characters."
                                },
                                "last_name": {
                                    "type": "string",
                                    "description": "The last name of the supplier contact, which cannot exceed 255 characters."
                                },
                                "email": {
                                    "type": "string",
                                    "description": "A required email address for the supplier contact, which must not exceed 255 characters."
                                },
                                "notes": {
                                    "type": "string",
                                    "description": "Additional information or comments about the supplier contact."
                                },
                                "phone_number": {
                                    "type": "string",
                                    "description": "This field is deprecated. Use the `phones` relationship instead."
                                },
                                "job_title": {
                                    "type": "string",
                                    "description": "The job title of the contact."
                                },
                                "external_id": {
                                    "type": "string",
                                    "description": "A unique identifier from an external system used to reference the supplier contact."
                                },
                                "is_suggested": {
                                    "type": "boolean",
                                    "description": "Indicates whether the contact is considered suggested or unapproved."
                                }
                            },
                            "description": "",
                            "required": [
                                "email",
                                "name"
                            ]
                        },
                        "relationships": {
                            "type": "object",
                            "properties": {
                                "contact_types": {
                                    "type": "object",
                                    "properties": {},
                                    "description": "A list of resource identifier objects for the contact types. Each object must contain an integer `id` and a string `type`."
                                },
                                "phones": {
                                    "type": "object",
                                    "properties": {},
                                    "description": "A list of resource identifier objects. Each object must contain an integer `id` and a string `type`."
                                }
                            },
                            "description": ""
                        }
                    },
                    "description": "A data payload containing the updated contact information for the supplier.",
                    "required": [
                        "attributes",
                        "data",
                        "id",
                        "relationships",
                        "type"
                    ]
                }
            },
            "required": [
                "id"
            ]
        }
    }
]