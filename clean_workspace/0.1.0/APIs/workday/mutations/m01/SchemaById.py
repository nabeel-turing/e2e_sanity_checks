# This file is automatically generated by the MutationBuilder

def fetch_scim_schema_by_uri(scim_schema_uri):
    """
    Retrieves a specific SCIM schema by its URI.

    This endpoint provides the structure and metadata for a SCIM resource type, including all attributes and constraints, as defined by the schema URI (e.g., User, Group).

    Args:
        scim_schema_uri (str): Schema URI identifying the SCIM resource type.
            - Example: "urn:ietf:params:scim:schemas:core:2.0:User"

    Returns:
        Optional[Dict[str, Any]]: None or the definition of the SCIM schema. If found, it can contain the following keys:
            - schemas (List[str]): List of schema URIs this response complies with.
            - id (str): Unique identifier of the schema.
            - meta (Dict[str, str]):
                - resourceType (str): Type of resource.
                - location (str): URI to fetch the schema.
            - name (str): Human-readable schema name.
            - description (str): Human-readable schema description.
            - attributes (List[Dict[str, Any]]): Attributes defined by this schema.
                - name (str): Name of the attribute.
                - type (str): Data type (e.g., string, boolean).
                - subAttributes (List[Dict[str, Any]]): Nested attributes (for complex types).
                - multiValued (bool): Whether the attribute accepts multiple values.
                - description (str): Description of the attribute.
                - required (str): Whether the attribute is required ("true" or "false").
                - canonicalValues (List[str]): List of valid values for the attribute.
                - caseExact (bool): Indicates case sensitivity.
                - mutability (str): Defines write access (e.g., readOnly, readWrite).
                - returned (str): Visibility in responses (e.g., always, default).
                - uniqueness (str): Defines uniqueness level (none, server, global).
                - referenceTypes (List[str]): Reference target types (if type = reference).
    """
    from workday.SchemaById import get
    return get(uri=scim_schema_uri)
