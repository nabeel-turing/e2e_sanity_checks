# This file is automatically generated by the MutationBuilder

def fetch_field_by_external_id(field_external_identifier):
    """
    Retrieves the details of a specific field by its external ID.

    This function returns the complete details of a field identified by its
    external identifier. The function searches through all fields to find a
    match for the provided external ID.

    Args:
        field_external_identifier (str): The external identifier of the field to retrieve.

    Returns:
        Dict: A dictionary containing the field details, including:
            - id (Union[int, str]): Internal unique identifier of the field
            - external_id (str): The provided external identifier
            - name (str): Name of the field
            - type (str): Data type of the field (e.g., 'text', 'number', 'date')
            - required (bool): Whether the field is required
            - description (str): Detailed description of the field
            - created_at (str): Timestamp of field creation
            - updated_at (str): Timestamp of last update
            - configurations (Dict): Field-specific settings
            - Other properties as defined in the database

    Raises:
        ValueError: If no field exists with the given external ID.

    Note:
        The function performs a linear search through all fields to find a match
        for the external ID. The returned field data is read-only and should not
        be modified directly.
    """
    from workday.FieldByExternalId import get
    return get(external_id=field_external_identifier)


def modify_field_by_external_id(field_external_id_for_update, field_update_payload=None):
    """
    Updates the details of an existing field by its external ID.

    This function updates the properties of a field identified by its external
    identifier. The function verifies that the provided body includes the correct
    external ID before performing the update.

    Args:
        field_external_id_for_update (str): The external identifier of the field to update.
        field_update_payload (Optional[Dict]): A dictionary containing the updated properties
            for the field, including:
            - external_id (str): Must match the external_id in the URL
            - name (str): Updated name of the field
            - type (str): Updated data type of the field
            - required (bool): Updated required status
            - description (str): Updated description
            - configurations (Dict): Updated field-specific settings
            - Other properties as defined in the database
            Defaults to None.

    Returns:
        Dict: The updated field data, including all current properties of the field.

    Raises:
        ValueError: If:
            - No field exists with the given external ID
            - The field_update_payload is None
            - The field_update_payload does not contain an 'field_external_id_for_update' field
            - The 'field_external_id_for_update' in the field_update_payload does not match the URL parameter

    Note:
        The function performs a linear search through all fields to find a match
        for the external ID. The update is performed atomically and will either
        succeed completely or fail without partial updates.
    """
    from workday.FieldByExternalId import patch
    return patch(external_id=field_external_id_for_update, body=field_update_payload)


def remove_field_by_external_id(field_external_id_to_delete):
    """
    Deletes a specific field from the system by its external ID.

    This function removes a field identified by its external identifier from
    the system. The function searches through all fields to find a match for
    the provided external ID before performing the deletion.

    Args:
        field_external_id_to_delete (str): The external identifier of the field to delete.

    Raises:
        ValueError: If no field exists with the given external ID.

    Note:
        The function performs a linear search through all fields to find a match
        for the external ID. The deletion is permanent and cannot be undone.
    """
    from workday.FieldByExternalId import delete
    return delete(external_id=field_external_id_to_delete)
