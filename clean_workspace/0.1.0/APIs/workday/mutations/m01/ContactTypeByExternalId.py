# This file is automatically generated by the MutationBuilder

def modify_contact_category_by_external_id(contact_type_external_id, contact_category_update_payload=None):
    """
    Updates the details of an existing contact type using its external ID.

    This function allows for the modification of an existing contact type's properties
    by searching for it using its external identifier. It performs validation checks
    to ensure the update is valid and the contact type exists before applying the
    changes. The function supports partial updates of contact type properties.

    Args:
        contact_type_external_id (str): The unique external identifier of the contact type to update.
        contact_category_update_payload (Optional[Dict]): A dictionary containing the updated properties for
            the contact type. The dictionary must include:
            - type (str): Object type, should always be "contact_types"
            - id (int): Contact type identifier
            - external_id (str): Contact type external identifier (max 255 characters)
            - name (str): Contact type name (max 255 characters)

    Returns:
        Tuple[Dict, int]: A tuple containing:
            - An error message if the body is missing or if the external_id in the body doesn't
                match the URL parameter or if contact type is not found.
                This is a dictionary with the key "error" and the value is the error message.
            - Dict: The updated contact type data if successful, including:
                - id (int): Internal identifier of the contact type
                - external_id (str): External identifier of the contact type
                - All updated fields from the body
            - int: The HTTP status code:
                - 200: Contact type successfully updated
                - 400: Invalid request or mismatched external_id
                - 404: Contact type not found


    Note:
        The function performs a partial update, meaning only the fields provided
        in the body will be updated. All other fields will remain unchanged.
    """
    from workday.ContactTypeByExternalId import patch
    return patch(external_id=contact_type_external_id, body=contact_category_update_payload)


def remove_contact_category_by_external_id(contact_type_external_id_for_deletion):
    """
    Deletes a contact type from the system using its external ID.

    Args:
        contact_type_external_id_for_deletion (str): The unique external identifier of the contact type to delete.

    Returns:
        Tuple[Dict, int]: A tuple containing:
            - Dict: An empty dictionary if successful, or an error message with the key "error" if the
                contact type is not found.
            - int: The HTTP status code:
                - 204: Contact type successfully deleted
                - 404: Contact type not found
    """
    from workday.ContactTypeByExternalId import delete
    return delete(external_id=contact_type_external_id_for_deletion)
