# This file is automatically generated by the MutationBuilder

def assign_suppliers_to_event_by_external_id(target_rfp_event_external_id, supplier_external_ids_payload):
    """
    Add suppliers to an event using external identifiers. Only events of type RFP are supported.

    Args:
        target_rfp_event_external_id (str): The unique external identifier of the event to
            which suppliers will be added.
        supplier_external_ids_payload (dict): A dictionary containing the supplier information, including:
            - supplier_external_ids (List[str], optional): A list of supplier external IDs to be
                added to the event
            - type (str): Object type, should always be "supplier_companies"

    Returns:
        Optional[Dict]: The updated event data if successful, including the newly
            added suppliers. Returns None if:
            - The event does not exist
            - The event is not of type RFP
            - The operation fails
    """
    from workday.EventSupplierCompaniesExternalId import post
    return post(event_external_id=target_rfp_event_external_id, data=supplier_external_ids_payload)


def unassign_suppliers_from_event_by_external_id(rfp_event_external_id_for_removal, supplier_external_ids_to_remove_from_event):
    """
    Removes supplier companies from a specific event using external identifiers. Only events of type RFP are supported.

    Args:
        rfp_event_external_id_for_removal (str): The unique external identifier of the event from
            which suppliers will be removed.
        supplier_external_ids_to_remove_from_event (dict): A dictionary containing the supplier information, including:
            - supplier_external_ids (List[str]): A list of supplier external IDs to be
                removed from the event
            - type (str): Object type, should always be "supplier_companies"
    Returns:
        Optional[Dict]: The updated event data if successful, with the specified
            suppliers removed. Returns None if:
            - The event does not exist
            - The event is not of type RFP
            - The operation fails
    """
    from workday.EventSupplierCompaniesExternalId import delete
    return delete(
        event_external_id=rfp_event_external_id_for_removal,
        data=supplier_external_ids_to_remove_from_event
    )
