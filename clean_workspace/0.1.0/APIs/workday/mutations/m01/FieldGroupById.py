# This file is automatically generated by the MutationBuilder

def fetch_field_group_details(field_group_identifier):
    """
    Retrieves the details of a specific field group by its ID.

    This function returns the complete details of a field group identified by its
    unique identifier. The function supports both string and integer ID formats.

    Args:
        field_group_identifier (str): The unique identifier of the field group to retrieve.

    Returns:
        Optional[Dict]: A dictionary containing the field group details if found,
            including any of the following fields:
                - type (str): Object type, should always be "field_groups"
                - id (str): Field group identifier string
                - fields (List): List of fields belonging to this group
                - name (str): Field group name (max 255 characters)
                - description (str): Field group description (max 255 characters)
                - attributes (dict): Field group attributes containing:
                    - target_object (str): Field group object type string, one of:
                        - "PROJECT"
                        - "SUPPLIER_COMPANY"
                        - "RFP"
                    - name (str): Field group name (max 255 characters)
                    - position (int): Field group position on the UI
    """
    from workday.FieldGroupById import get
    return get(id=field_group_identifier)


def modify_field_group_by_identifier(field_group_id_to_update, field_group_update_data):
    """
    Updates the details of an existing field group.

    Args:
        field_group_id_to_update (str): The unique identifier of the field group to update.
        field_group_update_data (Dict): A dictionary containing the updated properties for the
            field group, including any of the following fields:
            - type (str): Object type, should always be "field_groups"
            - id (int): Field group identifier string. Same as the id parameter.
            - fields (List): List of fields belonging to this group
            - name (str): Field group name (max 255 characters)
            - description (str): Field group description (max 255 characters)
            - attributes (dict): Field group attributes containing:
                - target_object (str): Field group object type string, one of:
                    - "PROJECT"
                    - "SUPPLIER_COMPANY"
                    - "RFP"
                - name (str): Field group name (max 255 characters)

    Returns:
        Optional[Dict]: The updated field group data if the update was successful,
            including all current properties of the field group. 
            - type (str): Object type, should always be "field_groups"
            - id (str): Field group identifier string
            - fields (List): List of fields belonging to this group
            - name (str): Field group name (max 255 characters)
            - description (str): Field group description (max 255 characters)
            - attributes (dict): Field group attributes containing:
                - target_object (str): Field group object type string, one of:
                    - "PROJECT"
                    - "SUPPLIER_COMPANY"
                    - "RFP"
                - name (str): Field group name (max 255 characters)
                - position (int): Field group position on the UI

            Returns None if:
            - The field group does not exist
            - The ID format is invalid
    """
    from workday.FieldGroupById import patch
    return patch(id=field_group_id_to_update, options=field_group_update_data)


def remove_field_group_from_system(field_group_id_for_deletion):
    """
    Deletes a specific field group from the system.

    Args:
        field_group_id_for_deletion (str): The unique identifier of the field group to delete.

    Returns:
        bool: True if the field group was successfully deleted, False if:
            - The field group does not exist
            - The ID format is invalid
    """
    from workday.FieldGroupById import delete
    return delete(id=field_group_id_for_deletion)
