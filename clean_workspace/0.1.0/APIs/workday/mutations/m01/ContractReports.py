# This file is automatically generated by the MutationBuilder

def retrieve_contract_report_data():
    """
    Retrieves a list of contract report entries.

    Contract reports are aggregated data entries related to contract performance, values, timelines, or milestones.
    This endpoint returns all available contract report entries in a simple list format.

    Returns:
        List[Dict[str, Any]]: List of contract report entries, where each entry contains:
            - id (str): Unique identifier for the contract report entry (e.g., "CR001")
            - contract_id (str): Reference identifier linking to the associated contract (e.g., "CON001")
            - summary (str): Human-readable description of the contract report status or action
                (e.g., "Contract signed and executed", "Pending approval", "Final amendments completed")

    Raises:
        HTTPError 401: Unauthorized – API key or user credentials are missing or invalid.
    """
    from workday.ContractReports import get_entries
    return get_entries()


def fetch_contract_report_schema():
    """
    Retrieves the schema definition for contract report entries.

    The schema outlines the available fields, their types, and how data is structured within contract reports. 
    This information is useful for dynamically interpreting or building UIs and integrations based on contract data fields.

    Returns:
        Dict[str, Any]: Schema structure of the contract report.

            - data (Dict[str, Any]):
                - id (str): Always "contract_schemas".
                - type (str): Always "contract_schemas".
                - attributes (Dict[str, Any]):
                    - fields (List[Dict[str, Any]]): List of available fields.
                        - type (str): Field type. Enum: "text", "date", "integer", "select", "string".
                        - name (str): Name of the field.

    Raises:
        HTTPError 401: Unauthorized – API key or user credentials are missing or invalid.
    """
    from workday.ContractReports import get_schema
    return get_schema()
