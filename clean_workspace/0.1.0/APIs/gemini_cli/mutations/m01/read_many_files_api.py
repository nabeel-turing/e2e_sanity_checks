# This file is automatically generated by the MutationBuilder

def fetch_multiple_files_content(
    file_paths_or_patterns,
    *,
    additional_inclusion_patterns=None,
    exclusion_glob_patterns=None,
    search_subdirectories=True,
    apply_default_exclusions=True,
    honor_gitignore_file=True
):
    """
    Read content from multiple files specified by paths or glob patterns.

    This function reads and concatenates content from multiple files. For text files,
    it concatenates their content with separators. For image/PDF files explicitly
    requested, it returns them as base64-encoded data.

    Args:
        file_paths_or_patterns (List[str]): Required. Array of glob patterns or paths relative to the
            workspace root. Examples: ['src/**/*.py'], ['README.md', 'docs/']
        additional_inclusion_patterns (Optional[List[str]]): Additional glob patterns to include. These are
            merged with `paths`. Example: ["*.test.py"] to add test files.
        exclusion_glob_patterns (Optional[List[str]]): Glob patterns for files/directories to exclude.
            Added to default excludes if useDefaultExcludes is True.
        search_subdirectories (Optional[bool]): Whether to search recursively. Primarily controlled
            by `**` in glob patterns. Defaults to True.
        apply_default_exclusions (Optional[bool]): Whether to apply default exclusion patterns
            (e.g., node_modules, .git, binary files). Defaults to True.
        honor_gitignore_file (Optional[bool]): Whether to respect .gitignore patterns.
            Defaults to True (note: simplified implementation for simulation).

    Returns:
        Dict[str, Any]: A dictionary containing the operation result with keys:
            - success (bool): Whether the operation succeeded
            - message (str): Success/status message
            - content_parts (List): List of content parts (strings for text, objects for media)
            - processed_files (List[str]): List of successfully processed file paths
            - skipped_files (List[Dict]): List of skipped files with reasons
            - total_files_found (int): Total number of files discovered
            - total_files_processed (int): Number of files successfully processed

    Raises:
        InvalidInputError: If file_paths_or_patterns is empty, not a list, or contains invalid patterns.
        WorkspaceNotAvailableError: If workspace_root is not configured.
    """
    from gemini_cli.read_many_files_api import read_many_files
    return read_many_files(
        paths=file_paths_or_patterns,
        include=additional_inclusion_patterns,
        exclude=exclusion_glob_patterns,
        recursive=search_subdirectories,
        useDefaultExcludes=apply_default_exclusions,
        respect_git_ignore=honor_gitignore_file
    )
