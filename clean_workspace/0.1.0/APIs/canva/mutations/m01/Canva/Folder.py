# This file is automatically generated by the MutationBuilder

def make_new_directory(directory_name, containing_folder_id):
    """
    Creates a new folder with the given name under the specified parent folder.

    Args:
        directory_name (str): Name of the new folder (1–255 characters).
        containing_folder_id (str): ID of the parent folder (1–50 characters).

    Returns:
        Dict[str, Any]: Metadata of the newly created folder including:
            - id (str): The folder ID.
            - name (str): The folder name.
            - created_at (int): Timestamp of creation (Unix time).
            - updated_at (int): Timestamp of last update (Unix time).
            - thumbnail (dict):
                - width (int): Width of the thumbnail in pixels.
                - height (int): Height of the thumbnail in pixels.
                - url (str): URL to retrieve the thumbnail image.
            - parent_id (str): ID of the parent folder.

    Raises:
        ValueError: If the directory_name or containing_folder_id is invalid or the parent does not exist.
    """
    from canva.Canva.Folder import create_folder
    return create_folder(name=directory_name, parent_folder_id=containing_folder_id)


def retrieve_directory_details(directory_identifier):
    """
    Retrieves metadata for a specific folder.

    Args:
        directory_identifier (str): ID of the folder to retrieve.

    Returns:
        Dict[str, Any]: A dictionary with the key 'folder' containing:
            - id (str): The folder ID.
            - name (str): The folder name.
            - created_at (int): Timestamp of creation (Unix time).
            - updated_at (int): Timestamp of last update (Unix time).
            - thumbnail (dict):
                - width (int): Width of the thumbnail in pixels.
                - height (int): Height of the thumbnail in pixels.
                - url (str): URL to retrieve the thumbnail image.
            - parent_id (str): ID of the parent folder.

    Raises:
        ValueError: If the folder ID does not exist.
    """
    from canva.Canva.Folder import get_folder
    return get_folder(folder_id=directory_identifier)


def rename_directory(target_directory_id, updated_directory_name):
    """
    Updates the name of a folder and its modification timestamp.

    Args:
        target_directory_id (str): ID of the folder to update.
        updated_directory_name (str): New name for the folder (1–255 characters).

    Returns:
        Dict[str, Any]: A dictionary with the key 'folder' containing updated folder metadata:
            - id (str): The folder ID.
            - name (str): The updated folder name.
            - created_at (int): Timestamp of creation (unchanged).
            - updated_at (int): Updated timestamp (Unix time).
            - thumbnail (dict):
                - width (int): Width of the thumbnail in pixels.
                - height (int): Height of the thumbnail in pixels.
                - url (str): URL to retrieve the thumbnail image.
            - parent_id (str): ID of the parent folder.

    Raises:
        ValueError: If the folder does not exist or updated_directory_name is invalid.
    """
    from canva.Canva.Folder import update_folder
    return update_folder(folder_id=target_directory_id, name=updated_directory_name)


def remove_directory_and_contents(folder_to_delete_id):
    """
    Deletes a folder and all its contents recursively.

    Args:
        folder_to_delete_id (str): ID of the folder to delete.

    Returns:
        Dict[str, Any]: Returns a success message on successful deletion with structure:
            - message (str): Success message indicating the folder and its contents were deleted

    Raises:
        ValueError: If the folder ID does not exist.
    """
    from canva.Canva.Folder import delete_folder
    return delete_folder(folder_id=folder_to_delete_id)


def enumerate_directory_contents(
    target_folder_identifier,
    content_type_filter=None,
    sorting_preference='modified_descending',
    pagination_cursor=None
):
    """
    Lists items (folders, designs, images) within a specified folder.

    Args:
        target_folder_identifier (str): The ID of the folder to list items from.
        content_type_filter (Optional[List[str]]): Comma-delimited list of item types to filter by.
            Valid values: "folder", "design", "image".
        sorting_preference (Optional[str]): Field used to sort the results.
            Valid values:
                - "created_ascending"
                - "created_descending"
                - "modified_ascending"
                - "modified_descending" (default)
                - "title_ascending"
                - "title_descending"
        pagination_cursor (Optional[str]): Continuation token for paginated responses.

    Returns:
        Dict[str, Any]: A dictionary containing:
            - items (List[Dict[str, Any]]): An array of folder items. Each item includes:
                - type (str): The item type ("folder", "design", or "image").

                If type == "folder":
                    - folder (dict):
                        - id (str): The folder ID.
                        - name (str): The folder name.
                        - created_at (int): Creation timestamp (Unix time).
                        - updated_at (int): Last updated timestamp.
                        - thumbnail (dict, optional):
                            - width (int)
                            - height (int)
                            - url (str)

                If type == "design":
                    - design (dict):
                        - id (str)
                        - title (str, optional)
                        - created_at (int)
                        - updated_at (int)
                        - page_count (int, optional)
                        - urls (dict):
                            - edit_url (str)
                            - view_url (str)
                        - thumbnail (dict, optional):
                            - width (int)
                            - height (int)
                            - url (str)

                If type == "image":
                    - image (dict):
                        - id (str)
                        - name (str)
                        - tags (List[str])
                        - type (str)
                        - created_at (int)
                        - updated_at (int)
                        - thumbnail (dict, optional):
                            - width (int)
                            - height (int)
                            - url (str)

            - continuation (Optional[str]): Continuation token to retrieve the next page of results, if available.

    Raises:
        ValueError: If the folder ID does not exist.
    """
    from canva.Canva.Folder import list_folder_items
    return list_folder_items(
        folder_id=target_folder_identifier,
        item_types=content_type_filter,
        sort_by=sorting_preference,
        continuation=pagination_cursor
    )
