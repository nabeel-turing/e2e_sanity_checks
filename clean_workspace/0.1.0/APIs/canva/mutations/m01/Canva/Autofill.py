# This file is automatically generated by the MutationBuilder

def initiate_design_autofill_task(source_template_identifier, autofill_payload, new_design_title=None):
    """
    Creates an asynchronous job to autofill a design from a brand template with input data.

    Args:
        source_template_identifier (str): ID of the input brand template.
        autofill_payload (Dict[str, Any]): Dictionary of data fields to autofill. Each key maps to a field object with:
            - type (str): Required. One of "image", "text", or "chart".
            - asset_id (str, optional): Required if type is "image".
            - text (str, optional): Required if type is "text".
            - chart_data (dict, optional): Required if type is "chart". Structure:
                - rows (List[dict]): List of rows, where each row contains:
                    - cells (List[dict]): List of cells, each with:
                        - type (str): One of "string", "number", "boolean", "date".
                        - value: Value of the cell.
        new_design_title (Optional[str]): Optional title for the autofilled design. If not provided, defaults to the template's title.

    Returns:
        Dict[str, Any]: A dictionary representing the created autofill job, including:
            - id (str): Unique ID of the autofill job.
            - status (str): Status of the job. One of "success", "in_progress", or "failed".
            - result (dict, optional): Present only if status is "success". Includes:
                - type (str): "create_design"
                - design (dict):
                    - id (str): Design ID.
                    - title (str): Design title.
                    - url (str): Permanent URL to the design (if available).
                    - thumbnail (dict, optional):
                        - width (int)
                        - height (int)
                        - url (str): Thumbnail URL (expires in 15 minutes).
    """
    from canva.Canva.Autofill import create_autofill_job
    return create_autofill_job(
        brand_template_id=source_template_identifier,
        data=autofill_payload,
        title=new_design_title
    )


def fetch_autofill_task_status(autofill_job_identifier):
    """
    Retrieves the status and results of an autofill job by its ID.

    Args:
        autofill_job_identifier (str): The ID of the autofill job to retrieve.

    Returns:
        Dict[str, Any]: If found, returns job details:
            - id (str): Job ID.
            - status (str): Job status ("in_progress", "success", "failed").
            - result (dict, optional): Present only if status is "success". Includes:
                - type (str): "create_design"
                - design (dict):
                    - id (str): Design ID.
                    - title (str): Design title.
                    - url (str, optional): Permanent URL of the design.
                    - thumbnail (dict, optional):
                        - width (int)
                        - height (int)
                        - url (str): Thumbnail URL (expires in 15 minutes).
        If not found, returns:
            - error (str): Error message ("Job not found").
    """
    from canva.Canva.Autofill import get_autofill_job
    return get_autofill_job(job_id=autofill_job_identifier)
